{"version":3,"file":"battle-scene-stub.js","names":["BattleSceneStub","animating","acceleration","NaN","gen","activeCount","numericId","timeOffset","interruptionCount","messagebarOpen","log","add","args","kwargs","$frame","_proto","prototype","abilityActivateAnim","pokemon","result","addPokemonSprite","addSideCondition","siden","id","instant","animationOff","animationOn","maybeCloseMessagebar","kwArgs","closeMessagebar","damageAnim","damage","destroy","finishAnimations","undefined","healAnim","hideJoinButtons","incrementTurn","updateAcceleration","message","hiddenMessage","pause","setMute","muted","preemptCatchup","removeSideCondition","reset","resetBgm","updateBgm","resultAnim","type","typeAnim","types","resume","runMoveAnim","moveid","participants","runOtherAnim","runPrepareAnim","attacker","defender","runResidualAnim","runStatusAnim","startAnimations","teamPreview","resetSides","updateGen","updateSidebar","side","updateSidebars","updateStatbars","updateWeather","upkeepWeather","wait","time","setFrameHTML","html","setControlsHTML","removeEffect","addEffect","animSummon","slot","animUnsummon","animDragIn","animDragOut","resetStatbar","startHidden","updateStatbar","updatePrevhp","updateHp","updateStatbarIfExists","animTransform","useSpeciesAnim","isPermanent","clearEffects","removeTransform","animFaint","animReset","anim","end","transition","beforeMove","afterMove","require","global"],"sources":["../src/battle-scene-stub.ts"],"sourcesContent":["import type { Pokemon, Side } from './battle';\r\nimport type { ScenePos, PokemonSprite } from './battle-animations';\r\nimport type { BattleLog } from './battle-log';\r\nimport type { ID } from './battle-dex';\r\nimport type { Args, KWArgs } from './battle-text-parser';\r\n\r\nexport class BattleSceneStub {\r\n\tanimating = false;\r\n\tacceleration = NaN;\r\n\tgen = NaN;\r\n\tactiveCount = NaN;\r\n\tnumericId = NaN;\r\n\ttimeOffset = NaN;\r\n\tinterruptionCount = NaN;\r\n\tmessagebarOpen = false;\r\n\tlog: BattleLog = { add: (args: Args, kwargs?: KWArgs) => {} } as any;\r\n\t$frame?: JQuery;\r\n\r\n\tabilityActivateAnim(pokemon: Pokemon, result: string): void { }\r\n\taddPokemonSprite(pokemon: Pokemon): PokemonSprite { return null!; }\r\n\taddSideCondition(siden: number, id: ID, instant?: boolean): void { }\r\n\tanimationOff(): void { }\r\n\tanimationOn(): void { }\r\n\tmaybeCloseMessagebar(args: Args, kwArgs: KWArgs): boolean { return false; }\r\n\tcloseMessagebar(): boolean { return false; }\r\n\tdamageAnim(pokemon: Pokemon, damage: string | number): void { }\r\n\tdestroy(): void { }\r\n\tfinishAnimations(): JQuery.Promise<JQuery> | undefined { return undefined; }\r\n\thealAnim(pokemon: Pokemon, damage: string | number): void { }\r\n\thideJoinButtons(): void { }\r\n\tincrementTurn(): void { }\r\n\tupdateAcceleration(): void { }\r\n\tmessage(message: string, hiddenMessage?: string): void { }\r\n\tpause(): void { }\r\n\tsetMute(muted: boolean): void { }\r\n\tpreemptCatchup(): void { }\r\n\tremoveSideCondition(siden: number, id: ID): void { }\r\n\treset(): void { }\r\n\tresetBgm(): void { }\r\n\tupdateBgm(): void { }\r\n\tresultAnim(\r\n\t\tpokemon: Pokemon, result: string, type: \"bad\" | \"good\" | \"neutral\" | \"par\" | \"psn\" | \"frz\" | \"slp\" | \"brn\"\r\n\t): void { }\r\n\ttypeAnim(pokemon: Pokemon, types: string): void { }\r\n\tresume(): void { }\r\n\trunMoveAnim(moveid: ID, participants: Pokemon[]): void { }\r\n\trunOtherAnim(moveid: ID, participants: Pokemon[]): void { }\r\n\trunPrepareAnim(moveid: ID, attacker: Pokemon, defender: Pokemon): void { }\r\n\trunResidualAnim(moveid: ID, pokemon: Pokemon): void { }\r\n\trunStatusAnim(moveid: ID, participants: Pokemon[]): void { }\r\n\tstartAnimations(): void { }\r\n\tteamPreview(): void { }\r\n\tresetSides(): void { }\r\n\tupdateGen(): void { }\r\n\tupdateSidebar(side: Side): void { }\r\n\tupdateSidebars(): void { }\r\n\tupdateStatbars(): void { }\r\n\tupdateWeather(instant?: boolean): void { }\r\n\tupkeepWeather(): void { }\r\n\twait(time: number): void { }\r\n\tsetFrameHTML(html: any): void { }\r\n\tsetControlsHTML(html: any): void { }\r\n\tremoveEffect(pokemon: Pokemon, id: ID, instant?: boolean) { }\r\n\taddEffect(pokemon: Pokemon, id: ID, instant?: boolean) { }\r\n\tanimSummon(pokemon: Pokemon, slot: number, instant?: boolean) { }\r\n\tanimUnsummon(pokemon: Pokemon, instant?: boolean) { }\r\n\tanimDragIn(pokemon: Pokemon, slot: number) { }\r\n\tanimDragOut(pokemon: Pokemon) { }\r\n\tresetStatbar(pokemon: Pokemon, startHidden?: boolean) { }\r\n\tupdateStatbar(pokemon: Pokemon, updatePrevhp?: boolean, updateHp?: boolean) { }\r\n\tupdateStatbarIfExists(pokemon: Pokemon, updatePrevhp?: boolean, updateHp?: boolean) { }\r\n\tanimTransform(pokemon: Pokemon, useSpeciesAnim?: boolean, isPermanent?: boolean) { }\r\n\tclearEffects(pokemon: Pokemon) { }\r\n\tremoveTransform(pokemon: Pokemon) { }\r\n\tanimFaint(pokemon: Pokemon) { }\r\n\tanimReset(pokemon: Pokemon) { }\r\n\tanim(pokemon: Pokemon, end: ScenePos, transition?: string) { }\r\n\tbeforeMove(pokemon: Pokemon) { }\r\n\tafterMove(pokemon: Pokemon) { }\r\n}\r\n\r\ndeclare const require: any;\r\ndeclare const global: any;\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\tglobal.BattleSceneStub = BattleSceneStub;\r\n}\r\n"],"mappings":"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","ignoreList":[]}