{
  "version": 3,
  "sources": ["../../../client/src/panel-rooms.tsx"],
  "sourcesContent": ["/**\r\n * Room-list panel (default right-panel)\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport { PS, PSRoom, type RoomID, type RoomOptions } from \"./client-main\";\r\nimport { PSPanelWrapper, PSRoomPanel } from \"./panels\";\r\nimport type { RoomInfo } from \"./panel-mainmenu\";\r\nimport { toID } from \"./battle-dex\";\r\n\r\nexport class RoomsRoom extends PSRoom {\r\n\toverride readonly classType: string = 'rooms';\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tPS.send(`/cmd rooms`);\r\n\t}\r\n}\r\n\r\ntype RoomsSection = [string, RoomInfo[]];\r\nclass RoomsPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'rooms';\r\n\tstatic readonly routes = ['rooms'];\r\n\tstatic readonly Model = RoomsRoom;\r\n\tstatic readonly location = 'right';\r\n\tstatic readonly icon = <i class=\"fa fa-plus rooms-plus\" aria-hidden></i>;\r\n\tstatic readonly title = \"Chat Rooms\";\r\n\thidden = false;\r\n\tsearch = '';\r\n\tsection = '';\r\n\tlastKeyCode = 0;\r\n\troomList: RoomsSection[] = [];\r\n\troomListFocusIndex = -1;\r\n\troomListLength = 0;\r\n\toverride componentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t\tthis.subscriptions.push(PS.user.subscribe(update => {\r\n\t\t\tif (!update && PS.user.named) PS.send(`/cmd rooms`);\r\n\t\t}));\r\n\t}\r\n\toverride componentDidUpdate() {\r\n\t\tconst el = this.base?.querySelector('a.blocklink.cur');\r\n\t\tif (!this.roomListFocusIndex) return;\r\n\t\tel?.scrollIntoView({ behavior: 'auto', block: 'center' });\r\n\t}\r\n\thide = (ev: Event) => {\r\n\t\tev.stopImmediatePropagation();\r\n\t\tPS.hideRightRoom();\r\n\t};\r\n\tchangeSearch = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tif (target.selectionStart !== target.selectionEnd) return;\r\n\t\tthis.updateRoomList(target.value);\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tchangeSection = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLSelectElement;\r\n\t\tthis.section = target.value;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\thandleOnBlur = (ev: Event) => {\r\n\t\tthis.roomListFocusIndex = -1;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tkeyDownSearch = (ev: KeyboardEvent) => {\r\n\t\tthis.lastKeyCode = ev.keyCode;\r\n\t\tif (ev.shiftKey || ev.ctrlKey || ev.altKey || ev.metaKey) return;\r\n\t\tif (ev.keyCode === 38) { // up\r\n\t\t\tthis.roomListFocusIndex = Math.max(this.roomListFocusIndex - 1, this.search ? 0 : -1);\r\n\t\t\tthis.forceUpdate();\r\n\t\t\tev.preventDefault();\r\n\t\t} else if (ev.keyCode === 40) { // down\r\n\t\t\tthis.roomListFocusIndex = Math.min(this.roomListFocusIndex + 1, this.roomListLength - 1);\r\n\t\t\tthis.forceUpdate();\r\n\t\t\tev.preventDefault();\r\n\t\t} else if (ev.keyCode === 13) { // enter\r\n\t\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\t\tlet value = this.getRoomListFocusTitle() || target.value;\r\n\t\t\tconst arrowIndex = value.indexOf(' \\u21d2 ');\r\n\t\t\tif (arrowIndex >= 0) value = value.slice(arrowIndex + 3);\r\n\t\t\tif (!/^[a-z0-9-]$/.test(value)) value = toID(value);\r\n\t\t\tev.preventDefault();\r\n\t\t\tev.stopImmediatePropagation();\r\n\t\t\ttarget.value = '';\r\n\t\t\tthis.updateRoomList('');\r\n\r\n\t\t\tPS.join(value as RoomID);\r\n\t\t}\r\n\t};\r\n\tupdateRoomList(search?: string) {\r\n\t\tif (search) search = toID(search);\r\n\t\tconst forceNoAutocomplete = this.search === `${search || ''}-`;\r\n\t\tif (search || this.search) {\r\n\t\t\tif (search === undefined || search === this.search) return;\r\n\t\t\tthis.search = search;\r\n\t\t\tthis.roomListFocusIndex = this.search ? 0 : -1;\r\n\t\t}\r\n\t\tthis.roomList = this.getRoomList(forceNoAutocomplete);\r\n\t\tfor (const [, rooms] of this.roomList) {\r\n\t\t\trooms.sort((a, b) => (b.userCount || 0) - (a.userCount || 0));\r\n\t\t}\r\n\t}\r\n\tgetRoomList(forceNoAutocomplete?: boolean): RoomsSection[] {\r\n\t\tconst searchid = toID(this.search);\r\n\r\n\t\tif (!searchid) {\r\n\t\t\tconst roomsCache = PS.mainmenu.roomsCache;\r\n\t\t\tconst officialRooms = [], chatRooms = [], hiddenRooms = [];\r\n\t\t\tfor (const room of roomsCache.chat || []) {\r\n\t\t\t\tif (room.section !== this.section && this.section !== '') continue;\r\n\t\t\t\tif (room.privacy === 'hidden') {\r\n\t\t\t\t\thiddenRooms.push(room);\r\n\t\t\t\t} else if (room.section === 'Official') {\r\n\t\t\t\t\tofficialRooms.push(room);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchatRooms.push(room);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [\r\n\t\t\t\t[\"Official chat rooms\", officialRooms],\r\n\t\t\t\t[\"Chat rooms\", chatRooms],\r\n\t\t\t\t[\"Hidden rooms\", hiddenRooms],\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tlet exactMatch = false;\r\n\r\n\t\tconst rooms = PS.mainmenu.roomsCache;\r\n\t\tlet roomList = [...(rooms.chat || [])];\r\n\t\tfor (const room of roomList) {\r\n\t\t\tif (!room.subRooms) continue;\r\n\t\t\tfor (const title of room.subRooms) {\r\n\t\t\t\troomList.push({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tdesc: `(Subroom of ${room.title})`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet results = roomList.filter(room => {\r\n\t\t\tconst titleid = toID(room.title);\r\n\t\t\tif (titleid === searchid) exactMatch = true;\r\n\t\t\treturn titleid.startsWith(searchid) ||\r\n\t\t\t\ttoID(room.title.replace(/^The /, '')).startsWith(searchid);\r\n\t\t});\r\n\t\troomList = roomList.filter(room => !results.includes(room));\r\n\r\n\t\tresults = results.concat(roomList.filter(room =>\r\n\t\t\ttoID(room.title.toLowerCase().replace(/\\b([a-z0-9])[a-z0-9]*\\b/g, '$1')).startsWith(searchid) ||\r\n\t\t\troom.title.replace(/[^A-Z0-9]+/g, '').toLowerCase().startsWith(searchid)\r\n\t\t));\r\n\r\n\t\tconst hidden: RoomsSection[] = !exactMatch ?\r\n\t\t\t[[\"Possible secret room\", [{ title: this.search, desc: \"(Private room?)\" }]]] : [];\r\n\r\n\t\tconst autoFill = this.lastKeyCode !== 127 && this.lastKeyCode >= 32;\r\n\t\tif (autoFill && !forceNoAutocomplete) {\r\n\t\t\tresults.sort((a, b) => (b.userCount || 0) - (a.userCount || 0));\r\n\t\t\tconst firstTitle = (results[0] || hidden[0][1][0]).title;\r\n\t\t\tlet firstTitleOffset = 0;\r\n\t\t\twhile (\r\n\t\t\t\tsearchid !== toID(firstTitle.slice(0, firstTitleOffset)) &&\r\n\t\t\t\tfirstTitleOffset < firstTitle.length // should never happen, but sanity against infinite loop\r\n\t\t\t) {\r\n\t\t\t\tfirstTitleOffset++;\r\n\t\t\t}\r\n\t\t\tlet autoFillValue = firstTitle.slice(firstTitleOffset);\r\n\t\t\tif (!autoFillValue && toID(firstTitle) !== searchid) {\r\n\t\t\t\tautoFillValue = ' \\u21d2 ' + firstTitle;\r\n\t\t\t}\r\n\t\t\tconst oldSearch = this.search;\r\n\t\t\tconst searchElem = this.base!.querySelector<HTMLInputElement>('input[type=search]')!;\r\n\t\t\tif (autoFillValue) {\r\n\t\t\t\tsearchElem.value = oldSearch + autoFillValue;\r\n\t\t\t\tsearchElem.setSelectionRange(oldSearch.length, oldSearch.length + autoFillValue.length);\r\n\t\t\t\tthis.search += '-';\r\n\t\t\t}\r\n\r\n\t\t\treturn [[\"Search results\", results], ...hidden];\r\n\t\t}\r\n\r\n\t\treturn [...hidden, [\"Search results\", results]];\r\n\t}\r\n\toverride render() {\r\n\t\tif (this.hidden && PS.isVisible(this.props.room)) this.hidden = false;\r\n\t\tif (this.hidden) {\r\n\t\t\treturn <PSPanelWrapper room={this.props.room} scrollable>{null}</PSPanelWrapper>;\r\n\t\t}\r\n\t\tconst rooms = PS.mainmenu.roomsCache;\r\n\t\tthis.updateRoomList();\r\n\r\n\t\treturn <PSPanelWrapper room={this.props.room} scrollable><div class=\"pad\">\r\n\t\t\t<button class=\"button\" style=\"float:right;font-size:10pt;margin-top:3px\" onClick={this.hide}>\r\n\t\t\t\t<i class=\"fa fa-caret-right\" aria-hidden></i> Hide\r\n\t\t\t</button>\r\n\t\t\t<div class=\"roomcounters\">\r\n\t\t\t\t<a class=\"button\" href=\"users\" title=\"Find an online user\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"pixelated usercount\"\r\n\t\t\t\t\t\ttitle=\"Meloetta is PS's mascot! The Aria forme is about using its voice, and represents our chatrooms.\"\r\n\t\t\t\t\t></span>\r\n\t\t\t\t\t<strong>{rooms.userCount || '-'}</strong> users online\r\n\t\t\t\t</a> {}\r\n\t\t\t\t<a class=\"button\" href=\"battles\" title=\"Watch an active battle\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"pixelated battlecount\"\r\n\t\t\t\t\t\ttitle=\"Meloetta is PS's mascot! The Pirouette forme is Fighting-type, and represents our battles.\"\r\n\t\t\t\t\t></span>\r\n\t\t\t\t\t<strong>{rooms.battleCount || '-'}</strong> active battles\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<select name=\"sections\" class=\"button\" onChange={this.changeSection}>\r\n\t\t\t\t\t<option value=\"\">(All rooms)</option>\r\n\t\t\t\t\t{rooms.sectionTitles?.map(title => {\r\n\t\t\t\t\t\treturn <option value={title}> {title} </option>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t\t<br /><br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"search\" name=\"roomsearch\" class=\"textbox autofocus\" style=\"width: 100%; max-width: 480px\"\r\n\t\t\t\t\tplaceholder=\"Join or search for rooms\" autocomplete=\"off\"\r\n\t\t\t\t\tonInput={this.changeSearch} onKeyDown={this.keyDownSearch} onBlur={this.handleOnBlur}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{this.renderRoomList()}\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n\tgetRoomListFocusTitle(): string | undefined {\r\n\t\treturn this.roomList.map(([, rooms]) => rooms).reduce((a, b) => a.concat(b))[this.roomListFocusIndex]?.title;\r\n\t}\r\n\trenderRoomList() {\r\n\t\tconst roomsCache = PS.mainmenu.roomsCache;\r\n\t\tif (roomsCache.userCount === undefined) {\r\n\t\t\treturn <div class=\"roomlist\"><h2>Official chat rooms</h2><p><em>Connecting...</em></p></div>;\r\n\t\t}\r\n\t\tif (this.search) {\r\n\t\t\t// do nothing\r\n\t\t} else if (PS.isOffline) {\r\n\t\t\treturn <div class=\"roomlist\"><h2>Offline</h2></div>;\r\n\t\t} else if (roomsCache.userCount === undefined) {\r\n\t\t\treturn <div class=\"roomlist\"><h2>Official chat rooms</h2><p><em>Connecting...</em></p></div>;\r\n\t\t}\r\n\r\n\t\t// Descending order\r\n\t\tlet nextOffset = 0;\r\n\t\treturn this.roomList.map(([title, rooms]) => {\r\n\t\t\tif (!rooms.length) return null;\r\n\r\n\t\t\tconst sortedRooms = rooms.sort((a, b) => (b.userCount || 0) - (a.userCount || 0));\r\n\t\t\tconst offset = nextOffset;\r\n\t\t\tnextOffset += sortedRooms.length;\r\n\t\t\tthis.roomListLength = nextOffset;\r\n\r\n\t\t\tconst index = this.roomListFocusIndex >= offset && this.roomListFocusIndex < nextOffset ?\r\n\t\t\t\tthis.roomListFocusIndex - offset : -1;\r\n\r\n\t\t\treturn <div class=\"roomlist\">\r\n\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t{sortedRooms.map((roomInfo, i) => <div key={roomInfo.title}>\r\n\t\t\t\t\t<a href={`/${toID(roomInfo.title)}`} class={`blocklink${i === index ? \" cur\" : ''}`}>\r\n\t\t\t\t\t\t{roomInfo.userCount !== undefined && <small style=\"float:right\">({roomInfo.userCount} users)</small>}\r\n\t\t\t\t\t\t<strong><i class=\"fa fa-comment-o\" aria-hidden></i> {roomInfo.title}<br /></strong>\r\n\t\t\t\t\t\t<small>{roomInfo.desc || ''}</small>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t{roomInfo.subRooms && <div class=\"subrooms\">\r\n\t\t\t\t\t\t<i class=\"fa fa-level-up fa-rotate-90\" aria-hidden></i> Subrooms: {}\r\n\t\t\t\t\t\t{roomInfo.subRooms.map(roomName => [<a href={`/${toID(roomName)}`} class=\"blocklink\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-comment-o\" aria-hidden></i> <strong>{roomName}</strong>\r\n\t\t\t\t\t\t</a>, ' '])}\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</div>)}\r\n\t\t\t</div>;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nPS.addRoomType(RoomsPanel);\r\n"],
  "mappings": "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",
  "names": []
}
