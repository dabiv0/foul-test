{
  "version": 3,
  "sources": ["../../../client/src/battle-sound.ts"],
  "sourcesContent": ["import { Config, PS } from \"./client-main\";\r\n\r\nexport class BattleBGM {\r\n\t/**\r\n\t * May be shared with other BGM objects: every battle has its own BattleBGM\r\n\t * object, but two battles with the same music will have the same HTMLAudioElement\r\n\t * object.\r\n\t */\r\n\tsound?: HTMLAudioElement;\r\n\turl: string;\r\n\ttimer: number | undefined = undefined;\r\n\tloopstart: number;\r\n\tloopend: number;\r\n\t/**\r\n\t * When multiple battles with BGM are open, they will be `isPlaying`, but only the\r\n\t * first one will be `isActuallyPlaying`. In addition, muting volume or setting\r\n\t * BGM volume to 0 will set `isActuallyPlaying` to false.\r\n\t */\r\n\tisPlaying = false;\r\n\tisActuallyPlaying = false;\r\n\t/**\r\n\t * The sound should be rewound when it next plays.\r\n\t */\r\n\twillRewind = true;\r\n\tconstructor(url: string, loopstart: number, loopend: number) {\r\n\t\tthis.url = url;\r\n\t\tthis.loopstart = loopstart;\r\n\t\tthis.loopend = loopend;\r\n\t}\r\n\tplay() {\r\n\t\tthis.willRewind = true;\r\n\t\tthis.resume();\r\n\t}\r\n\tresume() {\r\n\t\tthis.isPlaying = true;\r\n\t\tthis.actuallyResume();\r\n\t}\r\n\tpause() {\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.actuallyPause();\r\n\t\tBattleBGM.update();\r\n\t}\r\n\tstop() {\r\n\t\tthis.pause();\r\n\t\tthis.willRewind = true;\r\n\t}\r\n\tdestroy() {\r\n\t\tBattleSound.deleteBgm(this);\r\n\t\tthis.pause();\r\n\t}\r\n\r\n\tactuallyResume() {\r\n\t\tif (this !== BattleSound.currentBgm()) return;\r\n\t\tif (this.isActuallyPlaying) return;\r\n\r\n\t\tif (!this.sound) this.sound = BattleSound.getSound(this.url);\r\n\t\tif (!this.sound) return;\r\n\t\tif (this.willRewind) this.sound.currentTime = 0;\r\n\t\tthis.willRewind = false;\r\n\t\tthis.isActuallyPlaying = true;\r\n\t\tthis.sound.volume = BattleSound.bgmVolume / 100;\r\n\t\tthis.sound.play();\r\n\t\tthis.updateTime();\r\n\t}\r\n\tactuallyPause() {\r\n\t\tif (!this.isActuallyPlaying) return;\r\n\t\tthis.isActuallyPlaying = false;\r\n\t\tthis.sound!.pause();\r\n\t\tthis.updateTime();\r\n\t}\r\n\t/**\r\n\t * Handles the hard part of looping the sound\r\n\t */\r\n\tupdateTime() {\r\n\t\tclearTimeout(this.timer);\r\n\t\tthis.timer = undefined;\r\n\t\tif (this !== BattleSound.currentBgm()) return;\r\n\t\tif (!this.sound) return;\r\n\r\n\t\tconst progress = this.sound.currentTime * 1000;\r\n\t\tif (progress > this.loopend - 1000) {\r\n\t\t\tthis.sound.currentTime -= (this.loopend - this.loopstart) / 1000;\r\n\t\t}\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\t\t\tthis.updateTime();\r\n\t\t}, Math.max(this.loopend - progress, 1));\r\n\t}\r\n\r\n\tstatic update() {\r\n\t\tconst current = BattleSound.currentBgm();\r\n\t\tfor (const bgm of BattleSound.bgm) {\r\n\t\t\tif (bgm.isPlaying) {\r\n\t\t\t\tif (bgm === current) {\r\n\t\t\t\t\tbgm.actuallyResume();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbgm.actuallyPause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const BattleSound = new class {\r\n\tsoundCache: { [url: string]: HTMLAudioElement | undefined } = {};\r\n\r\n\tbgm: BattleBGM[] = [];\r\n\r\n\t// options\r\n\teffectVolume = 50;\r\n\tbgmVolume = 50;\r\n\tmuted = false;\r\n\r\n\tgetSound(url: string) {\r\n\t\tif (!window.HTMLAudioElement) return;\r\n\t\tif (this.soundCache[url]) return this.soundCache[url];\r\n\t\ttry {\r\n\t\t\tconst sound = document.createElement('audio');\r\n\t\t\tsound.src = `https://${Config.routes.client}/${url}`;\r\n\t\t\tsound.volume = this.effectVolume / 100;\r\n\t\t\tthis.soundCache[url] = sound;\r\n\t\t\treturn sound;\r\n\t\t} catch {}\r\n\t}\r\n\r\n\tplayEffect(url: string) {\r\n\t\tthis.playSound(url, this.muted ? 0 : this.effectVolume);\r\n\t}\r\n\r\n\tplaySound(url: string, volume: number) {\r\n\t\tif (!volume) return;\r\n\t\tconst effect = this.getSound(url);\r\n\t\tif (effect) {\r\n\t\t\teffect.volume = volume / 100;\r\n\t\t\teffect.play();\r\n\t\t}\r\n\t}\r\n\r\n\t/** loopstart and loopend are in milliseconds */\r\n\tloadBgm(url: string, loopstart: number, loopend: number, replaceBGM?: BattleBGM | null) {\r\n\t\tif (replaceBGM) {\r\n\t\t\treplaceBGM.stop();\r\n\t\t\tthis.deleteBgm(replaceBGM);\r\n\t\t}\r\n\r\n\t\tconst bgm = new BattleBGM(url, loopstart, loopend);\r\n\t\tthis.bgm.push(bgm);\r\n\t\treturn bgm;\r\n\t}\r\n\tdeleteBgm(bgm: BattleBGM) {\r\n\t\tconst soundIndex = BattleSound.bgm.indexOf(bgm);\r\n\t\tif (soundIndex >= 0) BattleSound.bgm.splice(soundIndex, 1);\r\n\t}\r\n\r\n\tcurrentBgm() {\r\n\t\tif (!this.bgmVolume || this.muted) return false;\r\n\t\tfor (const bgm of this.bgm) {\r\n\t\t\tif (bgm.isPlaying) return bgm;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// setting\r\n\tsetMute(muted: boolean) {\r\n\t\tmuted = !!muted;\r\n\t\tif (this.muted === muted) return;\r\n\t\tthis.muted = muted;\r\n\t\tBattleBGM.update();\r\n\t}\r\n\r\n\tloudnessPercentToAmplitudePercent(loudnessPercent: number) {\r\n\t\t// 10 dB is perceived as approximately twice as loud\r\n\t\tlet decibels = 10 * Math.log(loudnessPercent / 100) / Math.log(2);\r\n\t\treturn 10 ** (decibels / 20) * 100;\r\n\t}\r\n\tsetBgmVolume(bgmVolume: number) {\r\n\t\tthis.bgmVolume = this.loudnessPercentToAmplitudePercent(bgmVolume);\r\n\t\tBattleBGM.update();\r\n\t}\r\n\tsetEffectVolume(effectVolume: number) {\r\n\t\tthis.effectVolume = this.loudnessPercentToAmplitudePercent(effectVolume);\r\n\t}\r\n};\r\n\r\nif (typeof PS === 'object') {\r\n\tPS.prefs.subscribeAndRun(key => {\r\n\t\tif (!key || key === 'musicvolume' || key === 'effectvolume' || key === 'mute') {\r\n\t\t\tBattleSound.effectVolume = PS.prefs.effectvolume;\r\n\t\t\tBattleSound.bgmVolume = PS.prefs.musicvolume;\r\n\t\t\tBattleSound.muted = PS.prefs.mute;\r\n\t\t\tBattleBGM.update();\r\n\t\t}\r\n\t});\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
