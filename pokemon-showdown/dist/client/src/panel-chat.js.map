{
  "version": 3,
  "sources": ["../../../client/src/panel-chat.tsx"],
  "sourcesContent": ["/**\r\n * Chat panel\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport preact from \"../js/lib/preact\";\r\nimport type { PSSubscription } from \"./client-core\";\r\nimport { PS, PSRoom, type RoomOptions, type RoomID, type Team } from \"./client-main\";\r\nimport { PSView, PSPanelWrapper, PSRoomPanel } from \"./panels\";\r\nimport { TeamForm } from \"./panel-mainmenu\";\r\nimport { BattleLog } from \"./battle-log\";\r\nimport type { Battle } from \"./battle\";\r\nimport { MiniEdit } from \"./miniedit\";\r\nimport { Dex, PSUtils, toID, type ID } from \"./battle-dex\";\r\nimport { BattleTextParser, type Args } from \"./battle-text-parser\";\r\nimport { PSLoginServer } from \"./client-connection\";\r\nimport type { BattleRoom } from \"./panel-battle\";\r\nimport { BattleChoiceBuilder } from \"./battle-choices\";\r\nimport { ChatTournament, TournamentBox } from \"./panel-chat-tournament\";\r\n\r\ndeclare const formatText: any; // from js/server/chat-formatter.js\r\n\r\ntype Challenge = {\r\n\tformatName: string,\r\n\tteamFormat: string,\r\n\tmessage?: string,\r\n\tacceptButtonLabel?: string,\r\n\trejectButtonLabel?: string,\r\n};\r\n\r\nexport class ChatRoom extends PSRoom {\r\n\toverride readonly classType: 'chat' | 'battle' = 'chat';\r\n\t/** note: includes offline users! use onlineUsers if you need onlineUsers */\r\n\tusers: { [userid: string]: string } = {};\r\n\t/** not equal to onlineUsers.length because guests exist */\r\n\tuserCount = 0;\r\n\tonlineUsers: [ID, string][] = [];\r\n\toverride readonly canConnect = true;\r\n\r\n\t// PM-only properties\r\n\tpmTarget: string | null = null;\r\n\tchallengeMenuOpen = false;\r\n\tinitialSlash = false;\r\n\tchallenging: Challenge | null = null;\r\n\tchallenged: Challenge | null = null;\r\n\t/** n.b. this will be null outside of battle rooms */\r\n\tbattle: Battle | null = null;\r\n\tlog: BattleLog | null = null;\r\n\ttour: ChatTournament | null = null;\r\n\tlastMessage: Args | null = null;\r\n\tlastMessageTime: number | null = null;\r\n\r\n\tjoinLeave: { join: string[], leave: string[], messageId: string } | null = null;\r\n\t/** in order from least to most recent */\r\n\tuserActivity: ID[] = [];\r\n\ttimeOffset = 0;\r\n\tstatic highlightRegExp: Record<string, RegExp | null> | null = null;\r\n\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tif (options.args?.pmTarget) this.pmTarget = options.args.pmTarget as string;\r\n\t\tif (options.args?.challengeMenuOpen) this.challengeMenuOpen = true;\r\n\t\tif (options.args?.initialSlash) this.initialSlash = true;\r\n\t\tthis.updateTarget(this.pmTarget);\r\n\t\tthis.connect();\r\n\t}\r\n\toverride connect() {\r\n\t\tif (!this.connected) {\r\n\t\t\tif (this.pmTarget === null) PS.send(`/join ${this.id}`);\r\n\t\t\tthis.connected = true;\r\n\t\t\tthis.connectWhenLoggedIn = false;\r\n\t\t}\r\n\t}\r\n\toverride receiveLine(args: Args) {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'users':\r\n\t\t\tconst usernames = args[1].split(',');\r\n\t\t\tconst count = parseInt(usernames.shift()!, 10);\r\n\t\t\tthis.setUsers(count, usernames);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'join': case 'j': case 'J':\r\n\t\t\tthis.addUser(args[1]);\r\n\t\t\tthis.handleJoinLeave(\"join\", args[1], args[0] === \"J\");\r\n\t\t\treturn true;\r\n\r\n\t\tcase 'leave': case 'l': case 'L':\r\n\t\t\tthis.removeUser(args[1]);\r\n\t\t\tthis.handleJoinLeave(\"leave\", args[1], args[0] === \"L\");\r\n\t\t\treturn true;\r\n\r\n\t\tcase 'name': case 'n': case 'N':\r\n\t\t\tthis.renameUser(args[1], args[2]);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'tournament': case 'tournaments':\r\n\t\t\tthis.tour ||= new ChatTournament(this);\r\n\t\t\tthis.tour.receiveLine(args);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'noinit':\r\n\t\t\tif (this.battle) {\r\n\t\t\t\t// check the Replays database\r\n\t\t\t\t(this as any as BattleRoom).loadReplay();\r\n\t\t\t} else {\r\n\t\t\t\tthis.receiveLine(['bigerror', 'Room does not exist']);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\tcase 'expire':\r\n\t\t\tthis.connected = 'expired';\r\n\t\t\tthis.receiveLine(['', `This room has expired (you can't chat in it anymore)`]);\r\n\t\t\treturn;\r\n\r\n\t\tcase 'chat': case 'c':\r\n\t\t\tif (`${args[2]} `.startsWith('/challenge ')) {\r\n\t\t\t\tthis.updateChallenge(args[1], args[2].slice(11));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// falls through\r\n\t\tcase 'c:':\r\n\t\t\tif (args[0] === 'c:') PS.lastMessageTime = args[1];\r\n\t\t\tthis.lastMessage = args;\r\n\t\t\tthis.joinLeave = null;\r\n\t\t\tthis.markUserActive(args[args[0] === 'c:' ? 2 : 1]);\r\n\t\t\tif (this.tour) this.tour.joinLeave = null;\r\n\t\t\tif (this.id.startsWith(\"dm-\")) {\r\n\t\t\t\tconst fromUser = args[args[0] === 'c:' ? 2 : 1];\r\n\t\t\t\tif (toID(fromUser) === PS.user.userid) break;\r\n\t\t\t\tconst message = args[args[0] === 'c:' ? 3 : 2];\r\n\t\t\t\tthis.notify({\r\n\t\t\t\t\ttitle: `${this.title}`,\r\n\t\t\t\t\tbody: message,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.subtleNotify();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase ':':\r\n\t\t\tthis.timeOffset = Math.trunc(Date.now() / 1000) - (parseInt(args[1], 10) || 0);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tsuper.receiveLine(args);\r\n\t}\r\n\toverride handleReconnect(msg: string): boolean | void {\r\n\t\tif (this.battle) {\r\n\t\t\tthis.battle.reset();\r\n\t\t\tthis.battle.stepQueue = [];\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tlet lines = msg.split('\\n');\r\n\r\n\t\t\t// cut off starting lines until we get to PS.lastMessage timestamp\r\n\t\t\t// then cut off roomintro from the end\r\n\t\t\tlet cutOffStart = 0;\r\n\t\t\tlet cutOffEnd = lines.length;\r\n\t\t\tconst cutOffTime = parseInt(PS.lastMessageTime);\r\n\t\t\tconst cutOffExactLine = this.lastMessage ? '|' + this.lastMessage?.join('|') : '';\r\n\t\t\tlet reconnectMessage = '|raw|<div class=\"infobox\">You reconnected.</div>';\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\tif (lines[i].startsWith('|users|')) {\r\n\t\t\t\t\tthis.add(lines[i]);\r\n\t\t\t\t}\r\n\t\t\t\tif (lines[i] === cutOffExactLine) {\r\n\t\t\t\t\tcutOffStart = i + 1;\r\n\t\t\t\t} else if (lines[i].startsWith(`|c:|`)) {\r\n\t\t\t\t\tconst time = parseInt(lines[i].split('|')[2] || '');\r\n\t\t\t\t\tif (time < cutOffTime) cutOffStart = i;\r\n\t\t\t\t}\r\n\t\t\t\tif (lines[i].startsWith('|raw|<div class=\"infobox\"> You joined ')) {\r\n\t\t\t\t\treconnectMessage = `|raw|<div class=\"infobox\">You reconnected to ${lines[i].slice(38)}`;\r\n\t\t\t\t\tcutOffEnd = i;\r\n\t\t\t\t\tif (!lines[i - 1]) cutOffEnd = i - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlines = lines.slice(cutOffStart, cutOffEnd);\r\n\r\n\t\t\tif (lines.length) {\r\n\t\t\t\tthis.receiveLine([`raw`, `<div class=\"infobox\">You disconnected.</div>`]);\r\n\t\t\t\tfor (const line of lines) this.receiveLine(BattleTextParser.parseLine(line));\r\n\t\t\t\tthis.receiveLine(BattleTextParser.parseLine(reconnectMessage));\r\n\t\t\t}\r\n\t\t\tthis.update(null);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tupdateTarget(name?: string | null) {\r\n\t\tconst selfWithGroup = `${PS.user.group || ' '}${PS.user.name}`;\r\n\t\tif (this.id === 'dm-') {\r\n\t\t\tthis.pmTarget = selfWithGroup;\r\n\t\t\tthis.setUsers(1, [selfWithGroup]);\r\n\t\t\tthis.title = `Console`;\r\n\t\t} else if (this.id.startsWith('dm-')) {\r\n\t\t\tconst id = this.id.slice(3);\r\n\t\t\tif (toID(name) !== id) name = null;\r\n\t\t\tname ||= this.pmTarget || id;\r\n\t\t\tif (/[A-Za-z0-9]/.test(name.charAt(0))) name = ` ${name}`;\r\n\t\t\tconst nameWithGroup = name;\r\n\t\t\tname = name.slice(1);\r\n\t\t\tthis.pmTarget = name;\r\n\t\t\tif (!PS.user.userid) {\r\n\t\t\t\tthis.setUsers(1, [nameWithGroup]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.setUsers(2, [nameWithGroup, selfWithGroup]);\r\n\t\t\t}\r\n\t\t\tthis.title = `[DM] ${nameWithGroup.trim()}`;\r\n\t\t}\r\n\t}\r\n\tstatic getHighlight(message: string, roomid: string) {\r\n\t\tlet highlights = PS.prefs.highlights || {};\r\n\t\tif (Array.isArray(highlights)) {\r\n\t\t\thighlights = { global: highlights };\r\n\t\t\t// Migrate from the old highlight system\r\n\t\t\tPS.prefs.set('highlights', highlights);\r\n\t\t}\r\n\t\tif (!PS.prefs.noselfhighlight && PS.user.nameRegExp) {\r\n\t\t\tif (PS.user.nameRegExp?.test(message)) return true;\r\n\t\t}\r\n\t\tif (!this.highlightRegExp) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.updateHighlightRegExp(highlights);\r\n\t\t\t} catch {\r\n\t\t\t\t// If the expression above is not a regexp, we'll get here.\r\n\t\t\t\t// Don't throw an exception because that would prevent the chat\r\n\t\t\t\t// message from showing up, or, when the lobby is initialising,\r\n\t\t\t\t// it will prevent the initialisation from completing.\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst id = PS.server.id + '#' + roomid;\r\n\t\tconst globalHighlightsRegExp = this.highlightRegExp?.['global'];\r\n\t\tconst roomHighlightsRegExp = this.highlightRegExp?.[id];\r\n\t\treturn (((globalHighlightsRegExp?.test(message)) || (roomHighlightsRegExp?.test(message))));\r\n\t}\r\n\tstatic updateHighlightRegExp(highlights: Record<string, string[]>) {\r\n\t\t// Enforce boundary for match sides, if a letter on match side is\r\n\t\t// a word character. For example, regular expression \"a\" matches\r\n\t\t// \"a\", but not \"abc\", while regular expression \"!\" matches\r\n\t\t// \"!\" and \"!abc\".\r\n\t\tthis.highlightRegExp = {};\r\n\t\tfor (let i in highlights) {\r\n\t\t\tif (!highlights[i].length) {\r\n\t\t\t\tthis.highlightRegExp[i] = null;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.highlightRegExp[i] = new RegExp('(?:\\\\b|(?!\\\\w))(?:' + highlights[i].join('|') + ')(?:\\\\b|(?!\\\\w))', 'i');\r\n\t\t}\r\n\t}\r\n\thandleHighlight = (args: Args) => {\r\n\t\tlet name;\r\n\t\tlet message;\r\n\t\tlet msgTime = 0;\r\n\t\tif (args[0] === 'c:') {\r\n\t\t\tmsgTime = parseInt(args[1]);\r\n\t\t\tname = args[2];\r\n\t\t\tmessage = args[3];\r\n\t\t} else {\r\n\t\t\tname = args[1];\r\n\t\t\tmessage = args[2];\r\n\t\t}\r\n\t\tlet lastMessageDates = Dex.prefs('logtimes') || (PS.prefs.set('logtimes', {}), Dex.prefs('logtimes'));\r\n\t\tif (!lastMessageDates[PS.server.id]) lastMessageDates[PS.server.id] = {};\r\n\t\tlet lastMessageDate = lastMessageDates[PS.server.id][this.id] || 0;\r\n\t\t// because the time offset to the server can vary slightly, subtract it to not have it affect comparisons between dates\r\n\t\tlet serverMsgTime = msgTime - (this.timeOffset || 0);\r\n\t\tlet mayNotify = serverMsgTime > lastMessageDate && name !== PS.user.userid;\r\n\t\tif (PS.isVisible(this)) {\r\n\t\t\tthis.lastMessageTime = null;\r\n\t\t\tlastMessageDates[PS.server.id][this.id] = serverMsgTime;\r\n\t\t\tPS.prefs.set('logtimes', lastMessageDates);\r\n\t\t} else {\r\n\t\t\t// To be saved on focus\r\n\t\t\tlet lastMessageTime = this.lastMessageTime || 0;\r\n\t\t\tif (lastMessageTime < serverMsgTime) this.lastMessageTime = serverMsgTime;\r\n\t\t}\r\n\t\treturn !!(ChatRoom.getHighlight(message, this.id) && mayNotify);\r\n\t};\r\n\toverride clientCommands = this.parseClientCommands({\r\n\t\t'chall,challenge'(target) {\r\n\t\t\tif (target) {\r\n\t\t\t\tconst [targetUser, format] = target.split(',');\r\n\t\t\t\tPS.join(`challenge-${toID(targetUser)}` as RoomID);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.openChallenge();\r\n\t\t},\r\n\t\t'cchall,cancelchallenge'(target) {\r\n\t\t\tthis.cancelChallenge();\r\n\t\t},\r\n\t\t'reject'(target) {\r\n\t\t\tthis.challenged = null;\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'clear'() {\r\n\t\t\tthis.log?.reset();\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'rank,ranking,rating,ladder'(target) {\r\n\t\t\tlet arg = target;\r\n\t\t\tif (!arg) {\r\n\t\t\t\targ = PS.user.userid;\r\n\t\t\t}\r\n\t\t\tif (this.battle && !arg.includes(',')) {\r\n\t\t\t\targ += \", \" + this.id.split('-')[1];\r\n\t\t\t}\r\n\r\n\t\t\tconst targets = arg.split(',');\r\n\t\t\tlet formatTargeting = false;\r\n\t\t\tconst formats: { [key: string]: number } = {};\r\n\t\t\tconst gens: { [key: string]: number } = {};\r\n\t\t\tfor (let i = 1, len = targets.length; i < len; i++) {\r\n\t\t\t\ttargets[i] = $.trim(targets[i]);\r\n\t\t\t\tif (targets[i].length === 4 && targets[i].startsWith('gen')) {\r\n\t\t\t\t\tgens[targets[i]] = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tformats[toID(targets[i])] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tformatTargeting = true;\r\n\t\t\t}\r\n\r\n\t\t\tPSLoginServer.query(\"ladderget\", {\r\n\t\t\t\tuser: targets[0],\r\n\t\t\t}).then(data => {\r\n\t\t\t\tif (!data || !Array.isArray(data)) return this.add(`|error|Error: corrupted ranking data`);\r\n\t\t\t\tlet buffer = `<div class=\"ladder\"><table><tr><td colspan=\"9\">User: <strong>${toID(targets[0])}</strong></td></tr>`;\r\n\t\t\t\tif (!data.length) {\r\n\t\t\t\t\tbuffer += '<tr><td colspan=\"9\"><em>This user has not played any ladder games yet.</em></td></tr>';\r\n\t\t\t\t\tbuffer += '</table></div>';\r\n\t\t\t\t\treturn this.add(`|html|${buffer}`);\r\n\t\t\t\t}\r\n\t\t\t\tbuffer += '<tr><th>Format</th><th><abbr title=\"Elo rating\">Elo</abbr></th><th><abbr title=\"user\\'s percentage chance of winning a random battle (aka GLIXARE)\">GXE</abbr></th><th><abbr title=\"Glicko-1 rating: rating &#177; deviation\">Glicko-1</abbr></th><th>COIL</th><th>W</th><th>L</th><th>Total</th>';\r\n\t\t\t\tlet suspect = false;\r\n\t\t\t\tfor (const item of data) {\r\n\t\t\t\t\tif ('suspect' in item) suspect = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (suspect) buffer += '<th>Suspect reqs possible?</th>';\r\n\t\t\t\tbuffer += '</tr>';\r\n\t\t\t\tconst hiddenFormats = [];\r\n\t\t\t\tfor (const row of data) {\r\n\t\t\t\t\tif (!row) return this.add(`|error|Error: corrupted ranking data`);\r\n\t\t\t\t\tconst formatId = toID(row.formatid);\r\n\t\t\t\t\tif (!formatTargeting ||\r\n\t\t\t\t\t\tformats[formatId] ||\r\n\t\t\t\t\t\tgens[formatId.slice(0, 4)] ||\r\n\t\t\t\t\t\t(gens['gen6'] && !formatId.startsWith('gen'))) {\r\n\t\t\t\t\t\tbuffer += '<tr>';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuffer += '<tr class=\"hidden\">';\r\n\t\t\t\t\t\thiddenFormats.push(window.BattleLog.escapeFormat(formatId, true));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Validate all the numerical data\r\n\t\t\t\t\tfor (const value of [row.elo, row.rpr, row.rprd, row.gxe, row.w, row.l, row.t]) {\r\n\t\t\t\t\t\tif (typeof value !== 'number' && typeof value !== 'string') {\r\n\t\t\t\t\t\t\treturn this.add(`|error|Error: corrupted ranking data`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuffer += `<td> ${BattleLog.escapeHTML(BattleLog.formatName(formatId, true))} </td><td><strong>${Math.round(row.elo)}</strong></td>`;\r\n\t\t\t\t\tif (row.rprd > 100) {\r\n\t\t\t\t\t\t// High rating deviation. Provisional rating.\r\n\t\t\t\t\t\tbuffer += `<td>&ndash;</td>`;\r\n\t\t\t\t\t\tbuffer += `<td><span style=\"color:#888\"><em>${Math.round(row.rpr)} <small> &#177; ${Math.round(row.rprd)} </small></em> <small>(provisional)</small></span></td>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuffer += `<td>${Math.trunc(row.gxe)}<small>.${row.gxe.toFixed(1).slice(-1)}%</small></td>`;\r\n\t\t\t\t\t\tbuffer += `<td><em>${Math.round(row.rpr)} <small> &#177; ${Math.round(row.rprd)}</small></em></td>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst N = parseInt(row.w, 10) + parseInt(row.l, 10) + parseInt(row.t, 10);\r\n\t\t\t\t\tconst COIL_B = undefined;\r\n\r\n\t\t\t\t\t// Uncomment this after LadderRoom logic is implemented\r\n\t\t\t\t\t// COIL_B = LadderRoom?.COIL_B[formatId];\r\n\r\n\t\t\t\t\tif (COIL_B) {\r\n\t\t\t\t\t\tbuffer += `<td>${Math.round(40.0 * parseFloat(row.gxe) * 2.0 ** (-COIL_B / N))}</td>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuffer += '<td>&mdash;</td>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer += `<td> ${row.w} </td><td> ${row.l} </td><td> ${N} </td>`;\r\n\t\t\t\t\tif (suspect) {\r\n\t\t\t\t\t\tif (typeof row.suspect === 'undefined') {\r\n\t\t\t\t\t\t\tbuffer += '<td>&mdash;</td>';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbuffer += '<td>';\r\n\t\t\t\t\t\t\tbuffer += (row.suspect ? \"Yes\" : \"No\");\r\n\t\t\t\t\t\t\tbuffer += '</td>';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer += '</tr>';\r\n\t\t\t\t}\r\n\t\t\t\tif (hiddenFormats.length) {\r\n\t\t\t\t\tif (hiddenFormats.length === data.length) {\r\n\t\t\t\t\t\tconst formatsText = Object.keys(gens).concat(Object.keys(formats)).join(', ');\r\n\t\t\t\t\t\tbuffer += `<tr class=\"no-matches\"><td colspan=\"8\">` +\r\n\t\t\t\t\t\t\tBattleLog.html`<em>This user has not played any ladder games that match ${formatsText}.</em></td></tr>`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst otherFormats = hiddenFormats.slice(0, 3).join(', ') +\r\n\t\t\t\t\t\t(hiddenFormats.length > 3 ? ` and ${hiddenFormats.length - 3} other formats` : '');\r\n\t\t\t\t\tbuffer += `<tr><td colspan=\"8\"><button name=\"showOtherFormats\">` +\r\n\t\t\t\t\t\tBattleLog.html`${otherFormats} not shown</button></td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t\tlet userid = toID(targets[0]);\r\n\t\t\t\tlet registered = PS.user.registered;\r\n\t\t\t\tif (registered && PS.user.userid === userid) {\r\n\t\t\t\t\tbuffer += `<tr><td colspan=\"8\" style=\"text-align:right\"><a href=\"//${PS.routes.users}/${userid}\">Reset W/L</a></tr></td>`;\r\n\t\t\t\t}\r\n\t\t\t\tbuffer += '</table></div>';\r\n\t\t\t\tthis.add(`|html|${buffer}`);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// battle-specific commands\r\n\t\t// ------------------------\r\n\t\t'play'() {\r\n\t\t\tif (!this.battle) return this.add('|error|You are not in a battle');\r\n\t\t\tif (this.battle.atQueueEnd) {\r\n\t\t\t\tthis.battle.reset();\r\n\t\t\t}\r\n\t\t\tthis.battle.play();\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'pause'() {\r\n\t\t\tif (!this.battle) return this.add('|error|You are not in a battle');\r\n\t\t\tthis.battle.pause();\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'ffto,fastfowardto'(target) {\r\n\t\t\tif (!this.battle) return this.add('|error|You are not in a battle');\r\n\t\t\tlet turnNum = Number(target);\r\n\t\t\tif (target.startsWith('+') || turnNum < 0) {\r\n\t\t\t\tturnNum += this.battle.turn;\r\n\t\t\t\tif (turnNum < 0) turnNum = 0;\r\n\t\t\t} else if (target === 'end') {\r\n\t\t\t\tturnNum = Infinity;\r\n\t\t\t}\r\n\t\t\tif (isNaN(turnNum)) {\r\n\t\t\t\tthis.receiveLine([`error`, `/ffto - Invalid turn number: ${target}`]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.battle.seekTurn(turnNum);\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'switchsides'() {\r\n\t\t\tif (!this.battle) return this.add('|error|You are not in a battle');\r\n\t\t\tthis.battle.switchViewpoint();\r\n\t\t},\r\n\t\t'cancel,undo'() {\r\n\t\t\tif (!this.battle) return this.send('/cancelchallenge');\r\n\r\n\t\t\tconst room = this as any as BattleRoom;\r\n\t\t\tif (!room.choices || !room.request) {\r\n\t\t\t\tthis.receiveLine([`error`, `/choose - You are not a player in this battle`]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (room.choices.isDone() || room.choices.isEmpty()) {\r\n\t\t\t\t// we _could_ check choices.noCancel, but the server will check anyway\r\n\t\t\t\tthis.sendDirect('/undo');\r\n\t\t\t}\r\n\t\t\troom.choices = new BattleChoiceBuilder(room.request);\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t\t'move,switch,team,pass,shift,choose'(target, cmd) {\r\n\t\t\tif (!this.battle) return this.add('|error|You are not in a battle');\r\n\t\t\tconst room = this as any as BattleRoom;\r\n\t\t\tif (!room.choices) {\r\n\t\t\t\tthis.receiveLine([`error`, `/choose - You are not a player in this battle`]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (cmd !== 'choose') target = `${cmd} ${target}`;\r\n\t\t\tif (target === 'choose auto' || target === 'choose default') {\r\n\t\t\t\tthis.sendDirect('/choose default');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst possibleError = room.choices.addChoice(target);\r\n\t\t\tif (possibleError) {\r\n\t\t\t\tthis.errorReply(possibleError);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (room.choices.isDone()) this.sendDirect(`/choose ${room.choices.toString()}`);\r\n\t\t\tthis.update(null);\r\n\t\t},\r\n\t});\r\n\topenChallenge() {\r\n\t\tif (!this.pmTarget) {\r\n\t\t\tthis.add(`|error|Can only be used in a PM.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.challengeMenuOpen = true;\r\n\t\tthis.update(null);\r\n\t}\r\n\tcancelChallenge() {\r\n\t\tif (!this.pmTarget) {\r\n\t\t\tthis.add(`|error|Can only be used in a PM.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.challenging) {\r\n\t\t\tthis.sendDirect('/cancelchallenge');\r\n\t\t\tthis.challenging = null;\r\n\t\t\tthis.challengeMenuOpen = true;\r\n\t\t} else {\r\n\t\t\tthis.challengeMenuOpen = false;\r\n\t\t}\r\n\t\tthis.update(null);\r\n\t}\r\n\tparseChallenge(challengeString: string | null): Challenge | null {\r\n\t\tif (!challengeString) return null;\r\n\r\n\t\tlet splitChallenge = challengeString.split('|');\r\n\r\n\t\tconst challenge = {\r\n\t\t\tformatName: splitChallenge[0],\r\n\t\t\tteamFormat: splitChallenge[1] ?? splitChallenge[0],\r\n\t\t\tmessage: splitChallenge[2],\r\n\t\t\tacceptButtonLabel: splitChallenge[3],\r\n\t\t\trejectButtonLabel: splitChallenge[4],\r\n\t\t};\r\n\t\tif (!challenge.formatName && !challenge.message) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn challenge;\r\n\t}\r\n\tupdateChallenge(name: string, challengeString: string) {\r\n\t\tconst challenge = this.parseChallenge(challengeString);\r\n\t\tconst userid = toID(name);\r\n\r\n\t\tif (userid === PS.user.userid) {\r\n\t\t\tif (!challenge && !this.challenging) {\r\n\t\t\t\t// this is also used for canceling challenges\r\n\t\t\t\tthis.challenged = null;\r\n\t\t\t}\r\n\t\t\t// we are sending the challenge\r\n\t\t\tthis.challenging = challenge;\r\n\t\t} else {\r\n\t\t\tif (!challenge && !this.challenged) {\r\n\t\t\t\t// this is also used for rejecting challenges\r\n\t\t\t\tthis.challenging = null;\r\n\t\t\t}\r\n\t\t\tthis.challenged = challenge;\r\n\t\t\tif (challenge) {\r\n\t\t\t\tthis.notify({\r\n\t\t\t\t\ttitle: `Challenge from ${name}`,\r\n\t\t\t\t\tbody: `Format: ${BattleLog.formatName(challenge.formatName)}`,\r\n\t\t\t\t\tid: 'challenge',\r\n\t\t\t\t});\r\n\t\t\t\t// app.playNotificationSound();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.update(null);\r\n\t}\r\n\tmarkUserActive(name: string) {\r\n\t\tconst userid = toID(name);\r\n\t\tconst idx = this.userActivity.indexOf(userid);\r\n\t\tthis.users[userid] = name;\r\n\t\tif (idx !== -1) {\r\n\t\t\tthis.userActivity.splice(idx, 1);\r\n\t\t}\r\n\t\tthis.userActivity.push(userid);\r\n\t\tif (this.userActivity.length > 100) {\r\n\t\t\t// Prune the list\r\n\t\t\tthis.userActivity.splice(0, 20);\r\n\t\t}\r\n\t}\r\n\toverride sendDirect(line: string) {\r\n\t\tif (this.pmTarget) {\r\n\t\t\tline = line.split('\\n').filter(Boolean).map(row => `/pm ${this.pmTarget!}, ${row}`).join('\\n');\r\n\t\t\tPS.send(line);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsuper.sendDirect(line);\r\n\t}\r\n\tsetUsers(count: number, usernames: string[]) {\r\n\t\tthis.userCount = count;\r\n\t\tthis.onlineUsers = [];\r\n\t\tfor (const username of usernames) {\r\n\t\t\tconst userid = toID(username);\r\n\t\t\tthis.users[userid] = username;\r\n\t\t\tthis.onlineUsers.push([userid, username]);\r\n\t\t}\r\n\t\tthis.sortOnlineUsers();\r\n\t\tthis.update(null);\r\n\t}\r\n\tsortOnlineUsers() {\r\n\t\tPSUtils.sortBy(this.onlineUsers, ([id, name]) => (\r\n\t\t\t[PS.server.getGroup(name.charAt(0)).order, !name.endsWith('@!'), id]\r\n\t\t));\r\n\t}\r\n\taddUser(username: string) {\r\n\t\tif (!username) return;\r\n\r\n\t\tconst userid = toID(username);\r\n\t\tthis.users[userid] = username;\r\n\t\tconst index = this.onlineUsers.findIndex(([curUserid]) => curUserid === userid);\r\n\t\tif (index >= 0) {\r\n\t\t\tthis.onlineUsers[index] = [userid, username];\r\n\t\t} else {\r\n\t\t\tthis.userCount++;\r\n\t\t\tthis.onlineUsers.push([userid, username]);\r\n\t\t\tthis.sortOnlineUsers();\r\n\t\t}\r\n\t\tthis.update(null);\r\n\t}\r\n\tremoveUser(username: string, noUpdate?: boolean) {\r\n\t\tif (!username) return;\r\n\r\n\t\tconst userid = toID(username);\r\n\t\tconst index = this.onlineUsers.findIndex(([curUserid]) => curUserid === userid);\r\n\t\tif (index >= 0) {\r\n\t\t\tthis.userCount--;\r\n\t\t\tthis.onlineUsers.splice(index, 1);\r\n\t\t\tif (!noUpdate) this.update(null);\r\n\t\t}\r\n\t}\r\n\trenameUser(username: string, oldUsername: string) {\r\n\t\tthis.removeUser(oldUsername, true);\r\n\t\tthis.addUser(username);\r\n\t\tthis.update(null);\r\n\t}\r\n\r\n\thandleJoinLeave(action: 'join' | 'leave', name: string, silent: boolean) {\r\n\t\tif (action === 'join') {\r\n\t\t\tthis.addUser(name);\r\n\t\t} else if (action === 'leave') {\r\n\t\t\tthis.removeUser(name);\r\n\t\t}\r\n\t\tconst showjoins = PS.prefs.showjoins?.[PS.server.id];\r\n\t\tif (!(showjoins?.[this.id] ?? showjoins?.['global'] ?? !silent)) return;\r\n\r\n\t\tthis.joinLeave ||= {\r\n\t\t\tjoin: [],\r\n\t\t\tleave: [],\r\n\t\t\tmessageId: `joinleave-${Date.now()}`,\r\n\t\t};\r\n\t\tif (action === 'join' && this.joinLeave['leave'].includes(name)) {\r\n\t\t\tthis.joinLeave['leave'].splice(this.joinLeave['leave'].indexOf(name), 1);\r\n\t\t} else if (action === 'leave' && this.joinLeave['join'].includes(name)) {\r\n\t\t\tthis.joinLeave['join'].splice(this.joinLeave['join'].indexOf(name), 1);\r\n\t\t} else {\r\n\t\t\tthis.joinLeave[action].push(name);\r\n\t\t}\r\n\r\n\t\tlet message = this.formatJoinLeave(this.joinLeave['join'], 'joined');\r\n\t\tif (this.joinLeave['join'].length && this.joinLeave['leave'].length) message += '; ';\r\n\t\tmessage += this.formatJoinLeave(this.joinLeave['leave'], 'left');\r\n\r\n\t\tthis.add(`|uhtml|${this.joinLeave.messageId}|<small style=\"color: #555555\">${message}</small>`);\r\n\t}\r\n\r\n\tformatJoinLeave(preList: string[], action: 'joined' | 'left') {\r\n\t\tif (!preList.length) return '';\r\n\r\n\t\tlet message = '';\r\n\t\tlet list: string[] = [];\r\n\t\tlet named: { [key: string]: boolean } = {};\r\n\t\tfor (let item of preList) {\r\n\t\t\tif (!named[item]) list.push(item);\r\n\t\t\tnamed[item] = true;\r\n\t\t}\r\n\t\tfor (let j = 0; j < list.length; j++) {\r\n\t\t\tif (j >= 5) {\r\n\t\t\t\tmessage += `, and ${(list.length - 5)} others`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (j > 0) {\r\n\t\t\t\tif (j === 1 && list.length === 2) {\r\n\t\t\t\t\tmessage += ' and ';\r\n\t\t\t\t} else if (j === list.length - 1) {\r\n\t\t\t\t\tmessage += ', and ';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage += ', ';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmessage += BattleLog.escapeHTML(list[j]);\r\n\t\t}\r\n\t\treturn `${message} ${action}`;\r\n\t}\r\n\r\n\toverride destroy() {\r\n\t\tif (this.pmTarget) this.connected = false;\r\n\t\tif (this.battle) {\r\n\t\t\t// since battle is defined here, we might as well deallocate it here\r\n\t\t\tthis.battle.destroy();\r\n\t\t} else {\r\n\t\t\tthis.log?.destroy();\r\n\t\t}\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nexport class CopyableURLBox extends preact.Component<{ url: string }> {\r\n\tcopy = () => {\r\n\t\tconst input = this.base!.children[0] as HTMLInputElement;\r\n\t\tinput.select();\r\n\t\tdocument.execCommand('copy');\r\n\t};\r\n\toverride render() {\r\n\t\treturn <div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\" class=\"textbox\" readOnly size={45} value={this.props.url}\r\n\t\t\t\tstyle=\"field-sizing:content\"\r\n\t\t\t/> {}\r\n\t\t\t<button class=\"button\" onClick={this.copy}>Copy</button> {}\r\n\t\t\t<a href={this.props.url} target=\"_blank\" class=\"no-panel-intercept\">\r\n\t\t\t\t<button class=\"button\">Visit</button>\r\n\t\t\t</a>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport class ChatTextEntry extends preact.Component<{\r\n\troom: ChatRoom, onMessage: (msg: string, elem: HTMLElement) => void, onKey: (e: KeyboardEvent) => boolean,\r\n\tleft?: number, tinyLayout?: boolean,\r\n}> {\r\n\tsubscription: PSSubscription | null = null;\r\n\ttextbox: HTMLTextAreaElement = null!;\r\n\tminiedit: MiniEdit | null = null;\r\n\thistory: string[] = [];\r\n\thistoryIndex = 0;\r\n\ttabComplete: {\r\n\t\tcandidates: { userid: string, prefixIndex: number }[],\r\n\t\tcandidateIndex: number,\r\n\t\t/** the text left of the cursor before tab completing */\r\n\t\tprefix: string,\r\n\t\t/** the text left of the cursor after tab completing */\r\n\t\tcursor: string,\r\n\t} | null = null;\r\n\toverride componentDidMount() {\r\n\t\tthis.subscription = PS.user.subscribe(() => {\r\n\t\t\tthis.forceUpdate();\r\n\t\t});\r\n\t\tconst textbox = this.base!.children[0].children[1] as HTMLElement;\r\n\t\tif (textbox.tagName === 'TEXTAREA') this.textbox = textbox as HTMLTextAreaElement;\r\n\t\tthis.miniedit = new MiniEdit(textbox, {\r\n\t\t\tsetContent: text => {\r\n\t\t\t\ttextbox.innerHTML = formatText(text, false, false, true) + '\\n';\r\n\t\t\t\ttextbox.classList?.toggle('textbox-empty', !text);\r\n\t\t\t},\r\n\t\t\tonKeyDown: this.onKeyDown,\r\n\t\t});\r\n\t\tif (this.props.room.args?.initialSlash) {\r\n\t\t\tthis.props.room.args.initialSlash = false;\r\n\t\t\tthis.setValue('/', 1);\r\n\t\t}\r\n\t\tif (this.base) this.update();\r\n\t}\r\n\toverride componentWillUnmount() {\r\n\t\tif (this.subscription) {\r\n\t\t\tthis.subscription.unsubscribe();\r\n\t\t\tthis.subscription = null;\r\n\t\t}\r\n\t}\r\n\tupdate = () => {\r\n\t\tif (!this.miniedit) {\r\n\t\t\tconst textbox = this.textbox;\r\n\t\t\ttextbox.style.height = `12px`;\r\n\t\t\tconst newHeight = Math.min(Math.max(textbox.scrollHeight - 2, 16), 600);\r\n\t\t\ttextbox.style.height = `${newHeight}px`;\r\n\t\t}\r\n\t};\r\n\tfocusIfNoSelection = (e: Event) => {\r\n\t\tif ((e.target as HTMLElement).tagName === 'TEXTAREA') return;\r\n\t\tconst selection = window.getSelection()!;\r\n\t\tif (selection.type === 'Range') return;\r\n\t\tconst elem = this.base!.children[0].children[1] as HTMLTextAreaElement;\r\n\t\telem.focus();\r\n\t};\r\n\tsubmit() {\r\n\t\tthis.props.onMessage(this.getValue(), this.miniedit?.element || this.textbox);\r\n\t\tthis.historyPush(this.getValue());\r\n\t\tthis.setValue('', 0);\r\n\t\tthis.update();\r\n\t\treturn true;\r\n\t}\r\n\tonKeyDown = (e: KeyboardEvent) => {\r\n\t\tif (this.handleKey(e) || this.props.onKey(e)) {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\t};\r\n\r\n\t// Direct manipulation functions\r\n\tgetValue() {\r\n\t\treturn this.miniedit ? this.miniedit.getValue() : this.textbox.value;\r\n\t}\r\n\tsetValue(value: string, start: number, end = start) {\r\n\t\tif (this.miniedit) {\r\n\t\t\tthis.miniedit.setValue(value, { start, end });\r\n\t\t} else {\r\n\t\t\tthis.textbox.value = value;\r\n\t\t\tthis.textbox.setSelectionRange?.(start, end);\r\n\t\t}\r\n\t}\r\n\tgetSelection() {\r\n\t\tconst value = this.getValue();\r\n\t\tlet { start, end } = this.miniedit ?\r\n\t\t\t(this.miniedit.getSelection() || { start: value.length, end: value.length }) :\r\n\t\t\t{ start: this.textbox.selectionStart, end: this.textbox.selectionEnd };\r\n\t\treturn { value, start, end };\r\n\t}\r\n\tsetSelection(start: number, end: number) {\r\n\t\tif (this.miniedit) {\r\n\t\t\tthis.miniedit.setSelection({ start, end });\r\n\t\t} else {\r\n\t\t\tthis.textbox.setSelectionRange?.(start, end);\r\n\t\t}\r\n\t}\r\n\treplaceSelection(text: string) {\r\n\t\tif (this.miniedit) {\r\n\t\t\tthis.miniedit.replaceSelection(text);\r\n\t\t} else {\r\n\t\t\tconst { value, start, end } = this.getSelection();\r\n\t\t\tconst newSelection = start + text.length;\r\n\t\t\tthis.setValue(value.slice(0, start) + text + value.slice(end), newSelection);\r\n\t\t}\r\n\t}\r\n\r\n\thistoryUp(ifSelectionCorrect?: boolean) {\r\n\t\tif (ifSelectionCorrect) {\r\n\t\t\tconst { value, start, end } = this.getSelection();\r\n\t\t\tif (start !== end) return false; // never traverse history if text is selected\r\n\t\t\tif (end !== 0) {\r\n\t\t\t\tif (end < value.length) return false; // only go up at start or end of line\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.historyIndex === 0) return false;\r\n\t\tconst line = this.getValue();\r\n\t\tif (line !== '') this.history[this.historyIndex] = line;\r\n\t\tconst newValue = this.history[--this.historyIndex];\r\n\t\tthis.setValue(newValue, newValue.length);\r\n\t\treturn true;\r\n\t}\r\n\thistoryDown(ifSelectionCorrect?: boolean) {\r\n\t\tif (ifSelectionCorrect) {\r\n\t\t\tconst { value, start, end } = this.getSelection();\r\n\t\t\tif (start !== end) return false; // never traverse history if text is selected\r\n\t\t\tif (end < value.length) return false; // only go down at end of line\r\n\t\t}\r\n\r\n\t\tconst line = this.getValue();\r\n\t\tif (line !== '') this.history[this.historyIndex] = line;\r\n\t\tif (this.historyIndex === this.history.length) {\r\n\t\t\tif (!line) return false;\r\n\t\t\tthis.setValue('', 0);\r\n\t\t} else if (++this.historyIndex === this.history.length) {\r\n\t\t\tthis.setValue('', 0);\r\n\t\t} else {\r\n\t\t\tconst newValue = this.history[this.historyIndex];\r\n\t\t\tthis.setValue(newValue, newValue.length);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thistoryPush(line: string) {\r\n\t\tconst duplicateIndex = this.history.lastIndexOf(line);\r\n\t\tif (duplicateIndex >= 0) this.history.splice(duplicateIndex, 1);\r\n\t\tif (this.history.length > 100) this.history.splice(0, 20);\r\n\t\tthis.history.push(line);\r\n\t\tthis.historyIndex = this.history.length;\r\n\t}\r\n\thandleKey(ev: KeyboardEvent) {\r\n\t\tconst cmdKey = ((ev.metaKey ? 1 : 0) + (ev.ctrlKey ? 1 : 0) === 1) && !ev.altKey && !ev.shiftKey;\r\n\t\t// const anyModifier = ev.ctrlKey || ev.altKey || ev.metaKey || ev.shiftKey;\r\n\t\tif (ev.keyCode === 13 && !ev.shiftKey) { // Enter key\r\n\t\t\treturn this.submit();\r\n\t\t} else if (ev.keyCode === 13) { // enter\r\n\t\t\tthis.replaceSelection('\\n');\r\n\t\t\treturn true;\r\n\t\t} else if (ev.keyCode === 73 && cmdKey) { // Ctrl + I key\r\n\t\t\treturn this.toggleFormatChar('_');\r\n\t\t} else if (ev.keyCode === 66 && cmdKey) { // Ctrl + B key\r\n\t\t\treturn this.toggleFormatChar('*');\r\n\t\t} else if (ev.keyCode === 192 && cmdKey) { // Ctrl + ` key\r\n\t\t\treturn this.toggleFormatChar('`');\r\n\t\t} else if (ev.keyCode === 9 && !ev.ctrlKey) { // Tab key\r\n\t\t\tconst reverse = !!ev.shiftKey; // Shift+Tab reverses direction\r\n\t\t\treturn this.handleTabComplete(reverse);\r\n\t\t} else if (ev.keyCode === 38 && !ev.shiftKey && !ev.altKey) { // Up key\r\n\t\t\treturn this.historyUp(true);\r\n\t\t} else if (ev.keyCode === 40 && !ev.shiftKey && !ev.altKey) { // Down key\r\n\t\t\treturn this.historyDown(true);\r\n\t\t} else if (ev.keyCode === 27) { // esc\r\n\t\t\tif (this.undoTabComplete()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (PS.room !== PS.panel) { // only close if in mini-room mode\r\n\t\t\t\tPS.leave(PS.room.id);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t// } else if (e.keyCode === 32 && PS.user.lastPM && ['/reply', '/r', '/R'].includes(this.getValue())) { // '/reply ' is being written\r\n\t\t// \tconst newValue = `/pm ${PS.user.lastPM}, `;\r\n\t\t// \tthis.setValue(newValue, newValue.length);\r\n\t\t// \treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t// TODO - add support for commands tabcomplete\r\n\thandleTabComplete(reverse: boolean) {\r\n\t\t// Don't tab complete at the start of the text box.\r\n\t\tlet { value, start, end } = this.getSelection();\r\n\t\tif (start !== end || end === 0) return false;\r\n\r\n\t\tconst users = this.props.room.users;\r\n\t\tlet prefix = value.slice(0, end);\r\n\t\tif (this.tabComplete && prefix === this.tabComplete.cursor) {\r\n\t\t\t// The user is cycling through the candidate names.\r\n\t\t\tif (reverse) {\r\n\t\t\t\tthis.tabComplete.candidateIndex--;\r\n\t\t\t\tif (this.tabComplete.candidateIndex < 0) {\r\n\t\t\t\t\tthis.tabComplete.candidateIndex = this.tabComplete.candidates.length - 1;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.tabComplete.candidateIndex++;\r\n\t\t\t\tif (this.tabComplete.candidateIndex >= this.tabComplete.candidates.length) {\r\n\t\t\t\t\tthis.tabComplete.candidateIndex = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (!value || reverse) {\r\n\t\t\t// not tab completing - let them focus things\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\t// This is a new tab completion.\r\n\t\t\t// There needs to be non-whitespace to the left of the cursor.\r\n\t\t\t// no command prefixes either, we're testing for usernames here.\r\n\t\t\tprefix = prefix.trim();\r\n\r\n\t\t\t/** match of the closest word left of the cursor */\r\n\t\t\tconst match1 = /^([\\s\\S!/]*?)([A-Za-z0-9][^, \\n]*)$/.exec(prefix);\r\n\t\t\t/** match of the closest two words left of the cursor */\r\n\t\t\tconst match2 = /^([\\s\\S!/]*?)([A-Za-z0-9][^, \\n]* [^, ]*)$/.exec(prefix);\r\n\t\t\tif (!match1 && !match2) return true;\r\n\r\n\t\t\tconst idprefix = (match1 ? toID(match1[2]) : '');\r\n\t\t\tlet spaceprefix = (match2 ? match2[2].replace(/[^A-Za-z0-9 ]+/g, '').toLowerCase() : '');\r\n\t\t\tconst candidates: { userid: string, prefixIndex: number }[] = [];\r\n\t\t\tif (match2 && (match2[0] === '/' || match2[0] === '!')) spaceprefix = '';\r\n\t\t\tfor (const userid in users) {\r\n\t\t\t\tif (spaceprefix && users[userid].slice(1).replace(/[^A-Za-z0-9 ]+/g, '')\r\n\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t.startsWith(spaceprefix)) {\r\n\t\t\t\t\tif (match2) candidates.push({ userid, prefixIndex: match2[1].length });\r\n\t\t\t\t} else if (idprefix && userid.startsWith(idprefix)) {\r\n\t\t\t\t\tif (match1) candidates.push({ userid, prefixIndex: match1[1].length });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Sort by most recent to speak in the chat, or, in the case of a tie,\r\n\t\t\t// in alphabetical order.\r\n\t\t\tconst userActivity = this.props.room.userActivity;\r\n\t\t\tcandidates.sort((a, b) => {\r\n\t\t\t\tif (a.prefixIndex !== b.prefixIndex) {\r\n\t\t\t\t\t// shorter prefix length comes first\r\n\t\t\t\t\treturn a.prefixIndex - b.prefixIndex;\r\n\t\t\t\t}\r\n\t\t\t\tconst aIndex = userActivity?.indexOf(a.userid as ID) ?? -1;\r\n\t\t\t\tconst bIndex = userActivity?.indexOf(b.userid as ID) ?? -1;\r\n\t\t\t\tif (aIndex !== bIndex) {\r\n\t\t\t\t\treturn bIndex - aIndex; // -1 is fortunately already in the correct order\r\n\t\t\t\t}\r\n\t\t\t\treturn (a.userid < b.userid) ? -1 : 1; // alphabetical order\r\n\t\t\t});\r\n\r\n\t\t\tif (!candidates.length) {\r\n\t\t\t\tthis.tabComplete = null;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthis.tabComplete = {\r\n\t\t\t\tcandidates,\r\n\t\t\t\tcandidateIndex: 0,\r\n\t\t\t\tprefix,\r\n\t\t\t\tcursor: prefix,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// Substitute in the tab-completed name\r\n\t\tconst candidate = this.tabComplete.candidates[this.tabComplete.candidateIndex];\r\n\t\tlet name = users[candidate.userid];\r\n\t\tif (!name) return true;\r\n\r\n\t\tname = Dex.getShortName(name.slice(1)); // Remove rank and busy characters\r\n\t\tconst cursor = this.tabComplete.prefix.slice(0, candidate.prefixIndex) + name;\r\n\t\tthis.setValue(cursor + value.slice(end), cursor.length);\r\n\t\tthis.tabComplete.cursor = cursor;\r\n\t\treturn true;\r\n\t}\r\n\tundoTabComplete() {\r\n\t\tif (!this.tabComplete) return false;\r\n\t\tconst value = this.getValue();\r\n\t\tif (!value.startsWith(this.tabComplete.cursor)) return false;\r\n\r\n\t\tthis.setValue(this.tabComplete.prefix + value.slice(this.tabComplete.cursor.length), this.tabComplete.prefix.length);\r\n\t\tthis.tabComplete = null;\r\n\t\treturn true;\r\n\t}\r\n\ttoggleFormatChar(formatChar: string) {\r\n\t\tlet { value, start, end } = this.getSelection();\r\n\r\n\t\t// make sure start and end aren't midway through the syntax\r\n\t\tif (value.charAt(start) === formatChar && value.charAt(start - 1) === formatChar &&\r\n\t\t\tvalue.charAt(start - 2) !== formatChar) {\r\n\t\t\tstart++;\r\n\t\t}\r\n\t\tif (value.charAt(end) === formatChar && value.charAt(end - 1) === formatChar &&\r\n\t\t\tvalue.charAt(end - 2) !== formatChar) {\r\n\t\t\tend--;\r\n\t\t}\r\n\r\n\t\t// wrap in doubled format char\r\n\t\tconst wrap = formatChar + formatChar;\r\n\t\tvalue = value.slice(0, start) + wrap + value.slice(start, end) + wrap + value.slice(end);\r\n\t\tstart += 2;\r\n\t\tend += 2;\r\n\r\n\t\t// prevent nesting\r\n\t\tconst nesting = wrap + wrap;\r\n\t\tif (value.slice(start - 4, start) === nesting) {\r\n\t\t\tvalue = value.slice(0, start - 4) + value.slice(start);\r\n\t\t\tstart -= 4;\r\n\t\t\tend -= 4;\r\n\t\t} else if (start !== end && value.slice(start - 2, start + 2) === nesting) {\r\n\t\t\tvalue = value.slice(0, start - 2) + value.slice(start + 2);\r\n\t\t\tstart -= 2;\r\n\t\t\tend -= 4;\r\n\t\t}\r\n\t\tif (value.slice(end, end + 4) === nesting) {\r\n\t\t\tvalue = value.slice(0, end) + value.slice(end + 4);\r\n\t\t} else if (start !== end && value.slice(end - 2, end + 2) === nesting) {\r\n\t\t\tvalue = value.slice(0, end - 2) + value.slice(end + 2);\r\n\t\t\tend -= 2;\r\n\t\t}\r\n\r\n\t\tthis.setValue(value, start, end);\r\n\t\treturn true;\r\n\t}\r\n\toverride render() {\r\n\t\tconst { room } = this.props;\r\n\t\tconst OLD_TEXTBOX = false;\r\n\t\tconst canTalk = PS.user.named || room.id === 'dm-';\r\n\t\tif (room.connected === 'client-only' && room.id.startsWith('battle-')) {\r\n\t\t\treturn <div\r\n\t\t\t\tclass=\"chat-log-add hasuserlist\" onClick={this.focusIfNoSelection} style={{ left: this.props.left || 0 }}\r\n\t\t\t><CopyableURLBox url={`https://psim.us/r/${room.id.slice(7)}`} /></div>;\r\n\t\t}\r\n\t\treturn <div\r\n\t\t\tclass=\"chat-log-add hasuserlist\" onClick={this.focusIfNoSelection} style={{ left: this.props.left || 0 }}\r\n\t\t>\r\n\t\t\t<form class={`chatbox${this.props.tinyLayout ? ' nolabel' : ''}`} style={canTalk ? {} : { display: 'none' }}>\r\n\t\t\t\t<label style={`color:${BattleLog.usernameColor(PS.user.userid)}`}>{PS.user.name}:</label>\r\n\t\t\t\t{OLD_TEXTBOX ? <textarea\r\n\t\t\t\t\tclass={room.connected === true && canTalk ? 'textbox autofocus' : 'textbox disabled'}\r\n\t\t\t\t\tautofocus\r\n\t\t\t\t\trows={1}\r\n\t\t\t\t\tonInput={this.update}\r\n\t\t\t\t\tonKeyDown={this.onKeyDown}\r\n\t\t\t\t\tstyle={{ resize: 'none', width: '100%', height: '16px', padding: '2px 3px 1px 3px' }}\r\n\t\t\t\t\tplaceholder={PSView.focusPreview(room)}\r\n\t\t\t\t/> : <ChatTextBox\r\n\t\t\t\t\tdisabled={room.connected !== true || !canTalk}\r\n\t\t\t\t\tplaceholder={PSView.focusPreview(room)}\r\n\t\t\t\t/>}\r\n\t\t\t</form>\r\n\t\t\t{!canTalk && <button data-href=\"login\" class=\"button autofocus\">\r\n\t\t\t\tChoose a name before sending messages\r\n\t\t\t</button>}\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nclass ChatTextBox extends preact.Component<{ placeholder: string, disabled?: boolean }> {\r\n\toverride shouldComponentUpdate(nextProps: any) {\r\n\t\tthis.base!.setAttribute(\"placeholder\", nextProps.placeholder);\r\n\t\tthis.base!.classList?.toggle('disabled', !!nextProps.disabled);\r\n\t\tthis.base!.classList?.toggle('autofocus', !nextProps.disabled);\r\n\t\treturn false;\r\n\t}\r\n\thandleFocus = () => {\r\n\t\tPSView.setTextboxFocused(true);\r\n\t};\r\n\thandleBlur = () => {\r\n\t\tPSView.setTextboxFocused(false);\r\n\t};\r\n\toverride render() {\r\n\t\treturn <pre\r\n\t\t\tclass={`textbox textbox-empty ${this.props.disabled ? ' disabled' : ' autofocus'}`} placeholder={this.props.placeholder}\r\n\t\t\tonFocus={this.handleFocus} onBlur={this.handleBlur}\r\n\t\t>{'\\n'}</pre>;\r\n\t}\r\n}\r\n\r\nclass ChatPanel extends PSRoomPanel<ChatRoom> {\r\n\tstatic readonly id = 'chat';\r\n\tstatic readonly routes = ['dm-*', 'groupchat-*', '*'];\r\n\tstatic readonly Model = ChatRoom;\r\n\tstatic readonly location = 'right';\r\n\tstatic readonly icon = <i class=\"fa fa-comment-o\" aria-hidden></i>;\r\n\toverride componentDidMount(): void {\r\n\t\tsuper.componentDidMount();\r\n\t\tthis.subscribeTo(PS.user, () => {\r\n\t\t\tthis.props.room.updateTarget();\r\n\t\t});\r\n\t}\r\n\tsend = (text: string, elem: HTMLElement) => {\r\n\t\tthis.props.room.send(text, elem);\r\n\t};\r\n\tonKey = (e: KeyboardEvent) => {\r\n\t\tif (e.keyCode === 33) { // Pg Up key\r\n\t\t\tconst chatLog = this.base!.getElementsByClassName('chat-log')[0] as HTMLDivElement;\r\n\t\t\tchatLog.scrollTop = chatLog.scrollTop - chatLog.offsetHeight + 60;\r\n\t\t\treturn true;\r\n\t\t} else if (e.keyCode === 34) { // Pg Dn key\r\n\t\t\tconst chatLog = this.base!.getElementsByClassName('chat-log')[0] as HTMLDivElement;\r\n\t\t\tchatLog.scrollTop = chatLog.scrollTop + chatLog.offsetHeight - 60;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\tmakeChallenge = (e: Event, format: string, team?: Team) => {\r\n\t\tPS.requestNotifications();\r\n\t\tconst room = this.props.room;\r\n\t\tconst packedTeam = team ? team.packedTeam : '';\r\n\t\tconst privacy = PS.mainmenu.adjustPrivacy();\r\n\t\tif (!room.pmTarget) throw new Error(\"Not a PM room\");\r\n\t\tPS.send(`/utm ${packedTeam}`);\r\n\t\tPS.send(`${privacy}/challenge ${room.pmTarget}, ${format}`);\r\n\t\troom.challengeMenuOpen = false;\r\n\t\troom.challenging = {\r\n\t\t\tformatName: format,\r\n\t\t\tteamFormat: format,\r\n\t\t};\r\n\t\troom.update(null);\r\n\t};\r\n\tacceptChallenge = (e: Event, format: string, team?: Team) => {\r\n\t\tconst room = this.props.room;\r\n\t\tconst packedTeam = team ? team.packedTeam : '';\r\n\t\tif (!room.pmTarget) throw new Error(\"Not a PM room\");\r\n\t\tPS.send(`/utm ${packedTeam}`);\r\n\t\tthis.props.room.send(`/accept`);\r\n\t\troom.challenged = null;\r\n\t\troom.update(null);\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst tinyLayout = room.width < 450;\r\n\r\n\t\tconst challengeTo = room.challenging ? <div class=\"challenge\">\r\n\t\t\t<p>Waiting for {room.pmTarget}...</p>\r\n\t\t\t<TeamForm format={room.challenging.formatName} teamFormat={room.challenging.teamFormat} onSubmit={null}>\r\n\t\t\t\t<button data-cmd=\"/cancelchallenge\" class=\"button\">Cancel</button>\r\n\t\t\t</TeamForm>\r\n\t\t</div> : room.challengeMenuOpen ? <div class=\"challenge\">\r\n\t\t\t<TeamForm onSubmit={this.makeChallenge}>\r\n\t\t\t\t<button type=\"submit\" class=\"button button-first\">\r\n\t\t\t\t\t<strong>Challenge</strong>\r\n\t\t\t\t</button><button data-href=\"battleoptions\" class=\"button button-last\" aria-label=\"Battle options\">\r\n\t\t\t\t\t<i class=\"fa fa-caret-down\" aria-hidden></i>\r\n\t\t\t\t</button> {}\r\n\t\t\t\t<button data-cmd=\"/cancelchallenge\" class=\"button\">Cancel</button>\r\n\t\t\t</TeamForm>\r\n\t\t</div> : null;\r\n\r\n\t\tconst challengeFrom = room.challenged ? <div class=\"challenge\">\r\n\t\t\t{!!room.challenged.message && <p>{room.challenged.message}</p>}\r\n\t\t\t<TeamForm format={room.challenged.formatName} teamFormat={room.challenged.teamFormat} onSubmit={this.acceptChallenge}>\r\n\t\t\t\t<button type=\"submit\" class={room.challenged.formatName ? `button button-first` : `button`}>\r\n\t\t\t\t\t<strong>{room.challenged.acceptButtonLabel || 'Accept'}</strong>\r\n\t\t\t\t</button>\r\n\t\t\t\t{room.challenged.formatName && <button data-href=\"battleoptions\" class=\"button button-last\" aria-label=\"Battle options\">\r\n\t\t\t\t\t<i class=\"fa fa-caret-down\" aria-hidden></i>\r\n\t\t\t\t</button>} {}\r\n\t\t\t\t<button data-cmd=\"/reject\" class=\"button\">{room.challenged.rejectButtonLabel || 'Reject'}</button>\r\n\t\t\t</TeamForm>\r\n\t\t</div> : null;\r\n\r\n\t\treturn <PSPanelWrapper room={room} focusClick fullSize>\r\n\t\t\t<ChatLog class=\"chat-log\" room={this.props.room} left={tinyLayout ? 0 : 146} top={room.tour?.info.isActive ? 30 : 0}>\r\n\t\t\t\t{challengeTo}{challengeFrom}{PS.isOffline && <p class=\"buttonbar\">\r\n\t\t\t\t\t<button class=\"button\" data-cmd=\"/reconnect\">\r\n\t\t\t\t\t\t<i class=\"fa fa-plug\" aria-hidden></i> <strong>Reconnect</strong>\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t{PS.connection?.reconnectTimer && <small>(Autoreconnect in {Math.round(PS.connection.reconnectDelay / 1000)}s)</small>}\r\n\t\t\t\t</p>}\r\n\t\t\t</ChatLog>\r\n\t\t\t{room.tour && <TournamentBox tour={room.tour} left={tinyLayout ? 0 : 146} />}\r\n\t\t\t<ChatTextEntry\r\n\t\t\t\troom={this.props.room} onMessage={this.send} onKey={this.onKey} left={tinyLayout ? 0 : 146} tinyLayout={tinyLayout}\r\n\t\t\t/>\r\n\t\t\t<ChatUserList room={this.props.room} minimized={tinyLayout} />\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nexport class ChatUserList extends preact.Component<{\r\n\troom: ChatRoom, left?: number, top?: number, minimized?: boolean, static?: boolean,\r\n}> {\r\n\trender() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst pmTargetid = room.pmTarget ? toID(room.pmTarget) : null;\r\n\t\treturn <div\r\n\t\t\tclass={'userlist' + (this.props.minimized ? ' userlist-hidden' : this.props.static ? ' userlist-static' : '')}\r\n\t\t\tstyle={{ left: this.props.left || 0, top: this.props.top || 0 }}\r\n\t\t>\r\n\t\t\t{!this.props.minimized ? (\r\n\t\t\t\t<div class=\"userlist-count\"><small>{room.userCount} users</small></div>\r\n\t\t\t) : room.id === 'dm-' ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button class=\"button button-middle\" data-cmd=\"/help\">Commands</button>\r\n\t\t\t\t</>\r\n\t\t\t) : pmTargetid ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button class=\"button button-middle\" data-cmd=\"/challenge\">Challenge</button>\r\n\t\t\t\t\t<button class=\"button button-middle\" data-href={`useroptions-${pmTargetid}`}>{'\\u2026'}</button>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<button data-href=\"userlist\" class=\"button button-middle\">{room.userCount} users</button>\r\n\t\t\t)}\r\n\t\t\t<ul>\r\n\t\t\t\t{room.onlineUsers.map(([userid, name]) => {\r\n\t\t\t\t\tconst groupSymbol = name.charAt(0);\r\n\t\t\t\t\tconst group = PS.server.groups[groupSymbol] || { type: 'user', order: 0 };\r\n\t\t\t\t\tlet color;\r\n\t\t\t\t\tif (name.endsWith('@!')) {\r\n\t\t\t\t\t\tname = name.slice(0, -2);\r\n\t\t\t\t\t\tcolor = '#888888';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolor = BattleLog.usernameColor(userid);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <li key={userid}><button class=\"userbutton username\">\r\n\t\t\t\t\t\t<em class={`group${['leadership', 'staff'].includes(group.type!) ? ' staffgroup' : ''}`}>\r\n\t\t\t\t\t\t\t{groupSymbol}\r\n\t\t\t\t\t\t</em>\r\n\t\t\t\t\t\t{group.type === 'leadership' ? (\r\n\t\t\t\t\t\t\t<strong><em style={`color:${color}`}>{name.slice(1)}</em></strong>\r\n\t\t\t\t\t\t) : group.type === 'staff' ? (\r\n\t\t\t\t\t\t\t<strong style={`color:${color} `}>{name.slice(1)}</strong>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span style={`color:${color}`}>{name.slice(1)}</span>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</button></li>;\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport class ChatLog extends preact.Component<{\r\n\tclass: string, room: ChatRoom, children?: preact.ComponentChildren,\r\n\tleft?: number, top?: number, noSubscription?: boolean,\r\n}> {\r\n\tsubscription: PSSubscription | null = null;\r\n\toverride componentDidMount() {\r\n\t\tconst room = this.props.room;\r\n\t\tif (room.log) {\r\n\t\t\tconst elem = room.log.elem;\r\n\t\t\tthis.base!.replaceChild(elem, this.base!.firstChild!);\r\n\t\t\telem.className = this.props.class;\r\n\t\t\telem.style.left = `${this.props.left || 0}px`;\r\n\t\t\telem.style.top = `${this.props.top || 0}px`;\r\n\t\t}\r\n\t\tif (!this.props.noSubscription) {\r\n\t\t\troom.log ||= new BattleLog(this.base!.firstChild as HTMLDivElement);\r\n\t\t\troom.log.getHighlight = room.handleHighlight;\r\n\t\t\tif (room.backlog) {\r\n\t\t\t\tconst backlog = room.backlog;\r\n\t\t\t\troom.backlog = null;\r\n\t\t\t\tfor (const args of backlog) {\r\n\t\t\t\t\troom.log.add(args, undefined, undefined, PS.prefs.timestamps[room.pmTarget ? 'pms' : 'chatrooms']);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.subscription = room.subscribe(tokens => {\r\n\t\t\t\tif (!tokens) return;\r\n\t\t\t\tthis.props.room.log!.add(tokens, undefined, undefined, PS.prefs.timestamps[room.pmTarget ? 'pms' : 'chatrooms']);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.setControlsJSX(this.props.children);\r\n\t}\r\n\toverride componentWillUnmount() {\r\n\t\tthis.subscription?.unsubscribe();\r\n\t}\r\n\toverride shouldComponentUpdate(props: typeof ChatLog.prototype.props) {\r\n\t\tconst elem = this.base!.firstChild as HTMLDivElement;\r\n\t\tif (props.class !== this.props.class) {\r\n\t\t\telem.className = props.class;\r\n\t\t}\r\n\t\tif (props.left !== this.props.left) elem.style.left = `${props.left || 0}px`;\r\n\t\tif (props.top !== this.props.top) elem.style.top = `${props.top || 0}px`;\r\n\t\tthis.setControlsJSX(props.children);\r\n\t\tthis.updateScroll();\r\n\t\treturn false;\r\n\t}\r\n\tsetControlsJSX(jsx: preact.ComponentChildren | undefined) {\r\n\t\tconst elem = this.base!.firstChild as HTMLDivElement;\r\n\t\tconst children = elem.children;\r\n\t\tlet controlsElem = children[children.length - 1] as HTMLDivElement | undefined;\r\n\t\tif (controlsElem && controlsElem.className !== 'controls') controlsElem = undefined;\r\n\t\tif (!jsx) {\r\n\t\t\tif (!controlsElem) return;\r\n\t\t\telem.removeChild(controlsElem);\r\n\t\t\tthis.updateScroll();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!controlsElem) {\r\n\t\t\tcontrolsElem = document.createElement('div');\r\n\t\t\tcontrolsElem.className = 'controls';\r\n\t\t\telem.appendChild(controlsElem);\r\n\t\t}\r\n\t\t// for some reason, the replaceNode feature isn't working?\r\n\t\tif (controlsElem.children[0]) controlsElem.removeChild(controlsElem.children[0]);\r\n\t\tpreact.render(<div>{jsx}</div>, controlsElem);\r\n\t\tthis.updateScroll();\r\n\t}\r\n\tupdateScroll() {\r\n\t\tthis.props.room.log?.updateScroll();\r\n\t}\r\n\trender() {\r\n\t\treturn <div><div\r\n\t\t\tclass={this.props.class} role=\"log\" aria-label=\"Chat log\"\r\n\t\t\tstyle={{ left: this.props.left || 0, top: this.props.top || 0 }}\r\n\t\t></div></div>;\r\n\t}\r\n}\r\n\r\nPS.addRoomType(ChatPanel);\r\n"],
  "mappings": "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",
  "names": ["preact"]
}
