{
  "version": 3,
  "sources": ["../../../client/src/panel-battle.tsx"],
  "sourcesContent": ["/**\r\n * Battle panel\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport preact from \"../js/lib/preact\";\r\nimport { PS, PSRoom, type RoomOptions, type RoomID, Config } from \"./client-main\";\r\nimport { PSIcon, PSPanelWrapper, PSRoomPanel } from \"./panels\";\r\nimport { ChatLog, ChatRoom, ChatTextEntry, ChatUserList } from \"./panel-chat\";\r\nimport { FormatDropdown } from \"./panel-mainmenu\";\r\nimport { Battle, type Pokemon, type ServerPokemon } from \"./battle\";\r\nimport { BattleScene } from \"./battle-animations\";\r\nimport { Dex, toID, type ID } from \"./battle-dex\";\r\nimport {\r\n\tBattleChoiceBuilder, type BattleRequestActivePokemon, type BattleRequestSideInfo,\r\n\ttype BattleRequest, type BattleMoveRequest, type BattleSwitchRequest, type BattleTeamRequest,\r\n} from \"./battle-choices\";\r\nimport type { Args } from \"./battle-text-parser\";\r\nimport { ModifiableValue } from \"./battle-tooltips\";\r\nimport { Net } from \"./client-connection\";\r\n\r\ntype BattleDesc = {\r\n\tid: RoomID,\r\n\tminElo?: number | string,\r\n\tp1?: string,\r\n\tp2?: string,\r\n\tp3?: string,\r\n\tp4?: string,\r\n};\r\n\r\nexport class BattlesRoom extends PSRoom {\r\n\toverride readonly classType = 'battles';\r\n\t/** null means still loading */\r\n\tformat = '';\r\n\tbattles: BattleDesc[] | null = null;\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tthis.refresh();\r\n\t\t// If graphics preference is set to use BW sprites\r\n\t\tif (PS.prefs.bwgfx) {\r\n\t\t\tDex.loadSpriteData('bw');\r\n\t\t}\r\n\t}\r\n\tsetFormat(format: string) {\r\n\t\tif (format === this.format) return this.refresh();\r\n\t\tthis.battles = null;\r\n\t\tthis.format = format;\r\n\t\tthis.update(null);\r\n\t\tthis.refresh();\r\n\t}\r\n\trefresh() {\r\n\t\tPS.send(`/cmd roomlist ${toID(this.format)}`);\r\n\t}\r\n}\r\n\r\nclass BattlesPanel extends PSRoomPanel<BattlesRoom> {\r\n\tstatic readonly id = 'battles';\r\n\tstatic readonly routes = ['battles'];\r\n\tstatic readonly Model = BattlesRoom;\r\n\tstatic readonly location = 'right';\r\n\tstatic readonly icon = <i class=\"fa fa-caret-square-o-right\" aria-hidden></i>;\r\n\tstatic readonly title = 'Battles';\r\n\trefresh = () => {\r\n\t\tthis.props.room.refresh();\r\n\t};\r\n\tchangeFormat = (e: Event) => {\r\n\t\tconst value = (e.target as HTMLButtonElement).value;\r\n\t\tthis.props.room.setFormat(value);\r\n\t};\r\n\trenderBattleLink(battle: BattleDesc) {\r\n\t\tconst format = battle.id.split('-')[1];\r\n\t\tconst minEloMessage = typeof battle.minElo === 'number' ? `rated ${battle.minElo}` : battle.minElo;\r\n\t\treturn <div key={battle.id}><a href={`/${battle.id}`} class=\"blocklink\">\r\n\t\t\t{minEloMessage && <small style=\"float:right\">({minEloMessage})</small>}\r\n\t\t\t<small>[{format}]</small><br />\r\n\t\t\t<em class=\"p1\">{battle.p1}</em> <small class=\"vs\">vs.</small> <em class=\"p2\">{battle.p2}</em>\r\n\t\t</a></div>;\r\n\t}\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\treturn <PSPanelWrapper room={room} scrollable><div class=\"pad\">\r\n\t\t\t<button class=\"button\" style=\"float:right;font-size:10pt;margin-top:3px\" name=\"closeRoom\">\r\n\t\t\t\t<i class=\"fa fa-times\" aria-hidden></i> Close\r\n\t\t\t</button>\r\n\t\t\t<div class=\"roomlist\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<button class=\"button\" name=\"refresh\" onClick={this.refresh}>\r\n\t\t\t\t\t\t<i class=\"fa fa-refresh\" aria-hidden></i> Refresh\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={Dex.getPokemonIcon('meloetta-pirouette') + ';display:inline-block;vertical-align:middle'} class=\"picon\"\r\n\t\t\t\t\t\ttitle=\"Meloetta is PS's mascot! The Pirouette forme is Fighting-type, and represents our battles.\"\r\n\t\t\t\t\t></span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">Format:</label><FormatDropdown onChange={this.changeFormat} placeholder=\"(All formats)\" />\r\n\t\t\t\t</p>\r\n\t\t\t\t{/* <label>\r\n\t\t\t\t\tMinimum Elo: <select name=\"elofilter\">\r\n\t\t\t\t\t\t<option value=\"none\">None</option><option value=\"1100\">1100</option><option value=\"1300\">1300</option>\r\n\t\t\t\t\t\t<option value=\"1500\">1500</option><option value=\"1700\">1700</option><option value=\"1900\">1900</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<form class=\"search\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"prefixsearch\" class=\"textbox\" placeholder=\"Username prefix\"/>\r\n\t\t\t\t\t\t<button type=\"submit\" class=\"button\">Search</button>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</form> */}\r\n\t\t\t\t<div class=\"list\">{!room.battles ? (\r\n\t\t\t\t\t<p>Loading...</p>\r\n\t\t\t\t) : !room.battles.length ? (\r\n\t\t\t\t\t<p>No battles are going on</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\troom.battles.map(battle => this.renderBattleLink(battle))\r\n\t\t\t\t)}</div>\r\n\t\t\t</div>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nexport class BattleRoom extends ChatRoom {\r\n\toverride readonly classType = 'battle';\r\n\tdeclare pmTarget: null;\r\n\tdeclare challengeMenuOpen: false;\r\n\tdeclare challengingFormat: null;\r\n\tdeclare challengedFormat: null;\r\n\r\n\toverride battle: Battle = null!;\r\n\t/** null if spectator, otherwise current player's info */\r\n\tside: BattleRequestSideInfo | null = null;\r\n\trequest: BattleRequest | null = null;\r\n\tchoices: BattleChoiceBuilder | null = null;\r\n\tautoTimerActivated: boolean | null = null;\r\n\r\n\tloadReplay() {\r\n\t\tconst replayid = this.id.slice(7);\r\n\t\tNet(`https://replay.pokemonshowdown.com/${replayid}.json`).get().catch().then(data => {\r\n\t\t\ttry {\r\n\t\t\t\tconst replay = JSON.parse(data);\r\n\t\t\t\tthis.title = `[${replay.format}] ${replay.players.join(' vs. ')}`;\r\n\t\t\t\tthis.battle.stepQueue = replay.log.split('\\n');\r\n\t\t\t\tthis.battle.atQueueEnd = false;\r\n\t\t\t\tthis.battle.pause();\r\n\t\t\t\tthis.battle.seekTurn(0);\r\n\t\t\t\tthis.connected = 'client-only';\r\n\t\t\t\tthis.update(null);\r\n\t\t\t} catch {\r\n\t\t\t\tthis.receiveLine(['error', 'Battle not found']);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nclass BattleDiv extends preact.Component<{ room: BattleRoom }> {\r\n\toverride shouldComponentUpdate() {\r\n\t\treturn false;\r\n\t}\r\n\toverride componentDidMount() {\r\n\t\tconst room = this.props.room;\r\n\t\tif (room.battle) {\r\n\t\t\tthis.base!.replaceChild(room.battle.scene.$frame![0], this.base!.firstChild!);\r\n\t\t}\r\n\t}\r\n\toverride render() {\r\n\t\treturn <div><div class=\"battle\"></div></div>;\r\n\t}\r\n}\r\n\r\nclass TimerButton extends preact.Component<{ room: BattleRoom }> {\r\n\ttimerInterval: number | null = null;\r\n\toverride componentWillUnmount() {\r\n\t\tif (this.timerInterval) {\r\n\t\t\tclearInterval(this.timerInterval);\r\n\t\t\tthis.timerInterval = null;\r\n\t\t}\r\n\t}\r\n\tsecondsToTime(seconds: number | true) {\r\n\t\tif (seconds === true) return '-:--';\r\n\t\tconst minutes = Math.floor(seconds / 60);\r\n\t\tseconds -= minutes * 60;\r\n\t\treturn `${minutes}:${(seconds < 10 ? '0' : '')}${seconds}`;\r\n\t}\r\n\trender() {\r\n\t\tlet time = 'Timer';\r\n\t\tconst room = this.props.room;\r\n\t\tif (!this.timerInterval && room.battle.kickingInactive) {\r\n\t\t\tthis.timerInterval = setInterval(() => {\r\n\t\t\t\tif (typeof room.battle.kickingInactive === 'number' && room.battle.kickingInactive > 1) {\r\n\t\t\t\t\troom.battle.kickingInactive--;\r\n\t\t\t\t\tif (room.battle.graceTimeLeft) room.battle.graceTimeLeft--;\r\n\t\t\t\t\telse if (room.battle.totalTimeLeft) room.battle.totalTimeLeft--;\r\n\t\t\t\t}\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t}, 1000);\r\n\t\t} else if (this.timerInterval && !room.battle.kickingInactive) {\r\n\t\t\tclearInterval(this.timerInterval);\r\n\t\t\tthis.timerInterval = null;\r\n\t\t}\r\n\r\n\t\tlet timerTicking = (room.battle.kickingInactive &&\r\n\t\t\troom.request && room.request.requestType !== \"wait\" && (room.choices && !room.choices.isDone())) ?\r\n\t\t\t' timerbutton-on' : '';\r\n\r\n\t\tif (room.battle.kickingInactive) {\r\n\t\t\tconst secondsLeft = room.battle.kickingInactive;\r\n\t\t\ttime = this.secondsToTime(secondsLeft);\r\n\t\t\tif (secondsLeft !== true) {\r\n\t\t\t\tif (secondsLeft <= 10 && timerTicking) {\r\n\t\t\t\t\ttimerTicking = ' timerbutton-critical';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (room.battle.totalTimeLeft) {\r\n\t\t\t\t\tconst totalTime = this.secondsToTime(room.battle.totalTimeLeft);\r\n\t\t\t\t\ttime += ` |  ${totalTime} total`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn <button\r\n\t\t\tstyle={{ position: \"absolute\", right: '10px' }} data-href=\"battletimer\" class={`button${timerTicking}`} role=\"timer\"\r\n\t\t>\r\n\t\t\t<i class=\"fa fa-hourglass-start\" aria-hidden></i> {time}\r\n\t\t</button>;\r\n\t}\r\n};\r\n\r\nclass BattlePanel extends PSRoomPanel<BattleRoom> {\r\n\tstatic readonly id = 'battle';\r\n\tstatic readonly routes = ['battle-*'];\r\n\tstatic readonly Model = BattleRoom;\r\n\t/** last displayed team. will not show the most recent request until the last one is gone. */\r\n\tteam: ServerPokemon[] | null = null;\r\n\tsend = (text: string, elem?: HTMLElement) => {\r\n\t\tthis.props.room.send(text, elem);\r\n\t};\r\n\tfocusIfNoSelection = () => {\r\n\t\tif (window.getSelection?.()?.type === 'Range') return;\r\n\t\tthis.focus();\r\n\t};\r\n\tonKey = (e: KeyboardEvent) => {\r\n\t\tif (e.keyCode === 33) { // Pg Up key\r\n\t\t\tconst chatLog = this.base!.getElementsByClassName('chat-log')[0] as HTMLDivElement;\r\n\t\t\tchatLog.scrollTop = chatLog.scrollTop - chatLog.offsetHeight + 60;\r\n\t\t\treturn true;\r\n\t\t} else if (e.keyCode === 34) { // Pg Dn key\r\n\t\t\tconst chatLog = this.base!.getElementsByClassName('chat-log')[0] as HTMLDivElement;\r\n\t\t\tchatLog.scrollTop = chatLog.scrollTop + chatLog.offsetHeight - 60;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\ttoggleBoostedMove = (e: Event) => {\r\n\t\tconst checkbox = e.currentTarget as HTMLInputElement;\r\n\t\tconst choices = this.props.room.choices;\r\n\t\tif (!choices) return; // shouldn't happen\r\n\t\tswitch (checkbox.name) {\r\n\t\tcase 'mega':\r\n\t\t\tchoices.current.mega = checkbox.checked;\r\n\t\t\tbreak;\r\n\t\tcase 'megax':\r\n\t\t\tchoices.current.megax = checkbox.checked;\r\n\t\t\tchoices.current.megay = false;\r\n\t\t\tbreak;\r\n\t\tcase 'megay':\r\n\t\t\tchoices.current.megay = checkbox.checked;\r\n\t\t\tchoices.current.megax = false;\r\n\t\t\tbreak;\r\n\t\tcase 'ultra':\r\n\t\t\tchoices.current.ultra = checkbox.checked;\r\n\t\t\tbreak;\r\n\t\tcase 'z':\r\n\t\t\tchoices.current.z = checkbox.checked;\r\n\t\t\tbreak;\r\n\t\tcase 'max':\r\n\t\t\tchoices.current.max = checkbox.checked;\r\n\t\t\tbreak;\r\n\t\tcase 'tera':\r\n\t\t\tchoices.current.tera = checkbox.checked;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.props.room.update(null);\r\n\t};\r\n\toverride componentDidMount() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst $elem = $(this.base!);\r\n\t\tconst battle = (room.battle ||= new Battle({\r\n\t\t\tid: room.id as any,\r\n\t\t\t$frame: $elem.find('.battle'),\r\n\t\t\t$logFrame: $elem.find('.battle-log'),\r\n\t\t\tlog: room.backlog?.map(args => '|' + args.join('|')),\r\n\t\t}));\r\n\t\tconst scene = battle.scene as BattleScene;\r\n\t\troom.backlog = null;\r\n\t\troom.log ||= scene.log;\r\n\t\troom.log.getHighlight = room.handleHighlight;\r\n\t\tscene.tooltips.listen($elem.find('.battle-controls-container'));\r\n\t\tscene.tooltips.listen(scene.log.elem);\r\n\t\tsuper.componentDidMount();\r\n\t\tbattle.seekTurn(Infinity);\r\n\t\tbattle.subscribe(() => this.forceUpdate());\r\n\t}\r\n\tbattleHeight = 360;\r\n\tupdateLayout() {\r\n\t\tif (!this.base) return;\r\n\t\tconst room = this.props.room;\r\n\t\tconst width = this.base.offsetWidth;\r\n\t\tif (width && width < 640) {\r\n\t\t\tconst scale = (width / 640);\r\n\t\t\troom.battle?.scene.$frame!.css('transform', `scale(${scale})`);\r\n\t\t\tthis.battleHeight = Math.round(360 * scale);\r\n\t\t} else {\r\n\t\t\troom.battle?.scene.$frame!.css('transform', 'none');\r\n\t\t\tthis.battleHeight = 360;\r\n\t\t}\r\n\t}\r\n\toverride receiveLine(args: Args) {\r\n\t\tconst room = this.props.room;\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'initdone':\r\n\t\t\troom.battle.seekTurn(Infinity);\r\n\t\t\treturn;\r\n\t\tcase 'request':\r\n\t\t\tthis.receiveRequest(args[1] ? JSON.parse(args[1]) : null);\r\n\t\t\treturn;\r\n\t\tcase 'win': case 'tie':\r\n\t\t\tthis.receiveRequest(null);\r\n\t\t\tbreak;\r\n\t\tcase 'c': case 'c:': case 'chat': case 'chatmsg': case 'inactive':\r\n\t\t\troom.battle.instantAdd('|' + args.join('|'));\r\n\t\t\treturn;\r\n\t\tcase 'error':\r\n\t\t\tif (args[1].startsWith('[Invalid choice]') && room.request) {\r\n\t\t\t\troom.choices = new BattleChoiceBuilder(room.request);\r\n\t\t\t\troom.update(null);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\troom.battle.add('|' + args.join('|'));\r\n\t\tif (PS.prefs.noanim) this.props.room.battle.seekTurn(Infinity);\r\n\t}\r\n\treceiveRequest(request: BattleRequest | null) {\r\n\t\tconst room = this.props.room;\r\n\t\tif (!request) {\r\n\t\t\troom.request = null;\r\n\t\t\troom.choices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (PS.prefs.autotimer && !room.battle.kickingInactive && !room.autoTimerActivated) {\r\n\t\t\tthis.send('/timer on');\r\n\t\t\troom.autoTimerActivated = true;\r\n\t\t}\r\n\r\n\t\tBattleChoiceBuilder.fixRequest(request, room.battle);\r\n\r\n\t\tif (request.side) {\r\n\t\t\troom.battle.myPokemon = request.side.pokemon;\r\n\t\t\troom.battle.setViewpoint(request.side.id);\r\n\t\t\troom.side = request.side;\r\n\t\t}\r\n\r\n\t\troom.request = request;\r\n\t\troom.choices = new BattleChoiceBuilder(request);\r\n\t\tthis.notifyRequest();\r\n\t\troom.update(null);\r\n\t}\r\n\tnotifyRequest() {\r\n\t\tconst room = this.props.room;\r\n\t\tlet oName = room.battle.farSide.name;\r\n\t\tif (oName) oName = \" against \" + oName;\r\n\t\tswitch (room.request?.requestType) {\r\n\t\tcase 'move':\r\n\t\t\troom.notify({ title: \"Your move!\", body: \"Move in your battle\" + oName });\r\n\t\t\tbreak;\r\n\t\tcase 'switch':\r\n\t\t\troom.notify({ title: \"Your switch!\", body: \"Switch in your battle\" + oName });\r\n\t\t\tbreak;\r\n\t\tcase 'team':\r\n\t\t\troom.notify({ title: \"Team preview!\", body: \"Choose your team order in your battle\" + oName });\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\trenderControls() {\r\n\t\tconst room = this.props.room;\r\n\t\tif (!room.battle) return null;\r\n\t\tif (room.battle.ended) return this.renderAfterBattleControls();\r\n\t\tif (room.side && room.request) {\r\n\t\t\treturn this.renderPlayerControls(room.request);\r\n\t\t}\r\n\t\tconst atStart = !room.battle.started;\r\n\t\tconst atEnd = room.battle.atQueueEnd;\r\n\t\treturn <div class=\"controls\">\r\n\t\t\t<p>\r\n\t\t\t\t{atEnd ? (\r\n\t\t\t\t\t<button class=\"button disabled\" aria-disabled data-cmd=\"/play\" style=\"min-width:4.5em\">\r\n\t\t\t\t\t\t<i class=\"fa fa-play\" aria-hidden></i><br />Play\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : room.battle.paused ? (\r\n\t\t\t\t\t<button class=\"button\" data-cmd=\"/play\" style=\"min-width:4.5em\">\r\n\t\t\t\t\t\t<i class=\"fa fa-play\" aria-hidden></i><br />Play\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button class=\"button\" data-cmd=\"/pause\" style=\"min-width:4.5em\">\r\n\t\t\t\t\t\t<i class=\"fa fa-pause\" aria-hidden></i><br />Pause\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)} {}\r\n\t\t\t\t<button class={\"button button-first\" + (atStart ? \" disabled\" : \"\")} data-cmd=\"/ffto 0\" style=\"margin-right:2px\">\r\n\t\t\t\t\t<i class=\"fa fa-undo\" aria-hidden></i><br />First turn\r\n\t\t\t\t</button>\r\n\t\t\t\t<button class={\"button button-first\" + (atStart ? \" disabled\" : \"\")} data-cmd=\"/ffto -1\">\r\n\t\t\t\t\t<i class=\"fa fa-step-backward\" aria-hidden></i><br />Prev turn\r\n\t\t\t\t</button>\r\n\t\t\t\t<button class={\"button button-last\" + (atEnd ? \" disabled\" : \"\")} data-cmd=\"/ffto +1\" style=\"margin-right:2px\">\r\n\t\t\t\t\t<i class=\"fa fa-step-forward\" aria-hidden></i><br />Skip turn\r\n\t\t\t\t</button>\r\n\t\t\t\t<button class={\"button button-last\" + (atEnd ? \" disabled\" : \"\")} data-cmd=\"/ffto end\">\r\n\t\t\t\t\t<i class=\"fa fa-fast-forward\" aria-hidden></i><br />Skip to end\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/switchsides\">\r\n\t\t\t\t\t<i class=\"fa fa-random\" aria-hidden></i> Switch viewpoint\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t</div>;\r\n\t}\r\n\trenderMoveButton(props: {\r\n\t\tname: string,\r\n\t\tcmd: string, type: Dex.TypeName, tooltip: string, moveData: { pp?: number, maxpp?: number, disabled?: boolean },\r\n\t} | null) {\r\n\t\tif (!props) {\r\n\t\t\treturn <button class=\"movebutton\" disabled>&nbsp;</button>;\r\n\t\t}\r\n\t\tconst pp = props.moveData.maxpp ? `${props.moveData.pp!}/${props.moveData.maxpp}` : '\\u2014';\r\n\t\treturn <button\r\n\t\t\tdata-cmd={props.cmd} data-tooltip={props.tooltip}\r\n\t\t\tclass={`movebutton has-tooltip ${props.moveData.disabled ? 'disabled' : `type-${props.type}`}`}\r\n\t\t\taria-disabled={props.moveData.disabled}\r\n\t\t>\r\n\t\t\t{props.name}<br />\r\n\t\t\t<small class=\"type\">{props.type}</small> <small class=\"pp\">{pp}</small>&nbsp;\r\n\t\t</button>;\r\n\t}\r\n\trenderPokemonButton(props: {\r\n\t\tpokemon: Pokemon | ServerPokemon | null, cmd: string, noHPBar?: boolean, disabled?: boolean | 'fade', tooltip: string,\r\n\t}) {\r\n\t\tconst pokemon = props.pokemon;\r\n\t\tif (!pokemon) {\r\n\t\t\treturn <button\r\n\t\t\t\tdata-cmd={props.cmd} class={`${props.disabled ? 'disabled ' : ''}has-tooltip`}\r\n\t\t\t\taria-disabled={props.disabled}\r\n\t\t\t\tstyle={props.disabled === 'fade' ? 'opacity: 0.5' : ''} data-tooltip={props.tooltip}\r\n\t\t\t>\r\n\t\t\t\t(empty slot)\r\n\t\t\t</button>;\r\n\t\t}\r\n\r\n\t\tlet hpColorClass;\r\n\t\tswitch (BattleScene.getHPColor(pokemon)) {\r\n\t\tcase 'y': hpColorClass = 'hpbar hpbar-yellow'; break;\r\n\t\tcase 'r': hpColorClass = 'hpbar hpbar-red'; break;\r\n\t\tdefault: hpColorClass = 'hpbar'; break;\r\n\t\t}\r\n\r\n\t\treturn <button\r\n\t\t\tdata-cmd={props.cmd} class={`${props.disabled ? 'disabled ' : ''}has-tooltip`}\r\n\t\t\taria-disabled={props.disabled}\r\n\t\t\tstyle={props.disabled === 'fade' ? 'opacity: 0.5' : ''} data-tooltip={props.tooltip}\r\n\t\t>\r\n\t\t\t{PSIcon({ pokemon })}\r\n\t\t\t{pokemon.name}\r\n\t\t\t{\r\n\t\t\t\t!props.noHPBar && !pokemon.fainted &&\r\n\t\t\t\t<span class={hpColorClass}>\r\n\t\t\t\t\t<span style={{ width: Math.round(pokemon.hp * 92 / pokemon.maxhp) || 1 }}></span>\r\n\t\t\t\t</span>\r\n\t\t\t}\r\n\t\t\t{!props.noHPBar && pokemon.status && <span class={`status ${pokemon.status}`}></span>}\r\n\t\t</button>;\r\n\t}\r\n\trenderMoveMenu(choices: BattleChoiceBuilder) {\r\n\t\tconst moveRequest = choices.currentMoveRequest()!;\r\n\r\n\t\tconst canDynamax = moveRequest.canDynamax && !choices.alreadyMax;\r\n\t\tconst canMegaEvo = moveRequest.canMegaEvo && !choices.alreadyMega;\r\n\t\tconst canMegaEvoX = moveRequest.canMegaEvoX && !choices.alreadyMega;\r\n\t\tconst canMegaEvoY = moveRequest.canMegaEvoY && !choices.alreadyMega;\r\n\t\tconst canZMove = moveRequest.zMoves && !choices.alreadyZ;\r\n\t\tconst canUltraBurst = moveRequest.canUltraBurst;\r\n\t\tconst canTerastallize = moveRequest.canTerastallize;\r\n\r\n\t\tconst maybeDisabled = moveRequest.maybeDisabled;\r\n\t\tconst maybeLocked = moveRequest.maybeLocked;\r\n\r\n\t\treturn <div class=\"movemenu\">\r\n\t\t\t{maybeDisabled && <p><em class=\"movewarning\">\r\n\t\t\t\tYou <strong>might</strong> have some moves disabled, so you won't be able to cancel an attack!\r\n\t\t\t</em></p>}\r\n\t\t\t{maybeLocked && <p><em class=\"movewarning\">\r\n\t\t\t\tYou <strong>might</strong> be locked into a move. {}\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/choose testfight\">Try Fight button</button> {}\r\n\t\t\t\t(prevents switching if you're locked)\r\n\t\t\t</em></p>}\r\n\t\t\t{this.renderMoveControls(moveRequest, choices)}\r\n\t\t\t<div class=\"megaevo-box\">\r\n\t\t\t\t{canDynamax && <label class={`megaevo${choices.current.max ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"max\" checked={choices.current.max} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\t{moveRequest.gigantamax ? 'Gigantamax' : 'Dynamax'}\r\n\t\t\t\t</label>}\r\n\t\t\t\t{canMegaEvo && <label class={`megaevo${choices.current.mega ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"mega\" checked={choices.current.mega} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\tMega Evolution\r\n\t\t\t\t</label>}\r\n\t\t\t\t{canMegaEvoX && <label class={`megaevo${choices.current.mega ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"megax\" checked={choices.current.megax} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\tMega Evolution X\r\n\t\t\t\t</label>}\r\n\t\t\t\t{canMegaEvoY && <label class={`megaevo${choices.current.mega ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"megay\" checked={choices.current.megay} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\tMega Evolution Y\r\n\t\t\t\t</label>}\r\n\t\t\t\t{canUltraBurst && <label class={`megaevo${choices.current.ultra ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"ultra\" checked={choices.current.ultra} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\tUltra Burst\r\n\t\t\t\t</label>}\r\n\t\t\t\t{canZMove && <label class={`megaevo${choices.current.z ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"z\" checked={choices.current.z} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\tZ-Power\r\n\t\t\t\t</label>}\r\n\t\t\t\t{canTerastallize && <label class={`megaevo${choices.current.tera ? ' cur' : ''}`}>\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"tera\" checked={choices.current.tera} onChange={this.toggleBoostedMove} /> {}\r\n\t\t\t\t\tTerastallize<br /><span dangerouslySetInnerHTML={{ __html: Dex.getTypeIcon(canTerastallize) }} />\r\n\t\t\t\t</label>}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n\trenderMoveControls(active: BattleRequestActivePokemon, choices: BattleChoiceBuilder) {\r\n\t\tconst battle = this.props.room.battle;\r\n\t\tconst dex = battle.dex;\r\n\t\tconst pokemonIndex = choices.index();\r\n\t\tconst activeIndex = battle.mySide.n > 1 ? pokemonIndex + battle.pokemonControlled : pokemonIndex;\r\n\t\tconst serverPokemon = choices.request.side!.pokemon[pokemonIndex];\r\n\t\tconst valueTracker = new ModifiableValue(battle, battle.nearSide.active[activeIndex]!, serverPokemon);\r\n\t\tconst tooltips = (battle.scene as BattleScene).tooltips;\r\n\r\n\t\tif (choices.current.max || (active.maxMoves && !active.canDynamax)) {\r\n\t\t\tif (!active.maxMoves) {\r\n\t\t\t\treturn <div class=\"message-error\">Maxed with no max moves</div>;\r\n\t\t\t}\r\n\t\t\tconst gmax = active.gigantamax && dex.moves.get(active.gigantamax);\r\n\t\t\treturn active.moves.map((moveData, i) => {\r\n\t\t\t\tconst move = dex.moves.get(moveData.name);\r\n\t\t\t\tconst moveType = tooltips.getMoveType(move, valueTracker, gmax || true)[0];\r\n\t\t\t\tlet maxMoveData: { name: string, id: ID } = active.maxMoves![i];\r\n\t\t\t\tif (maxMoveData.name !== 'Max Guard') {\r\n\t\t\t\t\tmaxMoveData = tooltips.getMaxMoveFromType(moveType, gmax);\r\n\t\t\t\t}\r\n\t\t\t\tconst gmaxTooltip = maxMoveData.id.startsWith('gmax') ? `|${maxMoveData.id}` : ``;\r\n\t\t\t\tconst tooltip = `maxmove|${moveData.name}|${pokemonIndex}${gmaxTooltip}`;\r\n\t\t\t\treturn this.renderMoveButton({\r\n\t\t\t\t\tname: maxMoveData.name,\r\n\t\t\t\t\tcmd: `/move ${i + 1} max`,\r\n\t\t\t\t\ttype: moveType,\r\n\t\t\t\t\ttooltip,\r\n\t\t\t\t\tmoveData,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (choices.current.z) {\r\n\t\t\tif (!active.zMoves) {\r\n\t\t\t\treturn <div class=\"message-error\">No Z moves</div>;\r\n\t\t\t}\r\n\t\t\treturn active.moves.map((moveData, i) => {\r\n\t\t\t\tconst zMoveData = active.zMoves![i];\r\n\t\t\t\tif (!zMoveData) {\r\n\t\t\t\t\treturn this.renderMoveButton(null);\r\n\t\t\t\t}\r\n\t\t\t\tconst specialMove = dex.moves.get(zMoveData.name);\r\n\t\t\t\tconst move = specialMove.exists ? specialMove : dex.moves.get(moveData.name);\r\n\t\t\t\tconst moveType = tooltips.getMoveType(move, valueTracker)[0];\r\n\t\t\t\tconst tooltip = `zmove|${moveData.name}|${pokemonIndex}`;\r\n\t\t\t\treturn this.renderMoveButton({\r\n\t\t\t\t\tname: zMoveData.name,\r\n\t\t\t\t\tcmd: `/move ${i + 1} zmove`,\r\n\t\t\t\t\ttype: moveType,\r\n\t\t\t\t\ttooltip,\r\n\t\t\t\t\tmoveData: { pp: 1, maxpp: 1 },\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst special = choices.moveSpecial(choices.current);\r\n\t\treturn active.moves.map((moveData, i) => {\r\n\t\t\tconst move = dex.moves.get(moveData.name);\r\n\t\t\tconst moveType = tooltips.getMoveType(move, valueTracker)[0];\r\n\t\t\tconst tooltip = `move|${moveData.name}|${pokemonIndex}`;\r\n\t\t\treturn this.renderMoveButton({\r\n\t\t\t\tname: move.name,\r\n\t\t\t\tcmd: `/move ${i + 1}${special}`,\r\n\t\t\t\ttype: moveType,\r\n\t\t\t\ttooltip,\r\n\t\t\t\tmoveData,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\trenderMoveTargetControls(request: BattleMoveRequest, choices: BattleChoiceBuilder) {\r\n\t\tconst battle = this.props.room.battle;\r\n\t\tlet moveTarget = choices.currentMove()?.target;\r\n\t\tif ((moveTarget === 'adjacentAlly' || moveTarget === 'adjacentFoe') && battle.gameType === 'freeforall') {\r\n\t\t\tmoveTarget = 'normal';\r\n\t\t}\r\n\t\tconst moveChoice = choices.stringChoice(choices.current);\r\n\r\n\t\tconst userSlot = choices.index() + Math.floor(battle.mySide.n / 2) * battle.pokemonControlled;\r\n\t\tconst userSlotCross = battle.farSide.active.length - 1 - userSlot;\r\n\r\n\t\treturn [\r\n\t\t\tbattle.farSide.active.map((pokemon, i) => {\r\n\t\t\t\tlet disabled = false;\r\n\t\t\t\tif (moveTarget === 'adjacentAlly' || moveTarget === 'adjacentAllyOrSelf') {\r\n\t\t\t\t\tdisabled = true;\r\n\t\t\t\t} else if (moveTarget === 'normal' || moveTarget === 'adjacentFoe') {\r\n\t\t\t\t\tif (Math.abs(userSlotCross - i) > 1) disabled = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (pokemon?.fainted) pokemon = null;\r\n\t\t\t\treturn this.renderPokemonButton({\r\n\t\t\t\t\tpokemon,\r\n\t\t\t\t\tcmd: disabled ? `` : `/${moveChoice} +${i + 1}`,\r\n\t\t\t\t\tdisabled: disabled && 'fade',\r\n\t\t\t\t\ttooltip: `activepokemon|1|${i}`,\r\n\t\t\t\t});\r\n\t\t\t}).reverse(),\r\n\t\t\t<div style=\"clear: left\"></div>,\r\n\t\t\tbattle.nearSide.active.map((pokemon, i) => {\r\n\t\t\t\tlet disabled = false;\r\n\t\t\t\tif (moveTarget === 'adjacentFoe') {\r\n\t\t\t\t\tdisabled = true;\r\n\t\t\t\t} else if (moveTarget === 'normal' || moveTarget === 'adjacentAlly' || moveTarget === 'adjacentAllyOrSelf') {\r\n\t\t\t\t\tif (Math.abs(userSlot - i) > 1) disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (moveTarget !== 'adjacentAllyOrSelf' && userSlot === i) disabled = true;\r\n\r\n\t\t\t\tif (pokemon?.fainted) pokemon = null;\r\n\t\t\t\treturn this.renderPokemonButton({\r\n\t\t\t\t\tpokemon,\r\n\t\t\t\t\tcmd: disabled ? `` : `/${moveChoice} -${i + 1}`,\r\n\t\t\t\t\tdisabled: disabled && 'fade',\r\n\t\t\t\t\ttooltip: `activepokemon|0|${i}`,\r\n\t\t\t\t});\r\n\t\t\t}),\r\n\t\t];\r\n\t}\r\n\trenderSwitchMenu(\r\n\t\trequest: BattleMoveRequest | BattleSwitchRequest, choices: BattleChoiceBuilder, ignoreTrapping?: boolean\r\n\t) {\r\n\t\tconst numActive = choices.requestLength();\r\n\t\tconst maybeTrapped = !ignoreTrapping && choices.currentMoveRequest()?.maybeTrapped;\r\n\t\tconst trapped = !ignoreTrapping && !maybeTrapped && choices.currentMoveRequest()?.trapped;\r\n\r\n\t\treturn <div class=\"switchmenu\">\r\n\t\t\t{maybeTrapped && <em class=\"movewarning\">\r\n\t\t\t\tYou <strong>might</strong> be trapped, so you won't be able to cancel a switch!<br />\r\n\t\t\t</em>}\r\n\t\t\t{trapped && <em class=\"movewarning\">\r\n\t\t\t\tYou're <strong>trapped</strong> and cannot switch!<br />\r\n\t\t\t</em>}\r\n\t\t\t{request.side.pokemon.map((serverPokemon, i) => {\r\n\t\t\t\tconst cantSwitch = trapped || i < numActive || choices.alreadySwitchingIn.includes(i + 1) || serverPokemon.fainted;\r\n\t\t\t\treturn this.renderPokemonButton({\r\n\t\t\t\t\tpokemon: serverPokemon,\r\n\t\t\t\t\tcmd: `/switch ${i + 1}`,\r\n\t\t\t\t\tdisabled: cantSwitch,\r\n\t\t\t\t\ttooltip: `switchpokemon|${i}`,\r\n\t\t\t\t});\r\n\t\t\t})}\r\n\t\t</div>;\r\n\t}\r\n\trenderTeamPreviewChooser(request: | BattleTeamRequest, choices: BattleChoiceBuilder) {\r\n\t\treturn request.side.pokemon.map((serverPokemon, i) => {\r\n\t\t\tconst cantSwitch = choices.alreadySwitchingIn.includes(i + 1);\r\n\t\t\treturn this.renderPokemonButton({\r\n\t\t\t\tpokemon: serverPokemon,\r\n\t\t\t\tcmd: `/switch ${i + 1}`,\r\n\t\t\t\tdisabled: cantSwitch && 'fade',\r\n\t\t\t\ttooltip: `switchpokemon|${i}`,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\trenderTeamList() {\r\n\t\tconst team = this.team;\r\n\t\tif (!team) return;\r\n\t\treturn <div class=\"switchcontrols\">\r\n\t\t\t<h3 class=\"switchselect\">Team</h3>\r\n\t\t\t<div class=\"switchmenu\">\r\n\t\t\t\t{team.map((serverPokemon, i) => {\r\n\t\t\t\t\treturn this.renderPokemonButton({\r\n\t\t\t\t\t\tpokemon: serverPokemon,\r\n\t\t\t\t\t\tcmd: \"\",\r\n\t\t\t\t\t\tdisabled: true,\r\n\t\t\t\t\t\ttooltip: `switchpokemon|${i}`,\r\n\t\t\t\t\t});\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n\trenderChosenTeam(request: BattleTeamRequest, choices: BattleChoiceBuilder) {\r\n\t\treturn choices.alreadySwitchingIn.map(slot => {\r\n\t\t\tconst serverPokemon = request.side.pokemon[slot - 1];\r\n\t\t\treturn this.renderPokemonButton({\r\n\t\t\t\tpokemon: serverPokemon,\r\n\t\t\t\tcmd: `/switch ${slot}`,\r\n\t\t\t\tdisabled: true,\r\n\t\t\t\ttooltip: `switchpokemon|${slot - 1}`,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\trenderOldChoices(request: BattleRequest, choices: BattleChoiceBuilder) {\r\n\t\tif (!choices) return null; // should not happen\r\n\t\tif (request.requestType !== 'move' && request.requestType !== 'switch' && request.requestType !== 'team') return;\r\n\t\tif (choices.isEmpty()) return null;\r\n\r\n\t\tlet buf: preact.ComponentChild[] = [\r\n\t\t\t<button data-cmd=\"/cancel\" class=\"button\"><i class=\"fa fa-chevron-left\" aria-hidden></i> Back</button>, ' ',\r\n\t\t];\r\n\t\tif (choices.isDone() && choices.noCancel) {\r\n\t\t\tbuf = ['Waiting for opponent...', <br />];\r\n\t\t} else if (choices.isDone() && choices.choices.length <= 1) {\r\n\t\t\tbuf = [];\r\n\t\t}\r\n\r\n\t\tconst battle = this.props.room.battle;\r\n\t\tfor (let i = 0; i < choices.choices.length; i++) {\r\n\t\t\tconst choiceString = choices.choices[i];\r\n\t\t\tif (choiceString === \"testfight\") {\r\n\t\t\t\tbuf.push(`${request.side.pokemon[i].name} is locked into a move.`);\r\n\t\t\t\treturn buf;\r\n\t\t\t}\r\n\t\t\tlet choice;\r\n\t\t\ttry {\r\n\t\t\t\tchoice = choices.parseChoice(choiceString, i);\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tbuf.push(<span class=\"message-error\">{err.message}</span>);\r\n\t\t\t}\r\n\t\t\tif (!choice) continue;\r\n\t\t\tconst pokemon = request.side.pokemon[i];\r\n\t\t\tconst active = request.requestType === 'move' ? request.active[i] : null;\r\n\t\t\tif (choice.choiceType === 'move') {\r\n\t\t\t\tbuf.push(`${pokemon.name} will `);\r\n\t\t\t\tif (choice.mega) buf.push(<strong>Mega</strong>, ` Evolve and `);\r\n\t\t\t\tif (choice.megax) buf.push(<strong>Mega</strong>, ` Evolve (X) and `);\r\n\t\t\t\tif (choice.megay) buf.push(<strong>Mega</strong>, ` Evolve (Y) and `);\r\n\t\t\t\tif (choice.ultra) buf.push(<strong>Ultra</strong>, ` Burst and `);\r\n\t\t\t\tif (choice.tera) buf.push(`Terastallize (`, <strong>{active?.canTerastallize || '???'}</strong>, `) and `);\r\n\t\t\t\tif (choice.max && active?.canDynamax) buf.push(active?.gigantamax ? `Gigantamax and ` : `Dynamax and `);\r\n\t\t\t\tbuf.push(`use `, <strong>{choices.currentMove(choice, i)?.name}</strong>);\r\n\t\t\t\tif (choice.targetLoc > 0) {\r\n\t\t\t\t\tconst target = battle.farSide.active[choice.targetLoc - 1];\r\n\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\tbuf.push(` at slot ${choice.targetLoc}`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuf.push(` at ${target.name}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (choice.targetLoc < 0) {\r\n\t\t\t\t\tconst target = battle.nearSide.active[-choice.targetLoc - 1];\r\n\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\tbuf.push(` at ally slot ${choice.targetLoc}`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuf.push(` at ally ${target.name}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (choice.choiceType === 'switch') {\r\n\t\t\t\tconst target = request.side.pokemon[choice.targetPokemon - 1];\r\n\t\t\t\tbuf.push(`${pokemon.name} will switch to `, <strong>{target.name}</strong>);\r\n\t\t\t} else if (choice.choiceType === 'shift') {\r\n\t\t\t\tbuf.push(`${pokemon.name} will `, <strong>shift</strong>, ` to the center`);\r\n\t\t\t} else if (choice.choiceType === 'team') {\r\n\t\t\t\tconst target = request.side.pokemon[choice.targetPokemon - 1];\r\n\t\t\t\tbuf.push(`You picked `, <strong>{target.name}</strong>);\r\n\t\t\t}\r\n\t\t\tbuf.push(<br />);\r\n\t\t}\r\n\t\treturn buf;\r\n\t}\r\n\trenderPlayerWaitingControls() {\r\n\t\treturn <div class=\"controls\">\r\n\t\t\t<div class=\"whatdo\">\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/ffto end\">Skip animation <i class=\"fa fa-fast-forward\" aria-hidden></i></button>\r\n\t\t\t</div>\r\n\t\t\t{this.renderTeamList()}\r\n\t\t</div>;\r\n\t}\r\n\trenderPlayerControls(request: BattleRequest) {\r\n\t\tconst room = this.props.room;\r\n\t\tconst atEnd = room.battle.atQueueEnd;\r\n\t\tif (!atEnd) return this.renderPlayerWaitingControls();\r\n\r\n\t\tlet choices = room.choices;\r\n\t\tif (!choices) return 'Error: Missing BattleChoiceBuilder';\r\n\t\tif (choices.request !== request) {\r\n\t\t\tchoices = new BattleChoiceBuilder(request);\r\n\t\t\troom.choices = choices;\r\n\t\t}\r\n\r\n\t\tif (choices.isDone()) {\r\n\t\t\treturn <div class=\"controls\">\r\n\t\t\t\t<div class=\"whatdo\">\r\n\t\t\t\t\t{this.renderOldChoices(request, choices)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"pad\">\r\n\t\t\t\t\t{choices.noCancel ? null : <button data-cmd=\"/cancel\" class=\"button\">Cancel</button>}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.renderTeamList()}\r\n\t\t\t</div>;\r\n\t\t}\r\n\t\tif (request.side) {\r\n\t\t\troom.battle.myPokemon = request.side.pokemon;\r\n\t\t\tthis.team = request.side.pokemon;\r\n\t\t}\r\n\t\tswitch (request.requestType) {\r\n\t\tcase 'move': {\r\n\t\t\tconst index = choices.index();\r\n\t\t\tconst pokemon = request.side.pokemon[index];\r\n\r\n\t\t\tif (choices.current.move) {\r\n\t\t\t\tconst moveName = choices.currentMove()?.name;\r\n\t\t\t\treturn <div class=\"controls\">\r\n\t\t\t\t\t<div class=\"whatdo\">\r\n\t\t\t\t\t\t{this.renderOldChoices(request, choices)}\r\n\t\t\t\t\t\t{pokemon.name} should use <strong>{moveName}</strong> at where? {}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"switchcontrols\">\r\n\t\t\t\t\t\t<div class=\"switchmenu\">\r\n\t\t\t\t\t\t\t{this.renderMoveTargetControls(request, choices)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>;\r\n\t\t\t}\r\n\r\n\t\t\tconst canShift = room.battle.gameType === 'triples' && index !== 1;\r\n\r\n\t\t\treturn <div class=\"controls\">\r\n\t\t\t\t<div class=\"whatdo\">\r\n\t\t\t\t\t{this.renderOldChoices(request, choices)}\r\n\t\t\t\t\tWhat will <strong>{pokemon.name}</strong> do?\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"movecontrols\">\r\n\t\t\t\t\t<h3 class=\"moveselect\">Attack</h3>\r\n\t\t\t\t\t{this.renderMoveMenu(choices)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"switchcontrols\">\r\n\t\t\t\t\t{canShift && [\r\n\t\t\t\t\t\t<h3 class=\"shiftselect\">Shift</h3>,\r\n\t\t\t\t\t\t<button data-cmd=\"/shift\">Move to center</button>,\r\n\t\t\t\t\t]}\r\n\t\t\t\t\t<h3 class=\"switchselect\">Switch</h3>\r\n\t\t\t\t\t{this.renderSwitchMenu(request, choices)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>;\r\n\t\t} case 'switch': {\r\n\t\t\tconst pokemon = request.side.pokemon[choices.index()];\r\n\t\t\treturn <div class=\"controls\">\r\n\t\t\t\t<div class=\"whatdo\">\r\n\t\t\t\t\t{this.renderOldChoices(request, choices)}\r\n\t\t\t\t\tWhat will <strong>{pokemon.name}</strong> do?\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"switchcontrols\">\r\n\t\t\t\t\t<h3 class=\"switchselect\">Switch</h3>\r\n\t\t\t\t\t{this.renderSwitchMenu(request, choices, true)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>;\r\n\t\t} case 'team': {\r\n\t\t\treturn <div class=\"controls\">\r\n\t\t\t\t<div class=\"whatdo\">\r\n\t\t\t\t\t{choices.alreadySwitchingIn.length > 0 ? (\r\n\t\t\t\t\t\t[<button data-cmd=\"/cancel\" class=\"button\"><i class=\"fa fa-chevron-left\" aria-hidden></i> Back</button>,\r\n\t\t\t\t\t\t\t\" What about the rest of your team? \"]\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"How will you start the battle? \"\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"switchcontrols\">\r\n\t\t\t\t\t<h3 class=\"switchselect\">\r\n\t\t\t\t\t\tChoose {choices.alreadySwitchingIn.length <= 0 ? `lead` : `slot ${choices.alreadySwitchingIn.length + 1}`}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div class=\"switchmenu\">\r\n\t\t\t\t\t\t{this.renderTeamPreviewChooser(request, choices)}\r\n\t\t\t\t\t\t<div style=\"clear:left\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"switchcontrols\">\r\n\t\t\t\t\t{choices.alreadySwitchingIn.length > 0 && <h3 class=\"switchselect\">Team so far</h3>}\r\n\t\t\t\t\t<div class=\"switchmenu\">\r\n\t\t\t\t\t\t{this.renderChosenTeam(request, choices)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>;\r\n\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderAfterBattleControls() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst isNotTiny = room.width > 700;\r\n\t\treturn <div class=\"controls\">\r\n\t\t\t<p>\r\n\t\t\t\t<span style=\"float: right\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tonClick={this.handleDownloadReplay}\r\n\t\t\t\t\t\thref={`//${Config.routes.replays}/download`}\r\n\t\t\t\t\t\tclass=\"button replayDownloadButton\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i class=\"fa fa-download\" aria-hidden></i> Download replay</a>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button class=\"button\" data-cmd=\"/savereplay\">\r\n\t\t\t\t\t\t<i class=\"fa fa-upload\" aria-hidden></i> Upload and share replay\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/play\" style=\"min-width:4.5em\">\r\n\t\t\t\t\t<i class=\"fa fa-undo\" aria-hidden></i><br />Replay\r\n\t\t\t\t</button> {}\r\n\t\t\t\t{isNotTiny && <button class=\"button button-first\" data-cmd=\"/ffto 0\" style=\"margin-right:2px\">\r\n\t\t\t\t\t<i class=\"fa fa-undo\" aria-hidden></i><br />First turn\r\n\t\t\t\t</button>}\r\n\t\t\t\t{isNotTiny && <button class=\"button button-first\" data-cmd=\"/ffto -1\">\r\n\t\t\t\t\t<i class=\"fa fa-step-backward\" aria-hidden></i><br />Prev turn\r\n\t\t\t\t</button>}\r\n\t\t\t</p>\r\n\t\t\t{room.side ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<button class=\"button\" data-cmd=\"/close\">\r\n\t\t\t\t\t\t<strong>Main menu</strong><br /><small>(closes this battle)</small>\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t<button class=\"button\" data-cmd={`/closeand /challenge ${room.battle.farSide.id},${room.battle.tier}`}>\r\n\t\t\t\t\t\t<strong>Rematch</strong><br /><small>(closes this battle)</small>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t) : (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<button class=\"button\" data-cmd=\"/switchsides\"><i class=\"fa fa-random\" aria-hidden></i> Switch viewpoint</button>\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t</div>;\r\n\t}\r\n\r\n\thandleDownloadReplay = (e: MouseEvent) => {\r\n\t\tlet room = this.props.room;\r\n\t\tconst target = e.currentTarget as HTMLAnchorElement;\r\n\t\t// download replay\r\n\t\tlet filename = (room.battle.tier || 'Battle').replace(/[^A-Za-z0-9]/g, '');\r\n\t\tlet date = new Date();\r\n\t\tfilename += `-${date.getFullYear()}`;\r\n\t\tfilename += `-${date.getMonth() >= 9 ? '' : '0'}${date.getMonth() + 1}`;\r\n\t\tfilename += `-${date.getDate() >= 10 ? '' : '0'}${date.getDate()}`;\r\n\t\tfilename += '-' + toID(room.battle.p1.name);\r\n\t\tfilename += '-' + toID(room.battle.p2.name);\r\n\t\ttarget.href = window.BattleLog.createReplayFileHref(room);\r\n\t\ttarget.download = filename + '.html';\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tthis.updateLayout();\r\n\t\tconst id = `room-${room.id}`;\r\n\t\tconst hardcoreStyle = room.battle?.hardcoreMode ? <style\r\n\t\t\tdangerouslySetInnerHTML={{ __html: `#${id} .battle .turn, #${id} .battle-history { display: none !important; }` }}\r\n\t\t></style> : null;\r\n\r\n\t\tif (room.width < 700) {\r\n\t\t\treturn <PSPanelWrapper room={room} focusClick scrollable=\"hidden\">\r\n\t\t\t\t{hardcoreStyle}\r\n\t\t\t\t<BattleDiv room={room} />\r\n\t\t\t\t<ChatLog\r\n\t\t\t\t\tclass=\"battle-log hasuserlist\" room={room} top={this.battleHeight} noSubscription\r\n\t\t\t\t>\r\n\t\t\t\t\t<div class=\"battle-controls\" role=\"complementary\" aria-label=\"Battle Controls\">\r\n\t\t\t\t\t\t{this.renderControls()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ChatLog>\r\n\t\t\t\t<ChatTextEntry room={room} onMessage={this.send} onKey={this.onKey} left={0} />\r\n\t\t\t\t<ChatUserList room={room} top={this.battleHeight} minimized />\r\n\t\t\t\t<button\r\n\t\t\t\t\tdata-href=\"battleoptions\" class=\"button\"\r\n\t\t\t\t\tstyle={{ position: 'absolute', right: '75px', top: this.battleHeight }}\r\n\t\t\t\t>\r\n\t\t\t\t\tBattle options\r\n\t\t\t\t</button>\r\n\t\t\t\t{(room.battle && !room.battle.ended && room.request && room.battle.mySide.id === PS.user.userid) &&\r\n\t\t\t\t\t<TimerButton room={room} />}\r\n\t\t\t\t<div class=\"battle-controls-container\"></div>\r\n\t\t\t</PSPanelWrapper>;\r\n\t\t}\r\n\r\n\t\treturn <PSPanelWrapper room={room} focusClick scrollable=\"hidden\">\r\n\t\t\t{hardcoreStyle}\r\n\t\t\t<BattleDiv room={room} />\r\n\t\t\t<ChatLog\r\n\t\t\t\tclass=\"battle-log hasuserlist\" room={room} left={640} noSubscription\r\n\t\t\t>\r\n\t\t\t\t{}\r\n\t\t\t</ChatLog>\r\n\t\t\t<ChatTextEntry room={room} onMessage={this.send} onKey={this.onKey} left={640} />\r\n\t\t\t<ChatUserList room={room} left={640} minimized />\r\n\t\t\t<button\r\n\t\t\t\tdata-href=\"battleoptions\" class=\"button\"\r\n\t\t\t\tstyle={{ position: 'absolute', right: '15px' }}\r\n\t\t\t>\r\n\t\t\t\tBattle options\r\n\t\t\t</button>\r\n\t\t\t<div class=\"battle-controls-container\">\r\n\t\t\t\t<div class=\"battle-controls\" role=\"complementary\" aria-label=\"Battle Controls\" style=\"top: 370px;\">\r\n\t\t\t\t\t{(room.battle && !room.battle.ended && room.request && room.battle.mySide.id === PS.user.userid) &&\r\n\t\t\t\t\t\t<TimerButton room={room} />}\r\n\t\t\t\t\t{this.renderControls()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nPS.addRoomType(BattlePanel, BattlesPanel);\r\n"],
  "mappings": "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",
  "names": ["preact"]
}
