{
  "version": 3,
  "sources": ["../../../client/src/battle-dex.ts"],
  "sourcesContent": ["/**\r\n * Pokemon Showdown Dex\r\n *\r\n * Roughly equivalent to sim/dex.js in a Pokemon Showdown server, but\r\n * designed for use in browsers rather than in Node.\r\n *\r\n * This is a generic utility library for Pokemon Showdown code: any\r\n * code shared between the replay viewer and the client usually ends up\r\n * here.\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Compiled into battledata.js which includes all dependencies\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport { Pokemon, type ServerPokemon } from \"./battle\";\r\nimport {\r\n\tBattleAvatarNumbers, BattleBaseSpeciesChart, BattlePokemonIconIndexes, BattlePokemonIconIndexesLeft,\r\n\tAbility, Item, Move, Species, PureEffect, type ID, type Type,\r\n} from \"./battle-dex-data\";\r\nimport type * as DexData from \"./battle-dex-data\";\r\nimport type { Teams } from \"./battle-teams\";\r\nimport { Config } from \"./client-main\";\r\n\r\nexport declare namespace Dex {\r\n\t/* eslint-disable @typescript-eslint/no-shadow */\r\n\texport type Ability = DexData.Ability;\r\n\texport type Item = DexData.Item;\r\n\texport type Move = DexData.Move;\r\n\texport type Species = DexData.Species;\r\n\texport type Type = DexData.Type;\r\n\texport type Nature = DexData.Nature;\r\n\texport type PureEffect = DexData.PureEffect;\r\n\texport type Effect = DexData.Effect;\r\n\texport type ID = DexData.ID;\r\n\t/* eslint-enable @typescript-eslint/no-shadow */\r\n\texport type StatName = DexData.StatName;\r\n\texport type StatNameExceptHP = DexData.StatNameExceptHP;\r\n\texport type BoostStatName = DexData.BoostStatName;\r\n\texport type TypeName = DexData.TypeName;\r\n\texport type StatusName = DexData.StatusName;\r\n\texport type GenderName = DexData.GenderName;\r\n\texport type NatureName = DexData.NatureName;\r\n\texport type MoveTarget = DexData.MoveTarget;\r\n\texport type REGULAR = 0;\r\n\texport type WEAK = 1;\r\n\texport type RESIST = 2;\r\n\texport type IMMUNE = 3;\r\n\texport type WeaknessType = REGULAR | WEAK | RESIST | IMMUNE;\r\n\texport type StatsTable = { hp: number, atk: number, def: number, spa: number, spd: number, spe: number };\r\n\texport type PokemonSet = Teams.PokemonSet;\r\n}\r\nexport type { ID };\r\n\r\ndeclare const require: any;\r\ndeclare const global: any;\r\ndeclare const process: any;\r\n\r\nif (typeof window === 'undefined') {\r\n\t// Node\r\n\tglobal.window = global;\r\n} else {\r\n\t// browser (possibly NW.js!)\r\n\twindow.exports = window;\r\n}\r\n\r\nwindow.nodewebkit = !!(typeof process !== 'undefined' && process.versions?.['node-webkit']);\r\n\r\nexport function toID(text: any) {\r\n\tif (text?.id) {\r\n\t\ttext = text.id;\r\n\t} else if (text?.userid) {\r\n\t\ttext = text.userid;\r\n\t}\r\n\tif (typeof text !== 'string' && typeof text !== 'number') return '' as ID;\r\n\treturn `${text}`.toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\r\n}\r\n\r\nexport function toUserid(text: any) {\r\n\treturn toID(text);\r\n}\r\n\r\ntype Comparable = number | string | boolean | Comparable[] | { reverse: Comparable };\r\nexport const PSUtils = new class {\r\n\t/**\r\n\t * Like string.split(delimiter), but only recognizes the first `limit`\r\n\t * delimiters (default 1).\r\n\t *\r\n\t * `\"1 2 3 4\".split(\" \", 2) => [\"1\", \"2\"]`\r\n\t *\r\n\t * `splitFirst(\"1 2 3 4\", \" \", 1) => [\"1\", \"2 3 4\"]`\r\n\t *\r\n\t * Returns an array of length exactly limit + 1.\r\n\t */\r\n\tsplitFirst(str: string, delimiter: string, limit = 1) {\r\n\t\tlet splitStr: string[] = [];\r\n\t\twhile (splitStr.length < limit) {\r\n\t\t\tlet delimiterIndex = str.indexOf(delimiter);\r\n\t\t\tif (delimiterIndex >= 0) {\r\n\t\t\t\tsplitStr.push(str.slice(0, delimiterIndex));\r\n\t\t\t\tstr = str.slice(delimiterIndex + delimiter.length);\r\n\t\t\t} else {\r\n\t\t\t\tsplitStr.push(str);\r\n\t\t\t\tstr = '';\r\n\t\t\t}\r\n\t\t}\r\n\t\tsplitStr.push(str);\r\n\t\treturn splitStr;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares two variables; intended to be used as a smarter comparator.\r\n\t * The two variables must be the same type (TypeScript will not check this).\r\n\t *\r\n\t * - Numbers are sorted low-to-high, use `-val` to reverse\r\n\t * - Strings are sorted A to Z case-semi-insensitively, use `{reverse: val}` to reverse\r\n\t * - Booleans are sorted true-first (REVERSE of casting to numbers), use `!val` to reverse\r\n\t * - Arrays are sorted lexically in the order of their elements\r\n\t *\r\n\t * In other words: `[num, str]` will be sorted A to Z, `[num, {reverse: str}]` will be sorted Z to A.\r\n\t */\r\n\tcompare(a: Comparable, b: Comparable): number {\r\n\t\tif (typeof a === 'number') {\r\n\t\t\treturn a - (b as number);\r\n\t\t}\r\n\t\tif (typeof a === 'string') {\r\n\t\t\treturn a.localeCompare(b as string);\r\n\t\t}\r\n\t\tif (typeof a === 'boolean') {\r\n\t\t\treturn (a ? 1 : 2) - (b ? 1 : 2);\r\n\t\t}\r\n\t\tif (Array.isArray(a)) {\r\n\t\t\tfor (let i = 0; i < a.length; i++) {\r\n\t\t\t\tconst comparison = PSUtils.compare(a[i], (b as Comparable[])[i]);\r\n\t\t\t\tif (comparison) return comparison;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (a.reverse) {\r\n\t\t\treturn PSUtils.compare((b as { reverse: string }).reverse, a.reverse);\r\n\t\t}\r\n\t\tthrow new Error(`Passed value ${a as any} is not comparable`);\r\n\t}\r\n\t/**\r\n\t * Sorts an array according to the callback's output on its elements.\r\n\t *\r\n\t * The callback's output is compared according to `PSUtils.compare` (in\r\n\t * particular, it supports arrays so you can sort by multiple things).\r\n\t */\r\n\tsortBy<T>(array: T[], callback: (a: T) => Comparable): T[];\r\n\t/**\r\n\t * Sorts an array according to `PSUtils.compare`. (Correctly sorts numbers,\r\n\t * unlike `array.sort`)\r\n\t */\r\n\tsortBy<T extends Comparable>(array: T[]): T[];\r\n\tsortBy<T>(array: T[], callback?: (a: T) => Comparable) {\r\n\t\tif (!callback) return (array as any[]).sort(PSUtils.compare);\r\n\t\treturn array.sort((a, b) => PSUtils.compare(callback(a), callback(b)));\r\n\t}\r\n};\r\n\r\n/**\r\n * Sanitize a room ID by removing anything that isn't alphanumeric or `-`.\r\n * Shouldn't actually do anything except against malicious input.\r\n */\r\nexport function toRoomid(roomid: string) {\r\n\treturn roomid.replace(/[^a-zA-Z0-9-]+/g, '').toLowerCase();\r\n}\r\n\r\nexport function toName(name: any) {\r\n\tif (typeof name !== 'string' && typeof name !== 'number') return '';\r\n\tname = `${name}`.replace(/[|\\s[\\],\\u202e]+/g, ' ').trim();\r\n\tif (name.length > 18) name = name.substr(0, 18).trim();\r\n\r\n\t// remove zalgo\r\n\tname = name.replace(\r\n\t\t/[\\u0300-\\u036f\\u0483-\\u0489\\u0610-\\u0615\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06ED\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E]{3,}/g,\r\n\t\t''\r\n\t);\r\n\tname = name.replace(/[\\u239b-\\u23b9]/g, '');\r\n\r\n\treturn name;\r\n}\r\n\r\nexport interface SpriteData {\r\n\tw: number;\r\n\th: number;\r\n\ty?: number;\r\n\tgen?: number;\r\n\turl?: string;\r\n\trawHTML?: string;\r\n\tpixelated?: boolean;\r\n\tisFrontSprite?: boolean;\r\n\tcryurl?: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\nexport interface TeambuilderSpriteData {\r\n\tx: number;\r\n\ty: number;\r\n\th?: number;\r\n\tspriteDir: string;\r\n\tspriteid: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\nexport const Dex = new class implements ModdedDex {\r\n\treadonly Ability = Ability;\r\n\treadonly Item = Item;\r\n\treadonly Move = Move;\r\n\treadonly Species = Species;\r\n\r\n\treadonly gen = 9;\r\n\treadonly modid = 'gen9' as ID;\r\n\treadonly cache = null!;\r\n\r\n\treadonly REGULAR = 0;\r\n\treadonly WEAK = 1;\r\n\treadonly RESIST = 2;\r\n\treadonly IMMUNE = 3;\r\n\r\n\treadonly statNames: readonly Dex.StatName[] = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\r\n\treadonly statNamesExceptHP: readonly Dex.StatNameExceptHP[] = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\r\n\tpokeballs: string[] | null = null;\r\n\r\n\tresourcePrefix = (() => {\r\n\t\tlet prefix = '';\r\n\t\tif (window.document?.location?.protocol !== 'http:') prefix = 'https:';\r\n\t\treturn `${prefix}//${window.Config ? Config.routes.client : 'play.pokemonshowdown.com'}/`;\r\n\t})();\r\n\r\n\tfxPrefix = (() => {\r\n\t\tconst protocol = (window.document?.location?.protocol !== 'http:') ? 'https:' : '';\r\n\t\treturn `${protocol}//${window.Config ? Config.routes.client : 'play.pokemonshowdown.com'}/fx/`;\r\n\t})();\r\n\r\n\tloadedSpriteData = { xy: 1, bw: 0 };\r\n\tmoddedDexes: { [mod: string]: ModdedDex } = {};\r\n\r\n\t/**\r\n\t * April Fools' Day setting:\r\n\t * * `true` = FULL, all jokes on\r\n\t * * `'sprites'` = SPRITES, only sprites and taunts\r\n\t * * `false | null | undefined` = OFF\r\n\t */\r\n\tafdMode?: boolean | 'sprites';\r\n\r\n\tmod(modid: ID): ModdedDex {\r\n\t\tif (modid === 'gen9') return this;\r\n\t\tif (!window.BattleTeambuilderTable) return this;\r\n\t\tif (modid in this.moddedDexes) {\r\n\t\t\treturn this.moddedDexes[modid];\r\n\t\t}\r\n\t\tthis.moddedDexes[modid] = new ModdedDex(modid);\r\n\t\treturn this.moddedDexes[modid];\r\n\t}\r\n\tforGen(gen: number) {\r\n\t\tif (!gen) return this;\r\n\t\treturn this.mod(`gen${gen}` as ID);\r\n\t}\r\n\tformatGen(format: string) {\r\n\t\tconst formatid = toID(format);\r\n\t\tif (!formatid) return Dex.gen;\r\n\t\tif (!formatid.startsWith('gen')) return 6;\r\n\t\treturn parseInt(formatid.charAt(3)) || Dex.gen;\r\n\t}\r\n\tforFormat(format: string) {\r\n\t\tlet dex = Dex.forGen(Dex.formatGen(format));\r\n\r\n\t\tconst formatid = toID(format).slice(4);\r\n\t\tif (dex.gen === 7 && formatid.includes('letsgo')) {\r\n\t\t\tdex = Dex.mod('gen7letsgo' as ID);\r\n\t\t}\r\n\t\tif (dex.gen === 8 && formatid.includes('bdsp')) {\r\n\t\t\tdex = Dex.mod('gen8bdsp' as ID);\r\n\t\t}\r\n\t\treturn dex;\r\n\t}\r\n\r\n\tresolveAvatar(avatar: string): string {\r\n\t\tif (window.BattleAvatarNumbers && avatar in BattleAvatarNumbers) {\r\n\t\t\tavatar = BattleAvatarNumbers[avatar];\r\n\t\t}\r\n\t\tif (avatar.startsWith('#')) {\r\n\t\t\treturn Dex.resourcePrefix + 'sprites/trainers-custom/' + toID(avatar.substr(1)) + '.png';\r\n\t\t}\r\n\t\tif (avatar.includes('.') && window.Config?.server?.registered) {\r\n\t\t\t// custom avatar served by the server\r\n\t\t\tconst protocol = (Config.server.port === 443) ? 'https' : 'http';\r\n\t\t\tconst server = `${protocol}://${Config.server.host}:${Config.server.port}`;\r\n\t\t\treturn `${server}/avatars/${encodeURIComponent(avatar).replace(/%3F/g, '?')}`;\r\n\t\t}\r\n\t\treturn Dex.resourcePrefix + 'sprites/trainers/' + Dex.sanitizeName(avatar || 'unknown') + '.png';\r\n\t}\r\n\r\n\t/**\r\n\t * This is used to sanitize strings from data files like `moves.js` and\r\n\t * `teambuilder-tables.js`.\r\n\t *\r\n\t * This makes sure untrusted strings can't wreak havoc if someone forgets to\r\n\t * escape it before putting it in HTML.\r\n\t *\r\n\t * None of these characters belong in these files, anyway. (They can be used\r\n\t * in move descriptions, but those are served from `text.js`, which are\r\n\t * definitely always treated as unsanitized.)\r\n\t */\r\n\tsanitizeName(name: any) {\r\n\t\tif (!name) return '';\r\n\t\treturn ('' + name)\r\n\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')\r\n\t\t\t.slice(0, 50);\r\n\t}\r\n\r\n\tprefs(prop: string) {\r\n\t\t// @ts-expect-error this is what I get for calling it Storage...\r\n\t\treturn window.Storage?.prefs ? window.Storage.prefs(prop) : window.PS?.prefs?.[prop];\r\n\t}\r\n\r\n\tgetShortName(name: string) {\r\n\t\tlet shortName = name.replace(/[^A-Za-z0-9]+$/, '');\r\n\t\tif (shortName.includes('(')) {\r\n\t\t\tshortName += name.slice(shortName.length).replace(/[^()]+/g, '').replace(/\\(\\)/g, '');\r\n\t\t}\r\n\t\treturn shortName;\r\n\t}\r\n\r\n\tgetEffect(name: string | null | undefined): PureEffect | Item | Ability | Move {\r\n\t\tname = (name || '').trim();\r\n\t\tif (name.substr(0, 5) === 'item:') {\r\n\t\t\treturn Dex.items.get(name.substr(5).trim());\r\n\t\t} else if (name.substr(0, 8) === 'ability:') {\r\n\t\t\treturn Dex.abilities.get(name.substr(8).trim());\r\n\t\t} else if (name.substr(0, 5) === 'move:') {\r\n\t\t\treturn Dex.moves.get(name.substr(5).trim());\r\n\t\t}\r\n\t\tlet id = toID(name);\r\n\t\treturn new PureEffect(id, name);\r\n\t}\r\n\r\n\tmoves = {\r\n\t\tget: (nameOrMove: string | Move | null | undefined): Move => {\r\n\t\t\tif (nameOrMove && typeof nameOrMove !== 'string') {\r\n\t\t\t\t// TODO: don't accept Moves here\r\n\t\t\t\treturn nameOrMove;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrMove || '';\r\n\t\t\tlet id = toID(nameOrMove);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleMovedex) window.BattleMovedex = {};\r\n\t\t\tlet data = window.BattleMovedex[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\r\n\t\t\tif (!data && id.substr(0, 11) === 'hiddenpower' && id.length > 11) {\r\n\t\t\t\tlet [, hpWithType, hpPower] = /([a-z]*)([0-9]*)/.exec(id)!;\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex[hpWithType] || {}),\r\n\t\t\t\t\tbasePower: Number(hpPower) || 60,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (!data && id.substr(0, 6) === 'return' && id.length > 6) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex['return'] || {}),\r\n\t\t\t\t\tbasePower: Number(id.slice(6)),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (!data && id.substr(0, 11) === 'frustration' && id.length > 11) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex['frustration'] || {}),\r\n\t\t\t\t\tbasePower: Number(id.slice(11)),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!data) data = { exists: false };\r\n\t\t\tlet move = new Move(id, name, data);\r\n\t\t\twindow.BattleMovedex[id] = move;\r\n\t\t\treturn move;\r\n\t\t},\r\n\t};\r\n\r\n\tgetGen3Category(type: string) {\r\n\t\treturn [\r\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon',\r\n\t\t].includes(type) ? 'Special' : 'Physical';\r\n\t}\r\n\r\n\titems = {\r\n\t\tget: (nameOrItem: string | Item | null | undefined): Item => {\r\n\t\t\tif (nameOrItem && typeof nameOrItem !== 'string') {\r\n\t\t\t\t// TODO: don't accept Items here\r\n\t\t\t\treturn nameOrItem;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrItem || '';\r\n\t\t\tlet id = toID(nameOrItem);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\t\tlet data = window.BattleItems[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\t\tif (!data) data = { exists: false };\r\n\t\t\tlet item = new Item(id, name, data);\r\n\t\t\twindow.BattleItems[id] = item;\r\n\t\t\treturn item;\r\n\t\t},\r\n\t};\r\n\r\n\tabilities = {\r\n\t\tget: (nameOrAbility: string | Ability | null | undefined): Ability => {\r\n\t\t\tif (nameOrAbility && typeof nameOrAbility !== 'string') {\r\n\t\t\t\t// TODO: don't accept Abilities here\r\n\t\t\t\treturn nameOrAbility;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrAbility || '';\r\n\t\t\tlet id = toID(nameOrAbility);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleAbilities) window.BattleAbilities = {};\r\n\t\t\tlet data = window.BattleAbilities[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\t\tif (!data) data = { exists: false };\r\n\t\t\tlet ability = new Ability(id, name, data);\r\n\t\t\twindow.BattleAbilities[id] = ability;\r\n\t\t\treturn ability;\r\n\t\t},\r\n\t};\r\n\r\n\tspecies = {\r\n\t\tget: (nameOrSpecies: string | Species | null | undefined): Species => {\r\n\t\t\tif (nameOrSpecies && typeof nameOrSpecies !== 'string') {\r\n\t\t\t\t// TODO: don't accept Species' here\r\n\t\t\t\treturn nameOrSpecies;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrSpecies || '';\r\n\t\t\tlet id = toID(nameOrSpecies);\r\n\t\t\tlet formid = id;\r\n\t\t\tif (!window.BattlePokedexAltForms) window.BattlePokedexAltForms = {};\r\n\t\t\tif (formid in window.BattlePokedexAltForms) return window.BattlePokedexAltForms[formid];\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t} else if (window.BattlePokedex && !(id in BattlePokedex) && window.BattleBaseSpeciesChart) {\r\n\t\t\t\tfor (const baseSpeciesId of BattleBaseSpeciesChart) {\r\n\t\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\r\n\t\t\t\t\t\tid = baseSpeciesId;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.BattlePokedex) window.BattlePokedex = {};\r\n\t\t\tlet data = window.BattlePokedex[id];\r\n\r\n\t\t\tlet species: Species;\r\n\t\t\tif (data && typeof data.exists === 'boolean') {\r\n\t\t\t\tspecies = data;\r\n\t\t\t} else {\r\n\t\t\t\tif (!data) data = { exists: false };\r\n\t\t\t\tif (!data.tier && id.endsWith('totem')) {\r\n\t\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\r\n\t\t\t\t}\r\n\t\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\r\n\t\t\t\t}\r\n\t\t\t\tdata.nfe = data.id === 'dipplin' || !!(data as Species).evos?.some(evo => {\r\n\t\t\t\t\tconst evoSpecies = this.species.get(evo);\r\n\t\t\t\t\treturn !evoSpecies.isNonstandard || evoSpecies.isNonstandard === data.isNonstandard ||\r\n\t\t\t\t\t\t// Pokemon with Hisui evolutions\r\n\t\t\t\t\t\tevoSpecies.isNonstandard === \"Unobtainable\";\r\n\t\t\t\t});\r\n\t\t\t\tspecies = new Species(id, name, data);\r\n\t\t\t\twindow.BattlePokedex[id] = species;\r\n\t\t\t}\r\n\r\n\t\t\tif (species.cosmeticFormes) {\r\n\t\t\t\tfor (const forme of species.cosmeticFormes) {\r\n\t\t\t\t\tif (toID(forme) === formid) {\r\n\t\t\t\t\t\tspecies = new Species(formid, name, {\r\n\t\t\t\t\t\t\t...species,\r\n\t\t\t\t\t\t\tname: forme,\r\n\t\t\t\t\t\t\tforme: forme.slice(species.name.length + 1),\r\n\t\t\t\t\t\t\tbaseForme: \"\",\r\n\t\t\t\t\t\t\tbaseSpecies: species.name,\r\n\t\t\t\t\t\t\totherFormes: null,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\twindow.BattlePokedexAltForms[formid] = species;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn species;\r\n\t\t},\r\n\t};\r\n\r\n\ttypes = {\r\n\t\tallCache: null as Type[] | null,\r\n\t\tnamesCache: null as Dex.TypeName[] | null,\r\n\t\tget: (type: any): Type => {\r\n\t\t\tif (!type || typeof type === 'string') {\r\n\t\t\t\tconst id = toID(type) as string;\r\n\t\t\t\tconst name = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\t\t\t\ttype = window.BattleTypeChart?.[id] || {};\r\n\t\t\t\tif (type.damageTaken) type.exists = true;\r\n\t\t\t\tif (!type.id) type.id = id;\r\n\t\t\t\tif (!type.name) type.name = name;\r\n\t\t\t\tif (!type.effectType) {\r\n\t\t\t\t\ttype.effectType = 'Type';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn type;\r\n\t\t},\r\n\t\tall: (): readonly Type[] => {\r\n\t\t\tif (this.types.allCache) return this.types.allCache;\r\n\t\t\tconst types = [];\r\n\t\t\tfor (const id in (window.BattleTypeChart || {})) {\r\n\t\t\t\ttypes.push(Dex.types.get(id));\r\n\t\t\t}\r\n\t\t\tif (types.length) this.types.allCache = types;\r\n\t\t\treturn types;\r\n\t\t},\r\n\t\tnames: (): readonly Dex.TypeName[] => {\r\n\t\t\tif (this.types.namesCache) return this.types.namesCache;\r\n\t\t\tconst names = this.types.all().map(type => type.name as Dex.TypeName);\r\n\t\t\tnames.splice(names.indexOf('Stellar'), 1);\r\n\t\t\tif (names.length) this.types.namesCache = names;\r\n\t\t\treturn names;\r\n\t\t},\r\n\t\tisName: (name: string | null): boolean => {\r\n\t\t\tconst id = toID(name);\r\n\t\t\tif (name !== id.substr(0, 1).toUpperCase() + id.substr(1)) return false;\r\n\t\t\treturn window.BattleTypeChart?.hasOwnProperty(id);\r\n\t\t},\r\n\t};\r\n\r\n\thasAbility(species: Species, ability: string) {\r\n\t\tfor (const i in species.abilities) {\r\n\t\t\tif (ability === species.abilities[i as '0']) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tloadSpriteData(gen: 'xy' | 'bw') {\r\n\t\tif (this.loadedSpriteData[gen]) return;\r\n\t\tthis.loadedSpriteData[gen] = 1;\r\n\r\n\t\tlet path = $('script[src*=\"pokedex-mini.js\"]').attr('src') || '';\r\n\t\tlet qs = '?' + (path.split('?')[1] || '');\r\n\t\tpath = ((/.+?(?=data\\/pokedex-mini\\.js)/.exec(path)) || [])[0] || '';\r\n\r\n\t\tlet el = document.createElement('script');\r\n\t\tel.src = path + 'data/pokedex-mini-bw.js' + qs;\r\n\t\tdocument.getElementsByTagName('body')[0].appendChild(el);\r\n\t}\r\n\tgetSpriteData(pokemon: Pokemon | Species | string, isFront: boolean, options: {\r\n\t\tgen?: number,\r\n\t\tshiny?: boolean,\r\n\t\tgender?: Dex.GenderName,\r\n\t\tafd?: boolean,\r\n\t\tnoScale?: boolean,\r\n\t\tmod?: string,\r\n\t\tdynamax?: boolean,\r\n\t} = { gen: 6 }) {\r\n\t\tconst mechanicsGen = options.gen || 6;\r\n\t\tlet isDynamax = !!options.dynamax;\r\n\t\tif (pokemon instanceof Pokemon) {\r\n\t\t\tif (pokemon.volatiles.transform) {\r\n\t\t\t\toptions.shiny = pokemon.volatiles.transform[2];\r\n\t\t\t\toptions.gender = pokemon.volatiles.transform[3];\r\n\t\t\t} else {\r\n\t\t\t\toptions.shiny = pokemon.shiny;\r\n\t\t\t\toptions.gender = pokemon.gender;\r\n\t\t\t}\r\n\t\t\tlet isGigantamax = false;\r\n\t\t\tif (pokemon.volatiles.dynamax) {\r\n\t\t\t\tif (pokemon.volatiles.dynamax[1]) {\r\n\t\t\t\t\tisGigantamax = true;\r\n\t\t\t\t} else if (options.dynamax !== false) {\r\n\t\t\t\t\tisDynamax = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon = pokemon.getSpeciesForme() + (isGigantamax ? '-Gmax' : '');\r\n\t\t}\r\n\t\tconst species = Dex.species.get(pokemon);\r\n\t\t// Gmax sprites are already extremely large, so we don't need to double.\r\n\t\tif (species.name.endsWith('-Gmax')) isDynamax = false;\r\n\t\tlet spriteData = {\r\n\t\t\tgen: mechanicsGen,\r\n\t\t\tw: 96,\r\n\t\t\th: 96,\r\n\t\t\ty: 0,\r\n\t\t\turl: Dex.resourcePrefix + 'sprites/',\r\n\t\t\tpixelated: true,\r\n\t\t\tisFrontSprite: false,\r\n\t\t\tcryurl: '',\r\n\t\t\tshiny: options.shiny,\r\n\t\t};\r\n\t\tlet name = species.spriteid;\r\n\t\tlet dir;\r\n\t\tlet facing;\r\n\t\tif (isFront) {\r\n\t\t\tspriteData.isFrontSprite = true;\r\n\t\t\tdir = '';\r\n\t\t\tfacing = 'front';\r\n\t\t} else {\r\n\t\t\tdir = '-back';\r\n\t\t\tfacing = 'back';\r\n\t\t}\r\n\r\n\t\t// Decide which gen sprites to use.\r\n\t\t//\r\n\t\t// There are several different generations we care about here:\r\n\t\t//\r\n\t\t//   - mechanicsGen: the generation number of the mechanics and battle (options.gen)\r\n\t\t//   - graphicsGen: the generation number of sprite/field graphics the user has requested.\r\n\t\t//     This will default to mechanicsGen, but may be altered depending on user preferences.\r\n\t\t//   - spriteData.gen: the generation number of a the specific Pokemon sprite in question.\r\n\t\t//     This defaults to graphicsGen, but if the graphicsGen doesn't have a sprite for the Pokemon\r\n\t\t//     (eg. Darmanitan in graphicsGen 2) then we go up gens until it exists.\r\n\t\t//\r\n\t\tlet graphicsGen = mechanicsGen;\r\n\t\tif (Dex.prefs('nopastgens')) graphicsGen = 6;\r\n\t\tif (Dex.prefs('bwgfx') && graphicsGen >= 6) graphicsGen = 5;\r\n\t\tspriteData.gen = Math.max(graphicsGen, Math.min(species.gen, 5));\r\n\t\tconst baseDir = ['', 'gen1', 'gen2', 'gen3', 'gen4', 'gen5', '', '', '', ''][spriteData.gen];\r\n\r\n\t\tlet animationData = null;\r\n\t\tlet miscData = null;\r\n\t\tlet speciesid = species.id;\r\n\t\tif (species.isTotem) speciesid = toID(name);\r\n\t\tif (baseDir === '' && window.BattlePokemonSprites) {\r\n\t\t\tanimationData = BattlePokemonSprites[speciesid];\r\n\t\t}\r\n\t\tif (baseDir === 'gen5' && window.BattlePokemonSpritesBW) {\r\n\t\t\tanimationData = BattlePokemonSpritesBW[speciesid];\r\n\t\t}\r\n\t\tif (window.BattlePokemonSprites) miscData = BattlePokemonSprites[speciesid];\r\n\t\tif (!miscData && window.BattlePokemonSpritesBW) miscData = BattlePokemonSpritesBW[speciesid];\r\n\t\tif (!animationData) animationData = {};\r\n\t\tif (!miscData) miscData = {};\r\n\r\n\t\tif (miscData.num !== 0 && miscData.num > -5000) {\r\n\t\t\tlet baseSpeciesid = toID(species.baseSpecies);\r\n\t\t\tspriteData.cryurl = 'audio/cries/' + baseSpeciesid;\r\n\t\t\tlet formeid = species.formeid;\r\n\t\t\tif (species.isMega || formeid && (\r\n\t\t\t\tformeid === '-crowned' ||\r\n\t\t\t\tformeid === '-eternal' ||\r\n\t\t\t\tformeid === '-eternamax' ||\r\n\t\t\t\tformeid === '-four' ||\r\n\t\t\t\tformeid === '-hangry' ||\r\n\t\t\t\tformeid === '-hero' ||\r\n\t\t\t\tformeid === '-lowkey' ||\r\n\t\t\t\tformeid === '-noice' ||\r\n\t\t\t\tformeid === '-primal' ||\r\n\t\t\t\tformeid === '-rapidstrike' ||\r\n\t\t\t\tformeid === '-roaming' ||\r\n\t\t\t\tformeid === '-school' ||\r\n\t\t\t\tformeid === '-sky' ||\r\n\t\t\t\tformeid === '-starter' ||\r\n\t\t\t\tformeid === '-super' ||\r\n\t\t\t\tformeid === '-therian' ||\r\n\t\t\t\tformeid === '-unbound' ||\r\n\t\t\t\tbaseSpeciesid === 'calyrex' ||\r\n\t\t\t\tbaseSpeciesid === 'kyurem' ||\r\n\t\t\t\tbaseSpeciesid === 'cramorant' ||\r\n\t\t\t\tbaseSpeciesid === 'indeedee' ||\r\n\t\t\t\tbaseSpeciesid === 'lycanroc' ||\r\n\t\t\t\tbaseSpeciesid === 'necrozma' ||\r\n\t\t\t\tbaseSpeciesid === 'oinkologne' ||\r\n\t\t\t\tbaseSpeciesid === 'oricorio' ||\r\n\t\t\t\tbaseSpeciesid === 'slowpoke' ||\r\n\t\t\t\tbaseSpeciesid === 'tatsugiri' ||\r\n\t\t\t\tbaseSpeciesid === 'zygarde'\r\n\t\t\t)) {\r\n\t\t\t\tspriteData.cryurl += formeid;\r\n\t\t\t}\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (options.shiny && mechanicsGen > 1) dir += '-shiny';\r\n\r\n\t\t// April Fool's 2014\r\n\t\tif (Dex.afdMode || options.afd) {\r\n\t\t\t// Explicit false check above means AFD will be off if the user disables it - no matter what\r\n\t\t\tdir = 'afd' + dir;\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t\t// Duplicate code but needed to make AFD tinymax work\r\n\t\t\t// April Fool's 2020\r\n\t\t\tif (isDynamax && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.25;\r\n\t\t\t\tspriteData.h *= 0.25;\r\n\t\t\t\tspriteData.y += -22;\r\n\t\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.5;\r\n\t\t\t\tspriteData.h *= 0.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\r\n\t\t// Mod Cries\r\n\t\tif (options.mod) {\r\n\t\t\tspriteData.cryurl = `sprites/${options.mod}/audio/${toID(species.baseSpecies)}`;\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (animationData[facing + 'f'] && options.gender === 'F') facing += 'f';\r\n\t\tlet allowAnim = !Dex.prefs('noanim') && !Dex.prefs('nogif');\r\n\t\tif (allowAnim && spriteData.gen >= 6) spriteData.pixelated = false;\r\n\t\tif (allowAnim && animationData[facing] && spriteData.gen >= 5) {\r\n\t\t\tif (facing.endsWith('f')) name += '-f';\r\n\t\t\tdir = baseDir + 'ani' + dir;\r\n\r\n\t\t\tspriteData.w = animationData[facing].w;\r\n\t\t\tspriteData.h = animationData[facing].h;\r\n\t\t\tspriteData.url += dir + '/' + name + '.gif';\r\n\t\t} else {\r\n\t\t\t// There is no entry or enough data in pokedex-mini.js\r\n\t\t\t// Handle these in case-by-case basis; either using BW sprites or matching the played gen.\r\n\t\t\tdir = (baseDir || 'gen5') + dir;\r\n\r\n\t\t\t// Gender differences don't exist prior to Gen 4,\r\n\t\t\t// so there are no sprites for it\r\n\t\t\tif (spriteData.gen >= 4 && miscData['frontf'] && options.gender === 'F') {\r\n\t\t\t\tname += '-f';\r\n\t\t\t}\r\n\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t}\r\n\r\n\t\tif (!options.noScale) {\r\n\t\t\tif (graphicsGen > 4) {\r\n\t\t\t\t// no scaling\r\n\t\t\t} else if (spriteData.isFrontSprite) {\r\n\t\t\t\tspriteData.w *= 2;\r\n\t\t\t\tspriteData.h *= 2;\r\n\t\t\t\tspriteData.y += -16;\r\n\t\t\t} else {\r\n\t\t\t\t// old gen backsprites are multiplied by 1.5x by the 3D engine\r\n\t\t\t\tspriteData.w *= 2 / 1.5;\r\n\t\t\t\tspriteData.h *= 2 / 1.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\tif (spriteData.gen <= 2) spriteData.y += 2;\r\n\t\t}\r\n\t\tif (isDynamax && !options.noScale) {\r\n\t\t\tspriteData.w *= 2;\r\n\t\t\tspriteData.h *= 2;\r\n\t\t\tspriteData.y += -22;\r\n\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\tspriteData.w *= 1.5;\r\n\t\t\tspriteData.h *= 1.5;\r\n\t\t\tspriteData.y += -11;\r\n\t\t}\r\n\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetPokemonIconNum(id: ID, isFemale?: boolean, facingLeft?: boolean) {\r\n\t\tlet num = 0;\r\n\t\tif (window.BattlePokemonSprites?.[id]?.num) {\r\n\t\t\tnum = BattlePokemonSprites[id].num;\r\n\t\t} else if (window.BattlePokedex?.[id]?.num) {\r\n\t\t\tnum = BattlePokedex[id].num;\r\n\t\t}\r\n\t\tif (num < 0) num = 0;\r\n\t\tif (num > 1025) num = 0;\r\n\r\n\t\tif (window.BattlePokemonIconIndexes?.[id]) {\r\n\t\t\tnum = BattlePokemonIconIndexes[id];\r\n\t\t}\r\n\r\n\t\tif (isFemale) {\r\n\t\t\tif (['unfezant', 'frillish', 'jellicent', 'meowstic', 'pyroar'].includes(id)) {\r\n\t\t\t\tnum = BattlePokemonIconIndexes[id + 'f'];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (facingLeft) {\r\n\t\t\tif (BattlePokemonIconIndexesLeft[id]) {\r\n\t\t\t\tnum = BattlePokemonIconIndexesLeft[id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn num;\r\n\t}\r\n\r\n\tgetPokemonIcon(pokemon: string | Pokemon | ServerPokemon | Dex.PokemonSet | null, facingLeft?: boolean) {\r\n\t\tif (pokemon === 'pokeball') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -0px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-statused') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -40px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-fainted') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px;opacity:.4;filter:contrast(0)`;\r\n\t\t} else if (pokemon === 'pokeball-none') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px`;\r\n\t\t}\r\n\r\n\t\tlet id = toID(pokemon);\r\n\t\tif (!pokemon || typeof pokemon === 'string') pokemon = null;\r\n\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\tif (pokemon?.speciesForme) id = toID(pokemon.speciesForme);\r\n\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\tif (pokemon?.species) id = toID(pokemon.species);\r\n\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\tif (pokemon?.volatiles?.formechange && !pokemon.volatiles.transform) {\r\n\t\t\t// @ts-expect-error safe, but too lazy to cast\r\n\t\t\tid = toID(pokemon.volatiles.formechange[1]);\r\n\t\t}\r\n\t\tlet num = this.getPokemonIconNum(id, pokemon?.gender === 'F', facingLeft);\r\n\r\n\t\tlet top = Math.floor(num / 12) * 30;\r\n\t\tlet left = (num % 12) * 40;\r\n\t\tlet fainted = ((pokemon as Pokemon | ServerPokemon)?.fainted ?\r\n\t\t\t`;opacity:.3;filter:grayscale(100%) brightness(.5)` : ``);\r\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png?v18) no-repeat scroll -${left}px -${top}px${fainted}`;\r\n\t}\r\n\r\n\tgetTeambuilderSpriteData(pokemon: any, dex: ModdedDex = Dex): TeambuilderSpriteData {\r\n\t\tlet gen = dex.gen;\r\n\t\tlet id = toID(pokemon.species || pokemon);\r\n\t\tlet species = Dex.species.get(id);\r\n\t\tlet spriteid: string;\r\n\t\tif (typeof pokemon === 'string') {\r\n\t\t\tspriteid = species.spriteid || id;\r\n\t\t} else {\r\n\t\t\tspriteid = pokemon.spriteid;\r\n\t\t\tif (pokemon.species && !spriteid) {\r\n\t\t\t\tspriteid = species.spriteid || id;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (species.exists === false) return { spriteDir: 'sprites/gen5', spriteid: '0', x: 10, y: 5 };\r\n\t\tif (Dex.afdMode) {\r\n\t\t\treturn {\r\n\t\t\t\tspriteid,\r\n\t\t\t\tspriteDir: 'sprites/afd',\r\n\t\t\t\tshiny: !!pokemon.shiny,\r\n\t\t\t\tx: 10,\r\n\t\t\t\ty: 5,\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst spriteData: TeambuilderSpriteData = {\r\n\t\t\tspriteid,\r\n\t\t\tspriteDir: 'sprites/dex',\r\n\t\t\tx: -2,\r\n\t\t\ty: -3,\r\n\t\t};\r\n\t\tif (pokemon.shiny) spriteData.shiny = true;\r\n\t\tif (Dex.prefs('nopastgens')) gen = 9;\r\n\t\tif (Dex.prefs('bwgfx') && gen > 5) gen = 5;\r\n\t\tlet homeExists = (!species.isNonstandard || !['CAP', 'Custom'].includes(species.isNonstandard) ||\r\n\t\t\tspecies.id === \"xerneasneutral\") && ![\r\n\t\t\t\"floetteeternal\", \"pichuspikyeared\", \"pikachubelle\", \"pikachucosplay\", \"pikachulibre\", \"pikachuphd\", \"pikachupopstar\", \"pikachurockstar\",\r\n\t\t].includes(species.id);\r\n\t\tif ((gen >= 8 || dex.modid === 'gen7letsgo') && homeExists) {\r\n\t\t\tspriteData.spriteDir = 'sprites/home-centered';\r\n\t\t\tspriteData.x = 8;\r\n\t\t\tspriteData.y = 10;\r\n\t\t\tspriteData.h = 96;\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\t\tlet xydexExists = (!species.isNonstandard || species.isNonstandard === 'Past' || species.isNonstandard === 'CAP') || [\r\n\t\t\t\"pikachustarter\", \"eeveestarter\", \"meltan\", \"melmetal\", \"pokestarufo\", \"pokestarufo2\", \"pokestarbrycenman\", \"pokestarmt\", \"pokestarmt2\", \"pokestargiant\", \"pokestarhumanoid\", \"pokestarmonster\", \"pokestarf00\", \"pokestarf002\", \"pokestarspirit\",\r\n\t\t].includes(species.id);\r\n\t\tif (species.gen >= 8 && species.isNonstandard !== 'CAP') xydexExists = false;\r\n\t\tif (gen >= 6 && xydexExists) {\r\n\t\t\tif (species.gen >= 7) {\r\n\t\t\t\tspriteData.x = -6;\r\n\t\t\t\tspriteData.y = -7;\r\n\t\t\t} else if (id.substr(0, 6) === 'arceus') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 7;\r\n\t\t\t} else if (id === 'garchomp') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 2;\r\n\t\t\t} else if (id === 'garchompmega') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 0;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\t\tspriteData.spriteDir = 'sprites/gen5';\r\n\t\tif (gen <= 1 && species.gen <= 1) spriteData.spriteDir = 'sprites/gen1';\r\n\t\telse if (gen <= 2 && species.gen <= 2) spriteData.spriteDir = 'sprites/gen2';\r\n\t\telse if (gen <= 3 && species.gen <= 3) spriteData.spriteDir = 'sprites/gen3';\r\n\t\telse if (gen <= 4 && species.gen <= 4) spriteData.spriteDir = 'sprites/gen4';\r\n\t\tspriteData.x = 10;\r\n\t\tspriteData.y = 5;\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetTeambuilderSprite(pokemon: any, dex?: ModdedDex, xOffset = 0, yOffset = 0) {\r\n\t\tif (!pokemon) return '';\r\n\t\tconst data = this.getTeambuilderSpriteData(pokemon, dex);\r\n\t\tconst shiny = (data.shiny ? '-shiny' : '');\r\n\t\tconst resize = (data.h ? `background-size:${data.h}px` : '');\r\n\t\treturn `background-image:url(${Dex.resourcePrefix}${data.spriteDir}${shiny}/${data.spriteid}.png);background-position:${data.x + xOffset}px ${data.y + yOffset}px;background-repeat:no-repeat;${resize}`;\r\n\t}\r\n\r\n\tgetItemIcon(item: any) {\r\n\t\tlet num = 0;\r\n\t\tif (typeof item === 'string' && window.BattleItems) item = window.BattleItems[toID(item)];\r\n\t\tif (item?.spritenum) num = item.spritenum;\r\n\r\n\t\tlet top = Math.floor(num / 16) * 24;\r\n\t\tlet left = (num % 16) * 24;\r\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/itemicons-sheet.png?v1) no-repeat scroll -${left}px -${top}px`;\r\n\t}\r\n\r\n\tgetTypeIcon(type: string | null, b?: boolean) { // b is just for utilichart.js\r\n\t\ttype = this.types.get(type).name;\r\n\t\tif (!type) type = '???';\r\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\r\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/types/${sanitizedType}.png\" alt=\"${type}\" height=\"14\" width=\"32\" class=\"pixelated${b ? ' b' : ''}\" />`;\r\n\t}\r\n\r\n\tgetCategoryIcon(category: string | null) {\r\n\t\tconst categoryID = toID(category);\r\n\t\tlet sanitizedCategory = '';\r\n\t\tswitch (categoryID) {\r\n\t\tcase 'physical':\r\n\t\tcase 'special':\r\n\t\tcase 'status':\r\n\t\t\tsanitizedCategory = categoryID.charAt(0).toUpperCase() + categoryID.slice(1);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tsanitizedCategory = 'undefined';\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/categories/${sanitizedCategory}.png\" alt=\"${sanitizedCategory}\" height=\"14\" width=\"32\" class=\"pixelated\" />`;\r\n\t}\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\twindow.BattleItems ||= {};\r\n\t\tfor (const data of Object.values(BattleItems)) {\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n};\r\n\r\nexport class ModdedDex {\r\n\treadonly gen: number;\r\n\treadonly modid: ID;\r\n\treadonly cache = {\r\n\t\tMoves: {} as { [k: string]: Move },\r\n\t\tItems: {} as { [k: string]: Item },\r\n\t\tAbilities: {} as { [k: string]: Ability },\r\n\t\tSpecies: {} as { [k: string]: Species },\r\n\t\tTypes: {} as { [k: string]: Dex.Effect },\r\n\t};\r\n\tpokeballs: string[] | null = null;\r\n\tconstructor(modid: ID) {\r\n\t\tthis.modid = modid;\r\n\t\tconst gen = parseInt(modid.charAt(3), 10);\r\n\t\tif (!modid.startsWith('gen') || !gen) throw new Error(\"Unsupported modid\");\r\n\t\tthis.gen = gen;\r\n\t}\r\n\tmoves = {\r\n\t\tget: (name: string): Move => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Moves.hasOwnProperty(id)) return this.cache.Moves[id];\r\n\r\n\t\t\tlet data = { ...Dex.moves.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideMoveData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideMoveData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideMoveData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideMoveData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.gen <= 3 && data.category !== 'Status') {\r\n\t\t\t\tdata.category = Dex.getGen3Category(data.type);\r\n\t\t\t}\r\n\r\n\t\t\tconst move = new Move(id, name, data);\r\n\t\t\tthis.cache.Moves[id] = move;\r\n\t\t\treturn move;\r\n\t\t},\r\n\t};\r\n\r\n\titems = {\r\n\t\tget: (name: string): Item => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Items.hasOwnProperty(id)) return this.cache.Items[id];\r\n\r\n\t\t\tlet data = { ...Dex.items.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideItemData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideItemData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideItemData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideItemData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst item = new Item(id, name, data);\r\n\t\t\tthis.cache.Items[id] = item;\r\n\t\t\treturn item;\r\n\t\t},\r\n\t};\r\n\r\n\tabilities = {\r\n\t\tget: (name: string): Ability => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Abilities.hasOwnProperty(id)) return this.cache.Abilities[id];\r\n\r\n\t\t\tlet data = { ...Dex.abilities.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideAbilityData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideAbilityData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst ability = new Ability(id, name, data);\r\n\t\t\tthis.cache.Abilities[id] = ability;\r\n\t\t\treturn ability;\r\n\t\t},\r\n\t};\r\n\r\n\tspecies = {\r\n\t\tget: (name: string): Species => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Species.hasOwnProperty(id)) return this.cache.Species[id];\r\n\r\n\t\t\tlet data = { ...Dex.species.get(name) };\r\n\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideSpeciesData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideSpeciesData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (id in table.overrideSpeciesData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideSpeciesData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.gen < 3 || this.modid === 'gen7letsgo') {\r\n\t\t\t\tdata.abilities = { 0: \"No Ability\" };\r\n\t\t\t}\r\n\r\n\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\tif (id in table.overrideTier) data.tier = table.overrideTier[id];\r\n\t\t\tif (!data.tier && id.endsWith('totem')) {\r\n\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\r\n\t\t\t}\r\n\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\r\n\t\t\t}\r\n\t\t\tif (data.gen > this.gen) data.tier = 'Illegal';\r\n\t\t\tdata.nfe = data.id === 'dipplin' || !!data.evos?.some(evo => {\r\n\t\t\t\tconst evoSpecies = this.species.get(evo);\r\n\t\t\t\treturn !evoSpecies.isNonstandard || evoSpecies.isNonstandard === data.isNonstandard ||\r\n\t\t\t\t\t// Pokemon with Hisui evolutions\r\n\t\t\t\t\tevoSpecies.isNonstandard === \"Unobtainable\";\r\n\t\t\t});\r\n\r\n\t\t\tconst species = new Species(id, name, data);\r\n\t\t\tthis.cache.Species[id] = species;\r\n\t\t\treturn species;\r\n\t\t},\r\n\t};\r\n\r\n\ttypes = {\r\n\t\tnamesCache: null as readonly Dex.TypeName[] | null,\r\n\t\tnames: (): readonly Dex.TypeName[] => {\r\n\t\t\tif (this.types.namesCache) return this.types.namesCache;\r\n\t\t\tconst names = Dex.types.names();\r\n\t\t\tif (!names.length) return [];\r\n\t\t\tconst curNames = [...names];\r\n\t\t\t// if (this.gen < 9) curNames.splice(curNames.indexOf('Stellar'), 1);\r\n\t\t\tif (this.gen < 6) curNames.splice(curNames.indexOf('Fairy'), 1);\r\n\t\t\tif (this.gen < 2) curNames.splice(curNames.indexOf('Dark'), 1);\r\n\t\t\tif (this.gen < 2) curNames.splice(curNames.indexOf('Steel'), 1);\r\n\t\t\tthis.types.namesCache = curNames;\r\n\t\t\treturn curNames;\r\n\t\t},\r\n\t\tget: (name: string): Dex.Type => {\r\n\t\t\tconst id = toID(name);\r\n\t\t\tname = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\r\n\t\t\tif (this.cache.Types.hasOwnProperty(id)) return this.cache.Types[id];\r\n\r\n\t\t\tlet data = { ...Dex.types.get(name) };\r\n\r\n\t\t\tfor (let i = 7; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.removeType) {\r\n\t\t\t\t\tdata.exists = false;\r\n\t\t\t\t\t// don't bother correcting its attributes given it doesn't exist\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (id in table.overrideTypeChart) {\r\n\t\t\t\t\tdata = { ...data, ...table.overrideTypeChart[id] };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.cache.Types[id] = data;\r\n\t\t\treturn data;\r\n\t\t},\r\n\t};\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\twindow.BattleItems ||= {};\r\n\t\tfor (const data of Object.values(BattleItems)) {\r\n\t\t\tif (data.gen && data.gen > this.gen) continue;\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\tglobal.Dex = Dex;\r\n\tglobal.toID = toID;\r\n}\r\n"],
  "mappings": "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",
  "names": ["table"]
}
