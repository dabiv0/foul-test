{
  "version": 3,
  "sources": ["../../../client/src/battle-team-editor.tsx"],
  "sourcesContent": ["/**\r\n * Teambuilder team editor, extracted from the rest of the Preact\r\n * client so that it can be used in isolation.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport preact from \"../js/lib/preact\";\r\nimport { type Team } from \"./client-main\";\r\nimport { PSTeambuilder } from \"./panel-teamdropdown\";\r\nimport { Dex, type ModdedDex, toID, type ID, PSUtils } from \"./battle-dex\";\r\nimport { Teams } from './battle-teams';\r\nimport { DexSearch, type SearchRow, type SearchType } from \"./battle-dex-search\";\r\nimport { PSSearchResults } from \"./battle-searchresults\";\r\nimport { BattleNatures, BattleStatNames, type StatName } from \"./battle-dex-data\";\r\nimport { BattleStatGuesser, BattleStatOptimizer } from \"./battle-tooltips\";\r\nimport { PSModel } from \"./client-core\";\r\nimport { Net } from \"./client-connection\";\r\n\r\ntype SelectionType = 'pokemon' | 'ability' | 'item' | 'move' | 'stats' | 'details';\r\n\r\nclass TeamEditorState extends PSModel {\r\n\tteam: Team;\r\n\tsets: Dex.PokemonSet[] = [];\r\n\tgen = Dex.gen;\r\n\tdex: ModdedDex = Dex;\r\n\tdeletedSet: {\r\n\t\tset: Dex.PokemonSet,\r\n\t\tindex: number,\r\n\t} | null = null;\r\n\tsearch = new DexSearch();\r\n\tformat: ID = `gen${this.gen}` as ID;\r\n\tsearchIndex = 0;\r\n\toriginalSpecies: string | null = null;\r\n\tnarrow = false;\r\n\tselectionTypeOrder: readonly SelectionType[] = [\r\n\t\t'pokemon', 'ability', 'item', 'move', 'stats', 'details',\r\n\t];\r\n\tinnerFocus: {\r\n\t\tsetIndex: number,\r\n\t\ttype: SelectionType,\r\n\t\ttypeIndex?: number,\r\n\t} | null = null;\r\n\tisLetsGo = false;\r\n\tisNatDex = false;\r\n\tisBDSP = false;\r\n\tformeLegality: 'normal' | 'hackmons' | 'custom' = 'normal';\r\n\tabilityLegality: 'normal' | 'hackmons' = 'normal';\r\n\tdefaultLevel = 100;\r\n\treadonly = false;\r\n\tfetching = false;\r\n\tconstructor(team: Team) {\r\n\t\tsuper();\r\n\t\tthis.team = team;\r\n\t\tthis.sets = Teams.unpack(team.packedTeam);\r\n\t\tthis.setFormat(team.format);\r\n\t\twindow.search = this.search;\r\n\t}\r\n\tsetReadonly(readonly: boolean) {\r\n\t\tif (!readonly && this.readonly) this.sets = Teams.unpack(this.team.packedTeam);\r\n\t\tthis.readonly = readonly;\r\n\t}\r\n\tsetFormat(format: string) {\r\n\t\tconst team = this.team;\r\n\t\tconst formatid = toID(format);\r\n\t\tthis.format = formatid;\r\n\t\tteam.format = formatid;\r\n\t\tthis.dex = Dex.forFormat(formatid);\r\n\t\tthis.gen = this.dex.gen;\r\n\r\n\t\tformat = toID(format).slice(4);\r\n\t\tthis.isLetsGo = formatid.includes('letsgo');\r\n\t\tthis.isNatDex = formatid.includes('nationaldex') || formatid.includes('natdex');\r\n\t\tthis.isBDSP = formatid.includes('bdsp');\r\n\t\tif (formatid.includes('almostanyability') || formatid.includes('aaa')) {\r\n\t\t\tthis.abilityLegality = 'hackmons';\r\n\t\t} else {\r\n\t\t\tthis.abilityLegality = 'normal';\r\n\t\t}\r\n\t\tif (formatid.includes('hackmons') || formatid.includes('bh')) {\r\n\t\t\tthis.formeLegality = 'hackmons';\r\n\t\t\tthis.abilityLegality = 'hackmons';\r\n\t\t} else if (formatid.includes('metronome') || formatid.includes('customgame')) {\r\n\t\t\tthis.formeLegality = 'custom';\r\n\t\t\tthis.abilityLegality = 'hackmons';\r\n\t\t} else {\r\n\t\t\tthis.formeLegality = 'normal';\r\n\t\t}\r\n\r\n\t\tthis.defaultLevel = 100;\r\n\t\tif (\r\n\t\t\tformatid.includes('vgc') || formatid.includes('bss') || formatid.includes('ultrasinnohclassic') ||\r\n\t\t\tformatid.includes('battlespot') || formatid.includes('battlestadium') || formatid.includes('battlefestival')\r\n\t\t) {\r\n\t\t\tthis.defaultLevel = 50;\r\n\t\t}\r\n\t\tif (formatid.includes('lc')) {\r\n\t\t\tthis.defaultLevel = 5;\r\n\t\t}\r\n\t}\r\n\tsetSearchType(type: SearchType, i: number, value?: string) {\r\n\t\tconst set = this.sets[i];\r\n\t\tthis.search.setType(type, this.format, set);\r\n\t\tthis.originalSpecies = null;\r\n\t\tthis.search.prependResults = null;\r\n\t\tif (type === 'move') {\r\n\t\t\tthis.search.prependResults = this.getSearchMoves(set);\r\n\t\t\tif (value && this.search.prependResults.some(row => row[1].split('_')[2] === toID(value))) {\r\n\t\t\t\tvalue = '';\r\n\t\t\t}\r\n\t\t} else if (value) {\r\n\t\t\tswitch (type) {\r\n\t\t\tcase 'pokemon':\r\n\t\t\t\tif (this.dex.species.get(value).exists) {\r\n\t\t\t\t\tthis.originalSpecies = value;\r\n\t\t\t\t\tthis.search.prependResults = [['pokemon', toID(value)]];\r\n\t\t\t\t\tvalue = '';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'item':\r\n\t\t\t\tif (toID(value) === 'noitem') value = '';\r\n\t\t\t\tif (this.dex.items.get(value).exists) {\r\n\t\t\t\t\tthis.search.prependResults = [['item', toID(value)]];\r\n\t\t\t\t\tvalue = '';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ability':\r\n\t\t\t\tif (toID(value) === 'selectability') value = '';\r\n\t\t\t\tif (toID(value) === 'noability') value = '';\r\n\t\t\t\tif (this.dex.abilities.get(value).exists) {\r\n\t\t\t\t\tthis.search.prependResults = [['ability', toID(value)]];\r\n\t\t\t\t\tvalue = '';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type === 'item') (this.search.prependResults ||= []).push(['item', '' as ID]);\r\n\t\tthis.search.find(value || '');\r\n\t\tthis.searchIndex = this.search.results?.[0]?.[0] === 'header' ? 1 : 0;\r\n\t}\r\n\tupdateSearchMoves(set: Dex.PokemonSet) {\r\n\t\tlet oldResultsLength = this.search.prependResults?.length || 0;\r\n\t\tthis.search.prependResults = this.getSearchMoves(set);\r\n\t\tthis.searchIndex += this.search.prependResults.length - oldResultsLength;\r\n\t\tif (this.searchIndex < 0) this.searchIndex = 0;\r\n\t\tthis.search.results = null;\r\n\t\tif (this.search.query) {\r\n\t\t\tthis.setSearchValue('');\r\n\t\t} else {\r\n\t\t\tthis.search.find('');\r\n\t\t}\r\n\t}\r\n\tgetSearchMoves(set: Dex.PokemonSet) {\r\n\t\tconst out: SearchRow[] = [];\r\n\t\tfor (let i = 0; i < Math.max(set.moves.length, 4); i++) {\r\n\t\t\tout.push(['move', `_${i + 1}_${toID(set.moves[i] || '')}` as ID]);\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\tsetSearchValue(value: string) {\r\n\t\tthis.search.find(value);\r\n\t\tthis.searchIndex = this.search.results?.[0]?.[0] === 'header' ? 1 : 0;\r\n\t}\r\n\tselectSearchValue(): string | null {\r\n\t\tlet result = this.search.results?.[this.searchIndex];\r\n\t\tif (result?.[0] === 'header') {\r\n\t\t\tthis.searchIndex++;\r\n\t\t\tresult = this.search.results?.[this.searchIndex];\r\n\t\t}\r\n\t\tif (!result) return null;\r\n\t\tif (this.search.addFilter(result)) {\r\n\t\t\tthis.searchIndex = 0;\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.getResultValue(result);\r\n\t}\r\n\tchangeSpecies(set: Dex.PokemonSet, speciesName: string) {\r\n\t\tconst species = this.dex.species.get(speciesName);\r\n\t\tif (set.item === this.getDefaultItem(set.species)) set.item = undefined;\r\n\t\tif (set.name === set.species.split('-')[0]) delete set.name;\r\n\t\tset.species = species.name;\r\n\t\tset.ability = this.getDefaultAbility(set);\r\n\t\tset.item = this.getDefaultItem(species.name) ?? set.item;\r\n\r\n\t\tif (toID(speciesName) === 'Cathy') {\r\n\t\t\tset.name = \"Cathy\";\r\n\t\t\tset.species = 'Trevenant';\r\n\t\t\tset.level = undefined;\r\n\t\t\tset.gender = 'F';\r\n\t\t\tset.item = 'Starf Berry';\r\n\t\t\tset.ability = 'Harvest';\r\n\t\t\tset.moves = ['Substitute', 'Horn Leech', 'Earthquake', 'Phantom Force'];\r\n\t\t\tset.evs = { hp: 36, atk: 252, def: 0, spa: 0, spd: 0, spe: 220 };\r\n\t\t\tset.ivs = undefined;\r\n\t\t\tset.nature = 'Jolly';\r\n\t\t}\r\n\t}\r\n\tdeleteSet(index: number) {\r\n\t\tif (this.sets.length <= index) return;\r\n\t\tthis.deletedSet = {\r\n\t\t\tset: this.sets[index],\r\n\t\t\tindex,\r\n\t\t};\r\n\t\tthis.sets.splice(index, 1);\r\n\t}\r\n\tundeleteSet() {\r\n\t\tif (!this.deletedSet) return;\r\n\t\tthis.sets.splice(this.deletedSet.index, 0, this.deletedSet.set);\r\n\t\tthis.deletedSet = null;\r\n\t}\r\n\tignoreRows = ['header', 'sortpokemon', 'sortmove', 'html'];\r\n\tdownSearchValue() {\r\n\t\tif (!this.search.results || this.searchIndex >= this.search.results.length - 1) return;\r\n\r\n\t\tthis.searchIndex++;\r\n\t\tif (this.ignoreRows.includes(this.search.results[this.searchIndex]?.[0])) {\r\n\t\t\tif (this.searchIndex >= this.search.results.length - 1) return;\r\n\t\t\tthis.searchIndex++;\r\n\t\t}\r\n\t\tif (this.ignoreRows.includes(this.search.results[this.searchIndex]?.[0])) {\r\n\t\t\tif (this.searchIndex >= this.search.results.length - 1) return;\r\n\t\t\tthis.searchIndex++;\r\n\t\t}\r\n\t}\r\n\tupSearchValue() {\r\n\t\tif (!this.search.results || this.searchIndex <= 0) return;\r\n\r\n\t\tif (this.searchIndex <= 1 && this.ignoreRows.includes(this.search.results[0]?.[0])) return;\r\n\t\tthis.searchIndex--;\r\n\t\tif (this.ignoreRows.includes(this.search.results[this.searchIndex]?.[0])) {\r\n\t\t\tif (this.searchIndex <= 0) return;\r\n\t\t\tthis.searchIndex--;\r\n\t\t}\r\n\t\tif (this.ignoreRows.includes(this.search.results[this.searchIndex]?.[0])) {\r\n\t\t\tif (this.searchIndex <= 0) return;\r\n\t\t\tthis.searchIndex--;\r\n\t\t}\r\n\t}\r\n\tgetResultValue(result: SearchRow): string {\r\n\t\tswitch (result[0]) {\r\n\t\tcase 'pokemon':\r\n\t\t\treturn this.dex.species.get(result[1]).name;\r\n\t\tcase 'item':\r\n\t\t\treturn this.dex.items.get(result[1]).name;\r\n\t\tcase 'ability':\r\n\t\t\treturn this.dex.abilities.get(result[1]).name;\r\n\t\tcase 'move':\r\n\t\t\tif (result[1].startsWith('_')) {\r\n\t\t\t\tconst [slot, moveid] = result[1].slice(1).split('_');\r\n\t\t\t\treturn this.dex.moves.get(moveid).name + '|' + slot;\r\n\t\t\t}\r\n\t\t\treturn this.dex.moves.get(result[1]).name;\r\n\t\tdefault:\r\n\t\t\treturn result[1];\r\n\t\t}\r\n\t}\r\n\tcanAdd(): boolean {\r\n\t\treturn this.sets.length < 6 || this.team.isBox;\r\n\t}\r\n\tgetHPType(set: Dex.PokemonSet): Dex.TypeName {\r\n\t\tif (set.hpType) return set.hpType as Dex.TypeName;\r\n\t\tconst hpMove = set.ivs ? null : this.getHPMove(set);\r\n\t\tif (hpMove) return hpMove;\r\n\r\n\t\tconst hpTypes = [\r\n\t\t\t'Fighting', 'Flying', 'Poison', 'Ground', 'Rock', 'Bug', 'Ghost', 'Steel', 'Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Ice', 'Dragon', 'Dark',\r\n\t\t] as const;\r\n\t\tif (this.gen <= 2) {\r\n\t\t\tif (!set.ivs) return 'Dark';\r\n\t\t\t// const hpDV = Math.floor(set.ivs.hp / 2);\r\n\t\t\tconst atkDV = Math.floor(set.ivs.atk / 2);\r\n\t\t\tconst defDV = Math.floor(set.ivs.def / 2);\r\n\t\t\t// const speDV = Math.floor(set.ivs.spe / 2);\r\n\t\t\t// const spcDV = Math.floor(set.ivs.spa / 2);\r\n\t\t\t// const expectedHpDV = (atkDV % 2) * 8 + (defDV % 2) * 4 + (speDV % 2) * 2 + (spcDV % 2);\r\n\t\t\t// if (expectedHpDV !== hpDV) {\r\n\t\t\t// \tset.ivs.hp = expectedHpDV * 2;\r\n\t\t\t// \tif (set.ivs.hp === 30) set.ivs.hp = 31;\r\n\t\t\t// }\r\n\t\t\treturn hpTypes[4 * (atkDV % 4) + (defDV % 4)];\r\n\t\t} else {\r\n\t\t\tconst ivs = set.ivs || this.defaultIVs(set);\r\n\t\t\tlet hpTypeX = 0;\r\n\t\t\tlet i = 1;\r\n\t\t\t// n.b. this is not our usual order (Spe and SpD are flipped)\r\n\t\t\tconst statOrder = ['hp', 'atk', 'def', 'spe', 'spa', 'spd'] as const;\r\n\t\t\tfor (const s of statOrder) {\r\n\t\t\t\tif (ivs[s] === undefined) ivs[s] = 31;\r\n\t\t\t\thpTypeX += i * (ivs[s] % 2);\r\n\t\t\t\ti *= 2;\r\n\t\t\t}\r\n\t\t\treturn hpTypes[Math.floor(hpTypeX * 15 / 63)];\r\n\t\t}\r\n\t};\r\n\thpTypeMatters(set: Dex.PokemonSet): boolean {\r\n\t\tif (this.gen < 2) return false;\r\n\t\tif (this.gen > 7) return false;\r\n\t\tfor (const move of set.moves) {\r\n\t\t\tconst moveid = toID(move);\r\n\t\t\tif (moveid.startsWith('hiddenpower')) return true;\r\n\t\t\tif (moveid === 'transform') return true;\r\n\t\t}\r\n\t\tif (toID(set.ability) === 'imposter') return true;\r\n\t\treturn false;\r\n\t}\r\n\tgetHPMove(set: Dex.PokemonSet): Dex.TypeName | null {\r\n\t\tif (set.moves) {\r\n\t\t\tfor (const move of set.moves) {\r\n\t\t\t\tconst moveid = toID(move);\r\n\t\t\t\tif (moveid.startsWith('hiddenpower')) {\r\n\t\t\t\t\treturn moveid.charAt(11).toUpperCase() + moveid.slice(12) as Dex.TypeName;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetIVs(set: Dex.PokemonSet) {\r\n\t\tconst ivs = this.defaultIVs(set);\r\n\t\tif (set.ivs) Object.assign(ivs, set.ivs);\r\n\t\treturn ivs;\r\n\t}\r\n\tdefaultIVs(set: Dex.PokemonSet, noGuess = !!set.ivs): Record<Dex.StatName, number> {\r\n\t\tconst useIVs = this.gen > 2;\r\n\t\tconst defaultIVs = { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\r\n\t\tif (!useIVs) {\r\n\t\t\tfor (const stat of Dex.statNames) defaultIVs[stat] = 15;\r\n\t\t}\r\n\t\tif (noGuess) return defaultIVs;\r\n\r\n\t\tconst hpType = this.getHPMove(set);\r\n\t\tconst hpModulo = (useIVs ? 2 : 4);\r\n\t\tconst { minAtk, minSpe } = this.prefersMinStats(set);\r\n\t\tif (minAtk) defaultIVs['atk'] = 0;\r\n\t\tif (minSpe) defaultIVs['spe'] = 0;\r\n\r\n\t\tif (!useIVs) {\r\n\t\t\tconst hpDVs = hpType ? this.dex.types.get(hpType).HPdvs : null;\r\n\t\t\tif (hpDVs) {\r\n\t\t\t\tfor (const stat in hpDVs) defaultIVs[stat as Dex.StatName] = hpDVs[stat as Dex.StatName]!;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst hpIVs = hpType ? this.dex.types.get(hpType).HPivs : null;\r\n\t\t\tif (hpIVs) {\r\n\t\t\t\tif (this.canHyperTrain(set)) {\r\n\t\t\t\t\tif (minSpe) defaultIVs['spe'] = hpIVs['spe'] ?? 31;\r\n\t\t\t\t\tif (minAtk) defaultIVs['atk'] = hpIVs['atk'] ?? 31;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (const stat in hpIVs) defaultIVs[stat as Dex.StatName] = hpIVs[stat as Dex.StatName]!;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hpType) {\r\n\t\t\tif (minSpe) defaultIVs['spe'] %= hpModulo;\r\n\t\t\tif (minAtk) defaultIVs['atk'] %= hpModulo;\r\n\t\t}\r\n\t\tif (minAtk && useIVs) {\r\n\t\t\t// min Atk\r\n\t\t\tif (['Gouging Fire', 'Iron Boulder', 'Iron Crown', 'Raging Bolt'].includes(set.species)) {\r\n\t\t\t\t// only available with 20 Atk IVs\r\n\t\t\t\tdefaultIVs['atk'] = 20;\r\n\t\t\t} else if (set.species.startsWith('Terapagos')) {\r\n\t\t\t\t// only available with 15 Atk IVs\r\n\t\t\t\tdefaultIVs['atk'] = 15;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn defaultIVs;\r\n\t}\r\n\tdefaultHappiness(set: Dex.PokemonSet) {\r\n\t\tif (set.moves.includes('Return')) return 255;\r\n\t\tif (set.moves.includes('Frustration')) return 0;\r\n\t\treturn undefined;\r\n\t}\r\n\tprefersMinStats(set: Dex.PokemonSet) {\r\n\t\tlet minSpe = !set.evs?.spe && set.moves.includes('Gyro Ball');\r\n\t\tlet minAtk = !set.evs?.atk;\r\n\r\n\t\t// only available through an event with 31 Spe IVs\r\n\t\tif (set.species.startsWith('Terapagos')) minSpe = false;\r\n\r\n\t\tif (this.format === 'gen7hiddentype') return { minAtk, minSpe };\r\n\t\tif (this.format.includes('1v1')) return { minAtk, minSpe };\r\n\r\n\t\t// only available through an event with 31 Atk IVs\r\n\t\tif (set.ability === 'Battle Bond' || ['Koraidon', 'Miraidon'].includes(set.species)) {\r\n\t\t\tminAtk = false;\r\n\t\t\treturn { minAtk, minSpe };\r\n\t\t}\r\n\t\tif (!set.moves.length) minAtk = false;\r\n\t\tfor (const moveName of set.moves) {\r\n\t\t\tif (!moveName) continue;\r\n\t\t\tconst move = this.dex.moves.get(moveName);\r\n\t\t\tif (move.id === 'transform') {\r\n\t\t\t\tconst hasMoveBesidesTransform = set.moves.length > 1;\r\n\t\t\t\tif (!hasMoveBesidesTransform) minAtk = false;\r\n\t\t\t} else if (\r\n\t\t\t\tmove.category === 'Physical' && !move.damage && !move.ohko &&\r\n\t\t\t\t!['foulplay', 'endeavor', 'counter', 'bodypress', 'seismictoss', 'bide', 'metalburst', 'superfang'].includes(move.id) &&\r\n\t\t\t\t!(this.gen < 8 && move.id === 'rapidspin')\r\n\t\t\t) {\r\n\t\t\t\tminAtk = false;\r\n\t\t\t} else if (\r\n\t\t\t\t['metronome', 'assist', 'copycat', 'mefirst', 'photongeyser', 'shellsidearm', 'terablast'].includes(move.id) ||\r\n\t\t\t\t(this.gen === 5 && move.id === 'naturepower')\r\n\t\t\t) {\r\n\t\t\t\tminAtk = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { minAtk, minSpe };\r\n\t}\r\n\tgetNickname(set: Dex.PokemonSet) {\r\n\t\treturn set.name || this.dex.species.get(set.species).baseSpecies || '';\r\n\t}\r\n\tcanHyperTrain(set: Dex.PokemonSet) {\r\n\t\tlet format: string = this.format;\r\n\t\tif (this.gen < 7 || format === 'gen7hiddentype') return false;\r\n\t\tif ((set.level || this.defaultLevel) === 100) return true;\r\n\t\tif ((set.level || this.defaultLevel) >= 50 && this.defaultLevel === 50) return true;\r\n\t\treturn false;\r\n\t}\r\n\tgetHPIVs(hpType: Dex.TypeName | null) {\r\n\t\tswitch (hpType) {\r\n\t\tcase 'Dark':\r\n\t\t\treturn ['111111'];\r\n\t\tcase 'Dragon':\r\n\t\t\treturn ['011111', '101111', '110111'];\r\n\t\tcase 'Ice':\r\n\t\t\treturn ['010111', '100111', '111110'];\r\n\t\tcase 'Psychic':\r\n\t\t\treturn ['011110', '101110', '110110'];\r\n\t\tcase 'Electric':\r\n\t\t\treturn ['010110', '100110', '111011'];\r\n\t\tcase 'Grass':\r\n\t\t\treturn ['011011', '101011', '110011'];\r\n\t\tcase 'Water':\r\n\t\t\treturn ['100011', '111010'];\r\n\t\tcase 'Fire':\r\n\t\t\treturn ['101010', '110010'];\r\n\t\tcase 'Steel':\r\n\t\t\treturn ['100010', '111101'];\r\n\t\tcase 'Ghost':\r\n\t\t\treturn ['101101', '110101'];\r\n\t\tcase 'Bug':\r\n\t\t\treturn ['100101', '111100', '101100'];\r\n\t\tcase 'Rock':\r\n\t\t\treturn ['001100', '110100', '100100'];\r\n\t\tcase 'Ground':\r\n\t\t\treturn ['000100', '111001', '101001'];\r\n\t\tcase 'Poison':\r\n\t\t\treturn ['001001', '110001', '100001'];\r\n\t\tcase 'Flying':\r\n\t\t\treturn ['000001', '111000', '101000'];\r\n\t\tcase 'Fighting':\r\n\t\t\treturn ['001000', '110000', '100000'];\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tgetStat(stat: StatName, set: Dex.PokemonSet, ivOverride: number, evOverride?: number, natureOverride?: number) {\r\n\t\tconst team = this.team;\r\n\r\n\t\tconst supportsEVs = !team.format.includes('letsgo');\r\n\t\tconst supportsAVs = !supportsEVs;\r\n\r\n\t\t// do this after setting set.evs because it's assumed to exist\r\n\t\t// after getStat is run\r\n\t\tconst species = this.dex.species.get(set.species);\r\n\t\tif (!species.exists) return 0;\r\n\r\n\t\tconst level = set.level || this.defaultLevel;\r\n\r\n\t\tconst baseStat = species.baseStats[stat];\r\n\t\tconst iv = ivOverride;\r\n\t\tconst ev = evOverride ?? set.evs?.[stat] ?? (this.gen > 2 ? 0 : 252);\r\n\r\n\t\tif (stat === 'hp') {\r\n\t\t\tif (baseStat === 1) return 1;\r\n\t\t\tif (!supportsEVs) return Math.trunc(Math.trunc(2 * baseStat + iv + 100) * level / 100 + 10) + (supportsAVs ? ev : 0);\r\n\t\t\treturn Math.trunc(Math.trunc(2 * baseStat + iv + Math.trunc(ev / 4) + 100) * level / 100 + 10);\r\n\t\t}\r\n\t\tlet val = Math.trunc(Math.trunc(2 * baseStat + iv + Math.trunc(ev / 4)) * level / 100 + 5);\r\n\t\tif (!supportsEVs) {\r\n\t\t\tval = Math.trunc(Math.trunc(2 * baseStat + iv) * level / 100 + 5);\r\n\t\t}\r\n\t\tif (natureOverride) {\r\n\t\t\tval *= natureOverride;\r\n\t\t} else if (BattleNatures[set.nature!]?.plus === stat) {\r\n\t\t\tval *= 1.1;\r\n\t\t} else if (BattleNatures[set.nature!]?.minus === stat) {\r\n\t\t\tval *= 0.9;\r\n\t\t}\r\n\t\tif (!supportsEVs) {\r\n\t\t\tconst friendshipValue = Math.trunc((70 / 255 / 10 + 1) * 100);\r\n\t\t\tval = Math.trunc(val) * friendshipValue / 100 + (supportsAVs ? ev : 0);\r\n\t\t}\r\n\t\treturn Math.trunc(val);\r\n\t}\r\n\texport(compat?: boolean) {\r\n\t\treturn Teams.export(this.sets, this.dex, !compat);\r\n\t}\r\n\timport(value: string) {\r\n\t\tthis.sets = PSTeambuilder.importTeam(value);\r\n\t\tthis.save();\r\n\t}\r\n\tgetTypeWeakness(type: Dex.TypeName, attackType: Dex.TypeName): 0 | 0.5 | 1 | 2 {\r\n\t\tconst weaknessType = this.dex.types.get(type).damageTaken?.[attackType];\r\n\t\tif (weaknessType === Dex.IMMUNE) return 0;\r\n\t\tif (weaknessType === Dex.RESIST) return 0.5;\r\n\t\tif (weaknessType === Dex.WEAK) return 2;\r\n\t\treturn 1;\r\n\t}\r\n\tgetWeakness(types: readonly Dex.TypeName[], abilityid: ID, attackType: Dex.TypeName): number {\r\n\t\tif (attackType === 'Ground' && abilityid === 'levitate') return 0;\r\n\t\tif (attackType === 'Water' && abilityid === 'dryskin') return 0;\r\n\t\tif (attackType === 'Fire' && abilityid === 'flashfire') return 0;\r\n\t\tif (attackType === 'Electric' && abilityid === 'lightningrod' && this.gen >= 5) return 0;\r\n\t\tif (attackType === 'Grass' && abilityid === 'sapsipper') return 0;\r\n\t\tif (attackType === 'Electric' && abilityid === 'motordrive') return 0;\r\n\t\tif (attackType === 'Water' && abilityid === 'stormdrain' && this.gen >= 5) return 0;\r\n\t\tif (attackType === 'Electric' && abilityid === 'voltabsorb') return 0;\r\n\t\tif (attackType === 'Water' && abilityid === 'waterabsorb') return 0;\r\n\t\tif (attackType === 'Ground' && abilityid === 'eartheater') return 0;\r\n\t\tif (attackType === 'Fire' && abilityid === 'wellbakedbody') return 0;\r\n\r\n\t\tif (attackType === 'Fire' && abilityid === 'primordialsea') return 0;\r\n\t\tif (attackType === 'Water' && abilityid === 'desolateland') return 0;\r\n\r\n\t\tif (abilityid === 'wonderguard') {\r\n\t\t\tfor (const type of types) {\r\n\t\t\t\tif (this.getTypeWeakness(type, attackType) <= 1) return 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet factor = 1;\r\n\t\tif ((attackType === 'Fire' || attackType === 'Ice') && abilityid === 'thickfat') factor *= 0.5;\r\n\t\tif (attackType === 'Fire' && abilityid === 'waterbubble') factor *= 0.5;\r\n\t\tif (attackType === 'Fire' && abilityid === 'heatproof') factor *= 0.5;\r\n\t\tif (attackType === 'Ghost' && abilityid === 'purifyingsalt') factor *= 0.5;\r\n\t\tif (attackType === 'Fire' && abilityid === 'fluffy') factor *= 2;\r\n\t\tif ((attackType === 'Electric' || attackType === 'Rock' || attackType === 'Ice') && abilityid === 'deltastream') {\r\n\t\t\tfactor *= 0.5;\r\n\t\t}\r\n\t\tfor (const type of types) {\r\n\t\t\tfactor *= this.getTypeWeakness(type, attackType);\r\n\t\t}\r\n\t\treturn factor;\r\n\t}\r\n\tpokemonDefensiveCoverage(set: Dex.PokemonSet) {\r\n\t\tconst coverage: Record<string, number> = {};\r\n\t\tconst species = this.dex.species.get(set.species);\r\n\t\tconst abilityid = toID(set.ability);\r\n\t\tfor (const type of this.dex.types.names()) {\r\n\t\t\tcoverage[type] = this.getWeakness(species.types, abilityid, type);\r\n\t\t}\r\n\t\treturn coverage as Record<Dex.TypeName, number>;\r\n\t}\r\n\tteamDefensiveCoverage() {\r\n\t\ttype Counter = { type: Dex.TypeName, resists: number, neutrals: number, weaknesses: number };\r\n\t\tconst counters: Record<Dex.TypeName, Counter> = {} as any;\r\n\t\tfor (const type of this.dex.types.names()) {\r\n\t\t\tcounters[type] = {\r\n\t\t\t\ttype,\r\n\t\t\t\tresists: 0,\r\n\t\t\t\tneutrals: 0,\r\n\t\t\t\tweaknesses: 0,\r\n\t\t\t};\r\n\t\t}\r\n\t\tfor (const set of this.sets) {\r\n\t\t\tconst coverage = this.pokemonDefensiveCoverage(set);\r\n\t\t\tfor (const [type, value] of Object.entries(coverage) as [Dex.TypeName, number][]) {\r\n\t\t\t\tif (value < 1) {\r\n\t\t\t\t\tcounters[type].resists++;\r\n\t\t\t\t} else if (value === 1) {\r\n\t\t\t\t\tcounters[type].neutrals++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcounters[type].weaknesses++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn counters;\r\n\t}\r\n\tgetDefaultAbility(set: Dex.PokemonSet) {\r\n\t\tif (this.gen < 3 || this.isLetsGo || this.formeLegality === 'custom') return set.ability;\r\n\t\tconst species = this.dex.species.get(set.species);\r\n\t\tif (this.formeLegality === 'hackmons') {\r\n\t\t\t// TODO: support gen 9 hackmons forme legality more completely than this\r\n\t\t\tif (this.gen < 9 || species.baseSpecies !== 'Xerneas') return set.ability;\r\n\t\t\t// falls through to final return statement\r\n\t\t} else if (this.abilityLegality === 'hackmons') {\r\n\t\t\tif (!species.battleOnly) return set.ability;\r\n\t\t\tif (species.requiredItems.length || species.baseSpecies === 'Meloetta') return set.ability;\r\n\t\t\t// battle only species only ever have one ability\r\n\t\t\t// if they don't have a required item and aren't Meloetta, they change formes with that ability\r\n\t\t\t// so it's forced, even in AAA\r\n\t\t\treturn species.abilities[0];\r\n\t\t}\r\n\t\tconst abilities = Object.values(species.abilities);\r\n\t\tif (abilities.length === 1) return abilities[0];\r\n\t\tif (set.ability && abilities.includes(set.ability)) return set.ability;\r\n\t\treturn undefined;\r\n\t}\r\n\tgetDefaultItem(speciesName: string) {\r\n\t\tconst species = this.dex.species.get(speciesName);\r\n\t\tlet items = species.requiredItems;\r\n\t\tif (this.gen !== 7 && !this.isNatDex) {\r\n\t\t\t// Require plates on Arceus when Z crystals don't exist\r\n\t\t\titems = items.filter(i => !i.endsWith('ium Z'));\r\n\t\t}\r\n\t\tif (items.length === 1) {\r\n\t\t\tif (this.formeLegality === 'normal' ||\r\n\t\t\t\tthis.formeLegality === 'hackmons' && this.gen === 9 && species.battleOnly &&\r\n\t\t\t\t!species.isMega && !species.isPrimal && species.name !== 'Necrozma-Ultra') {\r\n\t\t\t\treturn items[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\tsave() {\r\n\t\tthis.team.packedTeam = Teams.pack(this.sets);\r\n\t\tthis.team.iconCache = null;\r\n\t}\r\n}\r\n\r\nexport class TeamEditor extends preact.Component<{\r\n\tteam: Team, narrow?: boolean, onChange?: () => void, readOnly?: boolean,\r\n\tchildren?: preact.ComponentChildren, resources?: preact.ComponentChildren,\r\n}> {\r\n\twizard = true;\r\n\teditor!: TeamEditorState;\r\n\tsetTab = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLButtonElement;\r\n\t\tconst wizard = target.value === 'wizard';\r\n\t\tthis.wizard = wizard;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tstatic renderTypeIcon(type: string | null, b?: boolean) { // b is just for utilichart.js\r\n\t\tif (!type) return null;\r\n\r\n\t\ttype = Dex.types.get(type).name;\r\n\t\tif (!type) type = '???';\r\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\r\n\t\treturn <img\r\n\t\t\tsrc={`${Dex.resourcePrefix}sprites/types/${sanitizedType}.png`} alt={type}\r\n\t\t\theight=\"14\" width=\"32\" class={`pixelated${b ? ' b' : ''}`} style=\"vertical-align:middle\"\r\n\t\t/>;\r\n\t}\r\n\tstatic probablyMobile() {\r\n\t\treturn document.body.offsetWidth < 500;\r\n\t}\r\n\trenderDefensiveCoverage() {\r\n\t\tconst { editor } = this;\r\n\t\tif (editor.team.isBox) return null;\r\n\t\tif (!editor.sets.length) return null;\r\n\r\n\t\tconst counters = Object.values(editor.teamDefensiveCoverage());\r\n\t\tPSUtils.sortBy(counters, counter => [counter.resists, -counter.weaknesses]);\r\n\t\tconst good = [], medium = [], bad = [];\r\n\t\tconst renderTypeDefensive = (counter: typeof counters[number]) => (\r\n\t\t\t<tr>\r\n\t\t\t\t<th>{counter.type}</th>\r\n\t\t\t\t<td>{counter.resists} <small class=\"gray\">resist</small></td>\r\n\t\t\t\t<td>{counter.weaknesses} <small class=\"gray\">weak</small></td>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t\tfor (const counter of counters) {\r\n\t\t\tif (counter.resists > 0) {\r\n\t\t\t\tgood.push(renderTypeDefensive(counter));\r\n\t\t\t} else if (counter.weaknesses <= 0) {\r\n\t\t\t\tmedium.push(renderTypeDefensive(counter));\r\n\t\t\t} else {\r\n\t\t\t\tbad.push(renderTypeDefensive(counter));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <details class=\"details\">\r\n\t\t\t<summary>\r\n\t\t\t\t<strong>Defensive coverage</strong>\r\n\t\t\t\t<table class=\"details-preview table\">\r\n\t\t\t\t\t{bad}\r\n\t\t\t\t\t<tr><td colSpan={3}><span class=\"details-preview ilink\"><small>See all</small></span></td></tr>\r\n\t\t\t\t</table>\r\n\t\t\t</summary>\r\n\t\t\t<table class=\"table\">{bad}{medium}{good}</table>\r\n\t\t</details>;\r\n\t}\r\n\tupdate = () => {\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\toverride render() {\r\n\t\tthis.editor ||= new TeamEditorState(this.props.team);\r\n\t\tconst editor = this.editor;\r\n\t\teditor.setReadonly(!!this.props.readOnly);\r\n\t\teditor.narrow = this.props.narrow ?? document.body.offsetWidth < 500;\r\n\t\tif (this.props.team.format !== editor.format) {\r\n\t\t\teditor.setFormat(this.props.team.format);\r\n\t\t}\r\n\r\n\t\treturn <div class=\"teameditor\">\r\n\t\t\t<ul class=\"tabbar\">\r\n\t\t\t\t<li><button onClick={this.setTab} value=\"wizard\" class={`button${this.wizard ? ' cur' : ''}`}>\r\n\t\t\t\t\tWizard\r\n\t\t\t\t</button></li>\r\n\t\t\t\t<li><button onClick={this.setTab} value=\"import\" class={`button${!this.wizard ? ' cur' : ''}`}>\r\n\t\t\t\t\tImport/Export\r\n\t\t\t\t</button></li>\r\n\t\t\t</ul>\r\n\t\t\t{this.wizard ? (\r\n\t\t\t\t<TeamWizard editor={editor} onChange={this.props.onChange} onUpdate={this.update} />\r\n\t\t\t) : (\r\n\t\t\t\t<TeamTextbox editor={editor} onChange={this.props.onChange} onUpdate={this.update} />\r\n\t\t\t)}\r\n\t\t\t{!this.editor.innerFocus && <>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t<div class=\"team-resources\">\r\n\t\t\t\t\t<br /><hr /><br />\r\n\t\t\t\t\t{this.renderDefensiveCoverage()}\r\n\t\t\t\t\t{this.props.resources}\r\n\t\t\t\t</div>\r\n\t\t\t</>}\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nclass TeamTextbox extends preact.Component<{\r\n\teditor: TeamEditorState,\r\n\tonChange?: () => void, onUpdate?: () => void,\r\n}> {\r\n\tstatic EMPTY_PROMISE = Promise.resolve(null);\r\n\teditor!: TeamEditorState;\r\n\tsetInfo: {\r\n\t\tspecies: string,\r\n\t\tbottomY: number,\r\n\t\tindex: number,\r\n\t}[] = [];\r\n\ttextbox: HTMLTextAreaElement = null!;\r\n\theightTester: HTMLTextAreaElement = null!;\r\n\tcompat = false;\r\n\t/** we changed the set but are delaying updates until the selection form is closed */\r\n\tsetDirty = false;\r\n\twindowing = true;\r\n\tselection: {\r\n\t\tsetIndex: number,\r\n\t\ttype: SelectionType | null,\r\n\t\ttypeIndex: number,\r\n\t\tlineRange: [number, number] | null,\r\n\t} | null = null;\r\n\tinnerFocus: {\r\n\t\toffsetY: number | null,\r\n\t\tsetIndex: number,\r\n\t\ttype: SelectionType,\r\n\t\t/** i.e. which move is this */\r\n\t\ttypeIndex: number,\r\n\t\trange: [number, number],\r\n\t\t/** if you edit, you'll change the range end, so it needs to be updated with this in mind */\r\n\t\trangeEndChar: string,\r\n\t} | null = null;\r\n\tgetYAt(index: number, fullLine?: boolean) {\r\n\t\tif (index < 0) return 10;\r\n\t\tif (index === 0) return 31;\r\n\t\tconst newValue = this.textbox.value.slice(0, index);\r\n\t\tthis.heightTester.value = fullLine && !newValue.endsWith('\\n') ? newValue + '\\n' : newValue;\r\n\t\treturn this.heightTester.scrollHeight;\r\n\t}\r\n\tinput = () => {\r\n\t\tthis.updateText();\r\n\t\tthis.save();\r\n\t};\r\n\tkeyUp = () => this.updateText(true);\r\n\tcontextMenu = (ev: MouseEvent) => {\r\n\t\tif (!ev.shiftKey) {\r\n\t\t\tconst hadInnerFocus = this.innerFocus?.range[1];\r\n\t\t\tthis.openInnerFocus();\r\n\t\t\tif (hadInnerFocus !== this.innerFocus?.range[1]) {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.stopImmediatePropagation();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\topenInnerFocus() {\r\n\t\tconst oldRange = this.selection?.lineRange;\r\n\t\tthis.updateText(true, true);\r\n\t\tif (this.selection) {\r\n\t\t\t// this shouldn't actually update anything, so the reference comparison is enough\r\n\t\t\tif (this.selection.lineRange === oldRange) return !!this.innerFocus;\r\n\t\t\tif (this.textbox.selectionStart === this.textbox.selectionEnd) {\r\n\t\t\t\tconst range = this.getSelectionTypeRange();\r\n\t\t\t\tif (range) this.textbox.setSelectionRange(range[0], range[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !!this.innerFocus;\r\n\t}\r\n\tkeyDown = (ev: KeyboardEvent) => {\r\n\t\tconst editor = this.editor;\r\n\t\tswitch (ev.keyCode) {\r\n\t\tcase 27: // escape\r\n\t\tcase 8: // backspace\r\n\t\t\tif (this.innerFocus) {\r\n\t\t\t\tconst atStart = (this.innerFocus.range[0] === this.textbox.selectionStart &&\r\n\t\t\t\t\tthis.innerFocus.range[0] === this.textbox.selectionEnd);\r\n\t\t\t\tif (ev.keyCode === 27 || atStart) {\r\n\t\t\t\t\tif (editor.search.removeFilter()) {\r\n\t\t\t\t\t\teditor.setSearchValue(this.getInnerFocusValue());\r\n\t\t\t\t\t\tthis.resetScroll();\r\n\t\t\t\t\t\tthis.forceUpdate();\r\n\t\t\t\t\t\tev.stopImmediatePropagation();\r\n\t\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\t} else if (this.closeMenu()) {\r\n\t\t\t\t\t\tev.stopImmediatePropagation();\r\n\t\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 38: // up\r\n\t\t\tif (this.innerFocus) {\r\n\t\t\t\teditor.upSearchValue();\r\n\t\t\t\tconst resultsUp = this.base!.querySelector('.searchresults');\r\n\t\t\t\tif (resultsUp) {\r\n\t\t\t\t\tresultsUp.scrollTop = Math.max(0, editor.searchIndex * 33 - Math.trunc((window.innerHeight - 100) * 0.4));\r\n\t\t\t\t}\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 40: // down\r\n\t\t\tif (this.innerFocus) {\r\n\t\t\t\teditor.downSearchValue();\r\n\t\t\t\tconst resultsDown = this.base!.querySelector('.searchresults');\r\n\t\t\t\tif (resultsDown) {\r\n\t\t\t\t\tresultsDown.scrollTop = Math.max(0, editor.searchIndex * 33 - Math.trunc((window.innerHeight - 100) * 0.4));\r\n\t\t\t\t}\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 9: // tab\r\n\t\tcase 13: // enter\r\n\t\t\tif (ev.keyCode === 13 && ev.shiftKey) return;\r\n\t\t\tif (ev.altKey || ev.metaKey) return;\r\n\t\t\tif (!this.innerFocus) {\r\n\t\t\t\tif (this.maybeReplaceLine()) {\r\n\t\t\t\t\t// do nothing else\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tthis.textbox.selectionStart === this.textbox.value.length &&\r\n\t\t\t\t\t(this.textbox.value.endsWith('\\n\\n') || !this.textbox.value)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.addPokemon();\r\n\t\t\t\t} else if (!this.openInnerFocus()) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tev.stopImmediatePropagation();\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tconst result = this.editor.selectSearchValue();\r\n\t\t\t\tif (result !== null) {\r\n\t\t\t\t\tconst [name, moveSlot] = result.split('|');\r\n\t\t\t\t\tthis.selectResult(this.innerFocus.type, name, moveSlot);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.replaceNoFocus('', this.innerFocus.range[0], this.innerFocus.range[1]);\r\n\t\t\t\t\tthis.editor.setSearchValue('');\r\n\t\t\t\t\tthis.forceUpdate();\r\n\t\t\t\t}\r\n\t\t\t\tthis.resetScroll();\r\n\t\t\t\tev.stopImmediatePropagation();\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 80: // p\r\n\t\t\tif (ev.metaKey) {\r\n\t\t\t\twindow.PS.alert(editor.export(this.compat));\r\n\t\t\t\tev.stopImmediatePropagation();\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tmaybeReplaceLine = () => {\r\n\t\tif (this.textbox.selectionStart !== this.textbox.selectionEnd) return;\r\n\t\tconst current = this.textbox.selectionEnd;\r\n\t\tconst lineStart = this.textbox.value.lastIndexOf('\\n', current) + 1;\r\n\t\tconst value = this.textbox.value.slice(lineStart, current);\r\n\r\n\t\tconst pokepaste = /^https?:\\/\\/pokepast.es\\/([a-z0-9]+)(?:\\/.*)?$/.exec(value)?.[1];\r\n\t\tif (pokepaste) {\r\n\t\t\tthis.editor.fetching = true;\r\n\t\t\tNet(`https://pokepast.es/${pokepaste}/json`).get().then(json => {\r\n\t\t\t\tconst paste = JSON.parse(json);\r\n\t\t\t\tconst pasteTxt = paste.paste.replace(/\\r\\n/g, '\\n');\r\n\t\t\t\tif (this.textbox) {\r\n\t\t\t\t\t// make sure it's still there:\r\n\t\t\t\t\tconst valueIndex = this.textbox.value.indexOf(value);\r\n\t\t\t\t\tthis.replace(paste.paste.replace(/\\r\\n/g, '\\n'), valueIndex, valueIndex + value.length);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.editor.import(pasteTxt);\r\n\t\t\t\t}\r\n\t\t\t\tconst notes = paste[\"notes\"] as string;\r\n\t\t\t\tif (notes.startsWith(\"Format: \")) {\r\n\t\t\t\t\tconst formatid = toID(notes.slice(8));\r\n\t\t\t\t\tthis.editor.setFormat(formatid);\r\n\t\t\t\t}\r\n\t\t\t\tconst title = paste[\"title\"] as string;\r\n\t\t\t\tif (title && !title.startsWith('Untitled')) {\r\n\t\t\t\t\tthis.editor.team.name = title.replace(/[|\\\\/]/g, '');\r\n\t\t\t\t}\r\n\t\t\t\tthis.editor.fetching = false;\r\n\t\t\t\tthis.props.onUpdate?.();\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\tgetInnerFocusValue() {\r\n\t\tif (!this.innerFocus) return '';\r\n\t\treturn this.textbox.value.slice(this.innerFocus.range[0], this.innerFocus.range[1]);\r\n\t}\r\n\tclearInnerFocus() {\r\n\t\tif (this.innerFocus) {\r\n\t\t\tif (this.innerFocus.type === 'pokemon') {\r\n\t\t\t\tconst value = this.getInnerFocusValue();\r\n\t\t\t\tif (!toID(value)) {\r\n\t\t\t\t\tthis.replaceNoFocus(this.editor.originalSpecies || '', this.innerFocus.range[0], this.innerFocus.range[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.innerFocus = null;\r\n\t\t}\r\n\t}\r\n\tcloseMenu = () => {\r\n\t\tif (this.innerFocus) {\r\n\t\t\tthis.clearInnerFocus();\r\n\t\t\tif (this.setDirty) {\r\n\t\t\t\tthis.updateText();\r\n\t\t\t\tthis.save();\r\n\t\t\t} else {\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t}\r\n\t\t\tthis.textbox.focus();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\tupdateText = (noTextChange?: boolean, autoSelect?: boolean | SelectionType) => {\r\n\t\tconst textbox = this.textbox;\r\n\t\tlet value = textbox.value;\r\n\t\tlet selectionStart = textbox.selectionStart || 0;\r\n\t\tlet selectionEnd = textbox.selectionEnd || 0;\r\n\r\n\t\tif (this.innerFocus) {\r\n\t\t\tif (!noTextChange) {\r\n\t\t\t\tlet lineEnd = this.textbox.value.indexOf('\\n', this.innerFocus.range[0]);\r\n\t\t\t\tif (lineEnd < 0) lineEnd = this.textbox.value.length;\r\n\t\t\t\tconst line = this.textbox.value.slice(this.innerFocus.range[0], lineEnd);\r\n\t\t\t\tif (this.innerFocus.rangeEndChar) {\r\n\t\t\t\t\tconst index = line.indexOf(this.innerFocus.rangeEndChar);\r\n\t\t\t\t\tif (index >= 0) lineEnd = this.innerFocus.range[0] + index;\r\n\t\t\t\t}\r\n\t\t\t\tthis.innerFocus.range[1] = lineEnd;\r\n\t\t\t}\r\n\t\t\tconst [start, end] = this.innerFocus.range;\r\n\t\t\tif (selectionStart >= start && selectionStart <= end && selectionEnd >= start && selectionEnd <= end) {\r\n\t\t\t\tif (!noTextChange) {\r\n\t\t\t\t\tthis.updateSearch();\r\n\t\t\t\t\tthis.setDirty = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.clearInnerFocus();\r\n\t\t\tvalue = textbox.value;\r\n\t\t\tselectionStart = textbox.selectionStart || 0;\r\n\t\t\tselectionEnd = textbox.selectionEnd || 0;\r\n\t\t}\r\n\r\n\t\tif (this.setDirty) {\r\n\t\t\tthis.setDirty = false;\r\n\t\t\tnoTextChange = false;\r\n\t\t}\r\n\r\n\t\tthis.heightTester.style.width = `${textbox.offsetWidth}px`;\r\n\t\t/** index of `value` that we've parsed to */\r\n\t\tlet index = 0;\r\n\t\t/** for the set we're currently parsing */\r\n\t\tlet setIndex: number | null = null;\r\n\t\tlet nextSetIndex = 0;\r\n\t\tif (!noTextChange) this.setInfo = [];\r\n\t\tthis.selection = null;\r\n\r\n\t\twhile (index < value.length) {\r\n\t\t\tlet nlIndex = value.indexOf('\\n', index);\r\n\t\t\tif (nlIndex < 0) nlIndex = value.length;\r\n\t\t\tconst line = value.slice(index, nlIndex);\r\n\r\n\t\t\tif (!line.trim()) {\r\n\t\t\t\tsetIndex = null;\r\n\t\t\t\tindex = nlIndex + 1;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (setIndex === null && index && !noTextChange && this.setInfo.length) {\r\n\t\t\t\tthis.setInfo[this.setInfo.length - 1].bottomY = this.getYAt(index - 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (setIndex === null) {\r\n\t\t\t\tif (!noTextChange) {\r\n\t\t\t\t\tconst atIndex = line.indexOf('@');\r\n\t\t\t\t\tlet species = atIndex >= 0 ? line.slice(0, atIndex).trim() : line.trim();\r\n\t\t\t\t\tif (species.endsWith(' (M)') || species.endsWith(' (F)')) {\r\n\t\t\t\t\t\tspecies = species.slice(0, -4);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (species.endsWith(')')) {\r\n\t\t\t\t\t\tconst parenIndex = species.lastIndexOf(' (');\r\n\t\t\t\t\t\tif (parenIndex >= 0) {\r\n\t\t\t\t\t\t\tspecies = species.slice(parenIndex + 2, -1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setInfo.push({\r\n\t\t\t\t\t\tspecies,\r\n\t\t\t\t\t\tbottomY: -1,\r\n\t\t\t\t\t\tindex,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsetIndex = nextSetIndex;\r\n\t\t\t\tnextSetIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tconst selectionEndCutoff = (selectionStart === selectionEnd ? nlIndex : nlIndex + 1);\r\n\t\t\tlet start = index, end = index + line.length;\r\n\t\t\tif (index <= selectionStart && selectionEnd <= selectionEndCutoff) {\r\n\t\t\t\t// both ends within range\r\n\t\t\t\tlet type: SelectionType | null = null;\r\n\t\t\t\tconst lcLine = line.toLowerCase().trim();\r\n\r\n\t\t\t\tif (lcLine.startsWith('ability:')) {\r\n\t\t\t\t\ttype = 'ability';\r\n\t\t\t\t} else if (lcLine.startsWith('-')) {\r\n\t\t\t\t\ttype = 'move';\r\n\t\t\t\t} else if (\r\n\t\t\t\t\t!lcLine || lcLine.startsWith('level:') || lcLine.startsWith('gender:') ||\r\n\t\t\t\t\t(lcLine + ':').startsWith('shiny:') || (lcLine + ':').startsWith('gigantamax:') ||\r\n\t\t\t\t\tlcLine.startsWith('tera type:') || lcLine.startsWith('dynamax level:')\r\n\t\t\t\t) {\r\n\t\t\t\t\ttype = 'details';\r\n\t\t\t\t} else if (\r\n\t\t\t\t\tlcLine.startsWith('ivs:') || lcLine.startsWith('evs:') ||\r\n\t\t\t\t\tlcLine.endsWith(' nature')\r\n\t\t\t\t) {\r\n\t\t\t\t\ttype = 'stats';\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttype = 'pokemon';\r\n\t\t\t\t\tconst atIndex = line.indexOf('@');\r\n\t\t\t\t\tif (atIndex >= 0) {\r\n\t\t\t\t\t\tif (selectionStart > index + atIndex) {\r\n\t\t\t\t\t\t\ttype = 'item';\r\n\t\t\t\t\t\t\tstart = index + atIndex + 1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tend = index + atIndex;\r\n\t\t\t\t\t\t\tif (line.charAt(atIndex - 1) === ']' || line.charAt(atIndex - 2) === ']') {\r\n\t\t\t\t\t\t\t\ttype = 'ability';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof autoSelect === 'string') autoSelect = autoSelect === type;\r\n\t\t\t\tthis.selection = {\r\n\t\t\t\t\tsetIndex, type, lineRange: [start, end], typeIndex: 0,\r\n\t\t\t\t};\r\n\t\t\t\tif (autoSelect) this.engageFocus();\r\n\t\t\t}\r\n\r\n\t\t\tindex = nlIndex + 1;\r\n\t\t}\r\n\t\tif (!noTextChange) {\r\n\t\t\tconst end = value.endsWith('\\n\\n') ? value.length - 1 : value.length;\r\n\t\t\tconst bottomY = this.getYAt(end, true);\r\n\t\t\tif (this.setInfo.length) {\r\n\t\t\t\tthis.setInfo[this.setInfo.length - 1].bottomY = bottomY;\r\n\t\t\t}\r\n\r\n\t\t\ttextbox.style.height = `${bottomY + 100}px`;\r\n\t\t}\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tengageFocus(focus?: this['innerFocus']) {\r\n\t\tif (this.innerFocus && !focus) return;\r\n\t\tconst editor = this.editor;\r\n\t\tif (editor.readonly) return;\r\n\r\n\t\tif (!focus) {\r\n\t\t\tif (!this.selection?.type) return;\r\n\r\n\t\t\tconst range = this.getSelectionTypeRange();\r\n\t\t\tif (!range) return;\r\n\t\t\tconst { type, setIndex } = this.selection;\r\n\r\n\t\t\tlet rangeEndChar = this.textbox.value.charAt(range[1]);\r\n\t\t\tif (rangeEndChar === ' ') rangeEndChar += this.textbox.value.charAt(range[1] + 1);\r\n\t\t\tfocus = {\r\n\t\t\t\toffsetY: this.getYAt(range[0]),\r\n\t\t\t\tsetIndex,\r\n\t\t\t\ttype,\r\n\t\t\t\ttypeIndex: this.selection.typeIndex,\r\n\t\t\t\trange,\r\n\t\t\t\trangeEndChar,\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.innerFocus = focus;\r\n\r\n\t\tif (focus.type === 'details' || focus.type === 'stats') {\r\n\t\t\tthis.forceUpdate();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst value = this.textbox.value.slice(focus.range[0], focus.range[1]);\r\n\t\teditor.setSearchType(focus.type, focus.setIndex, value);\r\n\t\tthis.resetScroll();\r\n\t\tthis.textbox.setSelectionRange(focus.range[0], focus.range[1]);\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\tupdateSearch() {\r\n\t\tif (!this.innerFocus) return;\r\n\t\tconst { range } = this.innerFocus;\r\n\t\tconst editor = this.editor;\r\n\t\tconst value = this.textbox.value.slice(range[0], range[1]);\r\n\r\n\t\teditor.setSearchValue(value);\r\n\t\tthis.resetScroll();\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\tselectResult = (type: string | null, name: string, moveSlot?: string) => {\r\n\t\tif (type === null) {\r\n\t\t\tthis.resetScroll();\r\n\t\t\tthis.forceUpdate();\r\n\t\t} else if (!type) {\r\n\t\t\tthis.changeSet(this.innerFocus!.type, '');\r\n\t\t} else {\r\n\t\t\tthis.changeSet(type as SelectionType, name, moveSlot);\r\n\t\t}\r\n\t};\r\n\tgetSelectionTypeRange(): [number, number] | null {\r\n\t\tconst selection = this.selection;\r\n\t\tif (!selection?.lineRange) return null;\r\n\r\n\t\tlet [start, end] = selection.lineRange;\r\n\t\tlet lcLine = this.textbox.value.slice(start, end).toLowerCase();\r\n\t\tif (lcLine.endsWith('  ')) {\r\n\t\t\tend -= 2;\r\n\t\t\tlcLine = lcLine.slice(0, -2);\r\n\t\t}\r\n\r\n\t\tswitch (selection.type) {\r\n\t\tcase 'pokemon': {\r\n\t\t\t// let atIndex = lcLine.lastIndexOf('@');\r\n\t\t\t// if (atIndex >= 0) {\r\n\t\t\t// \tif (lcLine.charAt(atIndex - 1) === ' ') atIndex--;\r\n\t\t\t// \tlcLine = lcLine.slice(0, atIndex);\r\n\t\t\t// \tend = start + atIndex;\r\n\t\t\t// }\r\n\r\n\t\t\tif (lcLine.endsWith(' ')) {\r\n\t\t\t\tlcLine = lcLine.slice(0, -1);\r\n\t\t\t\tend--;\r\n\t\t\t}\r\n\r\n\t\t\tif (lcLine.endsWith(' (m)') || lcLine.endsWith(' (f)')) {\r\n\t\t\t\tlcLine = lcLine.slice(0, -4);\r\n\t\t\t\tend -= 4;\r\n\t\t\t}\r\n\r\n\t\t\tif (lcLine.endsWith(')')) {\r\n\t\t\t\tconst parenIndex = lcLine.lastIndexOf(' (');\r\n\t\t\t\tif (parenIndex >= 0) {\r\n\t\t\t\t\tstart = start + parenIndex + 2;\r\n\t\t\t\t\tend--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn [start, end];\r\n\t\t}\r\n\t\tcase 'item': {\r\n\t\t\t// let atIndex = lcLine.lastIndexOf('@');\r\n\t\t\t// if (atIndex < 0) return null;\r\n\r\n\t\t\t// if (lcLine.charAt(atIndex + 1) === ' ') atIndex++;\r\n\t\t\t// return { start: start + atIndex + 1, end };\r\n\t\t\tif (lcLine.startsWith(' ')) start++;\r\n\t\t\treturn [start, end];\r\n\t\t}\r\n\t\tcase 'ability': {\r\n\t\t\tif (lcLine.startsWith('[')) {\r\n\t\t\t\tstart++;\r\n\t\t\t\tif (lcLine.endsWith(' ')) {\r\n\t\t\t\t\tend--;\r\n\t\t\t\t\tlcLine = lcLine.slice(0, -1);\r\n\t\t\t\t}\r\n\t\t\t\tif (lcLine.endsWith(']')) {\r\n\t\t\t\t\tend--;\r\n\t\t\t\t}\r\n\t\t\t\treturn [start, end];\r\n\t\t\t}\r\n\t\t\tif (!lcLine.startsWith('ability:')) return null;\r\n\t\t\tstart += lcLine.startsWith('ability: ') ? 9 : 8;\r\n\t\t\treturn [start, end];\r\n\t\t}\r\n\t\tcase 'move': {\r\n\t\t\tif (!lcLine.startsWith('-')) return null;\r\n\t\t\tstart += lcLine.startsWith('- ') ? 2 : 1;\r\n\t\t\treturn [start, end];\r\n\t\t}\r\n\t\t}\r\n\t\treturn [start, end];\r\n\t}\r\n\tchangeSet(type: SelectionType, name: string, moveSlot?: string) {\r\n\t\tconst focus = this.innerFocus;\r\n\t\tif (!focus) return;\r\n\r\n\t\tif (type === focus.type && type !== 'pokemon') {\r\n\t\t\tthis.replace(name, focus.range[0], focus.range[1]);\r\n\t\t\tthis.updateText(false, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (type) {\r\n\t\tcase 'pokemon': {\r\n\t\t\tconst set = this.editor.sets[focus.setIndex] ||= {\r\n\t\t\t\tspecies: '',\r\n\t\t\t\tmoves: [],\r\n\t\t\t};\r\n\t\t\tthis.editor.changeSpecies(set, name);\r\n\t\t\tthis.replaceSet(focus.setIndex);\r\n\t\t\tthis.updateText(false, true);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'ability': {\r\n\t\t\tthis.editor.sets[focus.setIndex].ability = name;\r\n\t\t\tthis.replaceSet(focus.setIndex);\r\n\t\t\tthis.updateText(false, true);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\tgetSetRange(index: number) {\r\n\t\tif (!this.setInfo[index]) {\r\n\t\t\tif (this.innerFocus?.setIndex === index) {\r\n\t\t\t\treturn this.innerFocus.range;\r\n\t\t\t}\r\n\t\t\treturn [this.textbox.value.length, this.textbox.value.length];\r\n\t\t}\r\n\t\tconst start = this.setInfo[index].index;\r\n\t\tconst end = this.setInfo[index + 1].index;\r\n\t\treturn [start, end];\r\n\t}\r\n\tchangeCompat = (ev: Event) => {\r\n\t\tconst checkbox = ev.currentTarget as HTMLInputElement;\r\n\t\tthis.compat = checkbox.checked;\r\n\t\tthis.editor.import(this.textbox.value);\r\n\t\tthis.textbox.value = this.editor.export(this.compat);\r\n\t\t// this.textbox.select();\r\n\t\t// document.execCommand('insertText', false, this.editor.export(this.compat));\r\n\t\tthis.updateText();\r\n\t};\r\n\treplaceSet(index: number) {\r\n\t\tconst editor = this.editor;\r\n\t\tconst { team } = editor;\r\n\t\tif (!team) return;\r\n\r\n\t\tlet newText = Teams.exportSet(editor.sets[index], editor.dex, !this.compat);\r\n\t\tconst [start, end] = this.getSetRange(index);\r\n\t\tif (start && start === this.textbox.value.length && !this.textbox.value.endsWith('\\n\\n')) {\r\n\t\t\tnewText = (this.textbox.value.endsWith('\\n') ? '\\n' : '\\n\\n') + newText;\r\n\t\t}\r\n\t\tthis.replaceNoFocus(newText, start, end, start + newText.length);\r\n\t\t// we won't do a full update but we do need to update where the end is,\r\n\t\t// for future updates\r\n\t\tif (!this.setInfo[index]) {\r\n\t\t\tthis.updateText();\r\n\t\t\tthis.save();\r\n\t\t} else {\r\n\t\t\tif (this.setInfo[index + 1]) {\r\n\t\t\t\tthis.setInfo[index + 1].index = start + newText.length;\r\n\t\t\t}\r\n\t\t\t// others don't need to be updated;\r\n\t\t\t// we'll do a full update next time we focus the textbox\r\n\t\t\tthis.setDirty = true;\r\n\t\t}\r\n\t}\r\n\treplace(text: string, start: number, end: number, selectionStart = start, selectionEnd = start + text.length) {\r\n\t\tconst textbox = this.textbox;\r\n\t\t// const value = textbox.value;\r\n\t\t// textbox.value = value.slice(0, start) + text + value.slice(end);\r\n\t\ttextbox.focus();\r\n\t\ttextbox.setSelectionRange(start, end);\r\n\t\tdocument.execCommand('insertText', false, text);\r\n\t\t// textbox.setSelectionRange(selectionStart, selectionEnd);\r\n\t\tthis.save();\r\n\t}\r\n\treplaceNoFocus(text: string, start: number, end: number, selectionStart = start, selectionEnd = start + text.length) {\r\n\t\tconst textbox = this.textbox;\r\n\t\tconst value = textbox.value;\r\n\t\ttextbox.value = value.slice(0, start) + text + value.slice(end);\r\n\t\ttextbox.setSelectionRange(selectionStart, selectionEnd);\r\n\t\tthis.save();\r\n\t}\r\n\tsave() {\r\n\t\tthis.editor.import(this.textbox.value);\r\n\t\tthis.props.onChange?.();\r\n\t}\r\n\toverride componentDidMount() {\r\n\t\tthis.textbox = this.base!.getElementsByClassName('teamtextbox')[0] as HTMLTextAreaElement;\r\n\t\tthis.heightTester = this.base!.getElementsByClassName('heighttester')[0] as HTMLTextAreaElement;\r\n\r\n\t\tthis.editor = this.props.editor;\r\n\t\tconst exportedTeam = this.editor.export(this.compat);\r\n\t\tthis.textbox.value = exportedTeam;\r\n\t\tthis.updateText();\r\n\t\tsetTimeout(() => this.updateText());\r\n\t}\r\n\toverride componentWillUnmount() {\r\n\t\tthis.textbox = null!;\r\n\t\tthis.heightTester = null!;\r\n\t}\r\n\tclickDetails = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLButtonElement;\r\n\t\tconst i = parseInt(target.value || '0');\r\n\t\tif (this.innerFocus?.type === target.name) {\r\n\t\t\tthis.innerFocus = null;\r\n\t\t\tthis.forceUpdate();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.engageFocus({\r\n\t\t\toffsetY: null,\r\n\t\t\tsetIndex: i,\r\n\t\t\ttype: target.name as SelectionType,\r\n\t\t\ttypeIndex: 0,\r\n\t\t\trange: [0, 0],\r\n\t\t\trangeEndChar: '',\r\n\t\t});\r\n\t};\r\n\taddPokemon = () => {\r\n\t\tif (this.textbox.value && !this.textbox.value.endsWith('\\n\\n')) {\r\n\t\t\tthis.textbox.value += this.textbox.value.endsWith('\\n') ? '\\n' : '\\n\\n';\r\n\t\t}\r\n\t\tconst end = this.textbox.value === '\\n\\n' ? 0 : this.textbox.value.length;\r\n\t\tthis.textbox.setSelectionRange(end, end);\r\n\t\tthis.textbox.focus();\r\n\t\tthis.engageFocus({\r\n\t\t\toffsetY: this.getYAt(end, true),\r\n\t\t\tsetIndex: this.setInfo.length,\r\n\t\t\ttype: 'pokemon',\r\n\t\t\ttypeIndex: 0,\r\n\t\t\trange: [end, end],\r\n\t\t\trangeEndChar: '@',\r\n\t\t});\r\n\t};\r\n\tscrollResults = (ev: Event) => {\r\n\t\tif (!(ev.currentTarget as HTMLElement).scrollTop) return;\r\n\t\tthis.windowing = false;\r\n\t\tif (document.documentElement.clientWidth === document.documentElement.scrollWidth) {\r\n\t\t\t(ev.currentTarget as any).scrollIntoViewIfNeeded?.();\r\n\t\t}\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tresetScroll() {\r\n\t\tthis.windowing = true;\r\n\t\tconst searchResults = this.base!.querySelector('.searchresults');\r\n\t\tif (searchResults) searchResults.scrollTop = 0;\r\n\t}\r\n\twindowResults() {\r\n\t\tif (this.windowing) {\r\n\t\t\treturn Math.ceil(window.innerHeight / 33);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\trenderDetails(set: Dex.PokemonSet, i: number) {\r\n\t\tconst editor = this.editor;\r\n\t\tconst species = editor.dex.species.get(set.species);\r\n\r\n\t\tconst GenderChart = {\r\n\t\t\t'M': 'Male',\r\n\t\t\t'F': 'Female',\r\n\t\t\t'N': '\\u2014', // em dash\r\n\t\t};\r\n\t\tconst gender = GenderChart[(set.gender || species.gender || 'N') as 'N'];\r\n\r\n\t\treturn <button class=\"textbox setdetails\" name=\"details\" value={i} onClick={this.clickDetails}>\r\n\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t<label>Level</label>{set.level || editor.defaultLevel}\r\n\t\t\t</span>\r\n\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t<label>Shiny</label>{set.shiny ? 'Yes' : '\\u2014'}\r\n\t\t\t</span>\r\n\t\t\t{editor.gen === 9 ? (\r\n\t\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t\t<label>Tera</label>{TeamEditor.renderTypeIcon(set.teraType || species.requiredTeraType || species.types[0])}\r\n\t\t\t\t</span>\r\n\t\t\t) : editor.hpTypeMatters(set) ? (\r\n\t\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t\t<label>H. Power</label>{TeamEditor.renderTypeIcon(editor.getHPType(set))}\r\n\t\t\t\t</span>\r\n\t\t\t) : (\r\n\t\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t\t<label>Gender</label>{gender}\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</button>;\r\n\t}\r\n\r\n\trenderStats(set: Dex.PokemonSet, i: number) {\r\n\t\tconst editor = this.editor;\r\n\r\n\t\t// stat cell\r\n\t\treturn <button class=\"textbox setstats\" name=\"stats\" value={i} onClick={this.clickDetails}>\r\n\t\t\t{StatForm.renderStatGraph(set, editor)}\r\n\t\t</button>;\r\n\t}\r\n\thandleSetChange = () => {\r\n\t\tif (this.selection) {\r\n\t\t\tthis.replaceSet(this.selection.setIndex);\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\t};\r\n\tbottomY() {\r\n\t\treturn this.setInfo[this.setInfo.length - 1]?.bottomY ?? 8;\r\n\t}\r\n\tcopyAll = (ev: Event) => {\r\n\t\tthis.textbox.select();\r\n\t\tdocument.execCommand('copy');\r\n\t\tconst button = ev?.currentTarget as HTMLButtonElement;\r\n\t\tif (button) {\r\n\t\t\tbutton.innerHTML = '<i class=\"fa fa-check\"></i> Copied';\r\n\t\t\tbutton.className += ' cur';\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\tconst editor = this.props.editor;\r\n\t\tconst statsDetailsOffset = editor.gen >= 3 ? 18 : -1;\r\n\t\treturn <div>\r\n\t\t\t<p>\r\n\t\t\t\t<button class=\"button\" onClick={this.copyAll}>\r\n\t\t\t\t\t<i class=\"fa fa-copy\" aria-hidden></i> Copy\r\n\t\t\t\t</button> {}\r\n\t\t\t\t<label class=\"checkbox inline\">\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"compat\" onChange={this.changeCompat} /> Old export format\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<div class=\"teameditor-text\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclass=\"textbox teamtextbox\" style={`padding-left:${editor.narrow ? '50px' : '100px'}`}\r\n\t\t\t\t\tonInput={this.input} onContextMenu={this.contextMenu} onKeyUp={this.keyUp} onKeyDown={this.keyDown}\r\n\t\t\t\t\tonClick={this.keyUp} onChange={this.maybeReplaceLine}\r\n\t\t\t\t\tplaceholder=\" Paste exported teams, pokepaste URLs, or JSON here\" readOnly={editor.readonly}\r\n\t\t\t\t/>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclass=\"textbox teamtextbox heighttester\" tabIndex={-1} aria-hidden\r\n\t\t\t\t\tstyle={`padding-left:${editor.narrow ? '50px' : '100px'};visibility:hidden;left:-15px`}\r\n\t\t\t\t/>\r\n\t\t\t\t<div class=\"teamoverlays\">\r\n\t\t\t\t\t{this.setInfo.slice(0, -1).map(info =>\r\n\t\t\t\t\t\t<hr style={`top:${info.bottomY - 18}px;pointer-events:none`} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{editor.canAdd() && !!this.setInfo.length && <hr style={`top:${this.bottomY() - 18}px`} />}\r\n\t\t\t\t\t{this.setInfo.map((info, i) => {\r\n\t\t\t\t\t\tif (!info.species) return null;\r\n\t\t\t\t\t\tconst set = editor.sets[i];\r\n\t\t\t\t\t\tif (!set) return null;\r\n\t\t\t\t\t\tconst prevOffset = i === 0 ? 8 : this.setInfo[i - 1].bottomY;\r\n\t\t\t\t\t\tconst species = editor.dex.species.get(info.species);\r\n\t\t\t\t\t\tconst num = Dex.getPokemonIconNum(species.id);\r\n\t\t\t\t\t\tif (!num) return null;\r\n\r\n\t\t\t\t\t\tconst top = Math.floor(num / 12) * 30;\r\n\t\t\t\t\t\tconst left = (num % 12) * 40;\r\n\t\t\t\t\t\tconst iconStyle = `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png) no-repeat scroll -${left}px -${top}px`;\r\n\r\n\t\t\t\t\t\tconst itemStyle = set.item && Dex.getItemIcon(editor.dex.items.get(set.item));\r\n\r\n\t\t\t\t\t\tif (editor.narrow) {\r\n\t\t\t\t\t\t\treturn <div style={`top:${prevOffset + 1}px;left:5px;position:absolute;text-align:center;pointer-events:none`}>\r\n\t\t\t\t\t\t\t\t<div><span class=\"picon\" style={iconStyle}></span></div>\r\n\t\t\t\t\t\t\t\t{species.types.map(type => <div>{TeamEditor.renderTypeIcon(type)}</div>)}\r\n\t\t\t\t\t\t\t\t<div><span class=\"itemicon\" style={itemStyle}></span></div>\r\n\t\t\t\t\t\t\t</div>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn [<div\r\n\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t`top:${prevOffset - 7}px;left:0;position:absolute;text-align:right;` +\r\n\t\t\t\t\t\t\t\t`width:94px;padding:103px 5px 0 0;min-height:24px;pointer-events:none;` +\r\n\t\t\t\t\t\t\t\tDex.getTeambuilderSprite(set, editor.dex)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>{species.types.map(type => TeamEditor.renderTypeIcon(type))}<span class=\"itemicon\" style={itemStyle}></span></div>\r\n\t\t\t\t\t\t</div>, <div style={`top:${prevOffset + statsDetailsOffset}px;right:9px;position:absolute`}>\r\n\t\t\t\t\t\t\t{this.renderStats(set, i)}\r\n\t\t\t\t\t\t</div>, <div style={`top:${prevOffset + statsDetailsOffset}px;right:145px;position:absolute`}>\r\n\t\t\t\t\t\t\t{this.renderDetails(set, i)}\r\n\t\t\t\t\t\t</div>];\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{editor.canAdd() && !(this.innerFocus && this.innerFocus.setIndex >= this.setInfo.length) && (\r\n\t\t\t\t\t\t<div style={`top:${this.bottomY() - 3}px;left:${editor.narrow ? 55 : 105}px;position:absolute`}>\r\n\t\t\t\t\t\t\t<button class=\"button\" onClick={this.addPokemon}>\r\n\t\t\t\t\t\t\t\t<i class=\"fa fa-plus\" aria-hidden></i> Add Pok&eacute;mon\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{this.innerFocus?.offsetY != null && (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass={`teaminnertextbox teaminnertextbox-${this.innerFocus.type}`}\r\n\t\t\t\t\t\t\tstyle={`top:${this.innerFocus.offsetY - 21}px;left:${editor.narrow ? 46 : 96}px;`}\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.innerFocus && (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass=\"searchresults\"\r\n\t\t\t\t\t\tstyle={`top:${(this.setInfo[this.innerFocus.setIndex]?.bottomY ?? this.bottomY() + 50) - 12}px`}\r\n\t\t\t\t\t\tonScroll={this.scrollResults}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button class=\"button closesearch\" onClick={this.closeMenu}>\r\n\t\t\t\t\t\t\t{!editor.narrow && <kbd>Esc</kbd>} <i class=\"fa fa-times\" aria-hidden></i> Close\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{this.innerFocus.type === 'stats' ? (\r\n\t\t\t\t\t\t\t<StatForm editor={editor} set={this.editor.sets[this.innerFocus.setIndex]} onChange={this.handleSetChange} />\r\n\t\t\t\t\t\t) : this.innerFocus.type === 'details' ? (\r\n\t\t\t\t\t\t\t<DetailsForm editor={editor} set={this.editor.sets[this.innerFocus.setIndex]} onChange={this.handleSetChange} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<PSSearchResults\r\n\t\t\t\t\t\t\t\tsearch={editor.search} resultIndex={editor.searchIndex}\r\n\t\t\t\t\t\t\t\twindowing={this.windowResults()} onSelect={this.selectResult}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nclass TeamWizard extends preact.Component<{\r\n\teditor: TeamEditorState, onChange?: () => void, onUpdate: () => void,\r\n}> {\r\n\tsetSearchBox: string | null = null;\r\n\twindowing = true;\r\n\tsetFocus = (ev: Event) => {\r\n\t\tconst { editor } = this.props;\r\n\t\tif (editor.readonly) return;\r\n\t\tconst target = ev.currentTarget as HTMLButtonElement;\r\n\t\tconst [rawType, i] = (target.value || '').split('|');\r\n\t\tconst setIndex = parseInt(i);\r\n\t\tconst type = rawType as SelectionType;\r\n\t\tif (!target.value || editor.innerFocus && editor.innerFocus.setIndex === setIndex && editor.innerFocus.type === type) {\r\n\t\t\tthis.changeFocus(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.changeFocus({\r\n\t\t\tsetIndex,\r\n\t\t\ttype,\r\n\t\t});\r\n\t};\r\n\tdeleteSet = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLButtonElement;\r\n\t\tconst i = parseInt(target.value);\r\n\t\tconst { editor } = this.props;\r\n\t\teditor.deleteSet(i);\r\n\t\tif (editor.innerFocus) {\r\n\t\t\tthis.changeFocus({\r\n\t\t\t\tsetIndex: editor.sets.length,\r\n\t\t\t\ttype: 'pokemon',\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.handleSetChange();\r\n\t\tev.preventDefault();\r\n\t};\r\n\tundeleteSet = (ev: Event) => {\r\n\t\tconst { editor } = this.props;\r\n\t\tconst setIndex = editor.deletedSet?.index;\r\n\t\teditor.undeleteSet();\r\n\t\tif (editor.innerFocus && setIndex !== undefined) {\r\n\t\t\tthis.changeFocus({\r\n\t\t\t\tsetIndex,\r\n\t\t\t\ttype: 'pokemon',\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.handleSetChange();\r\n\t\tev.preventDefault();\r\n\t};\r\n\tchangeFocus(focus: TeamEditorState['innerFocus']) {\r\n\t\tconst { editor } = this.props;\r\n\t\teditor.innerFocus = focus;\r\n\t\tif (!focus) {\r\n\t\t\tthis.props.onUpdate();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst set = editor.sets[focus.setIndex];\r\n\t\tif (focus.type === 'details') {\r\n\t\t\tthis.setSearchBox = set.name || '';\r\n\t\t} else if (focus.type !== 'stats') {\r\n\t\t\tlet value;\r\n\t\t\tif (focus.type === 'pokemon') value = set?.species || '';\r\n\t\t\telse if (focus.type === 'item') value = set.item;\r\n\t\t\telse if (focus.type === 'ability') value = set.ability;\r\n\t\t\teditor.setSearchType(focus.type, focus.setIndex, value);\r\n\t\t\tthis.resetScroll();\r\n\t\t\tthis.setSearchBox = value || '';\r\n\t\t}\r\n\t\tthis.props.onUpdate();\r\n\t}\r\n\trenderSet(set: Dex.PokemonSet | undefined, i: number) {\r\n\t\tconst { editor } = this.props;\r\n\t\tconst sprite = Dex.getTeambuilderSprite(set, editor.dex);\r\n\t\tif (!set) {\r\n\t\t\treturn <div class=\"set-button\">\r\n\t\t\t\t<div style=\"text-align:right\">\r\n\t\t\t\t\t{editor.deletedSet ? (\r\n\t\t\t\t\t\t<button onClick={this.undeleteSet} class=\"option\"><i class=\"fa fa-undo\" aria-hidden></i> Undo delete</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button class=\"option\" style=\"visibility:hidden\"><i class=\"fa fa-trash\" aria-hidden></i> Delete</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td rowSpan={2} class=\"set-pokemon\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t\t<button class=\"button button-first cur\" onClick={this.setFocus} value={`pokemon|${i}`}>\r\n\t\t\t\t\t\t\t\t<span class=\"sprite\" style={sprite}><span class=\"sprite-inner\">\r\n\t\t\t\t\t\t\t\t\t<strong class=\"label\">Pokemon</strong> {}\r\n\t\t\t\t\t\t\t\t\t<em>(choose species)</em>\r\n\t\t\t\t\t\t\t\t</span></span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div></td>\r\n\t\t\t\t\t\t<td colSpan={2} class=\"set-details\"></td>\r\n\t\t\t\t\t\t<td rowSpan={2} class=\"set-moves\"></td>\r\n\t\t\t\t\t\t<td rowSpan={2} class=\"set-stats\"></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td class=\"set-ability\"></td>\r\n\t\t\t\t\t\t<td class=\"set-item\"></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n\t\t\t</div>;\r\n\t\t}\r\n\t\twhile (set.moves.length < 4) set.moves.push('');\r\n\t\tconst overfull = set.moves.length > 4 ? ' overfull' : '';\r\n\r\n\t\tconst cur = (t: SelectionType) => (\r\n\t\t\teditor.readonly || (editor.innerFocus?.type === t && editor.innerFocus.setIndex === i) ? ' cur' : ''\r\n\t\t);\r\n\t\tconst species = editor.dex.species.get(set.species);\r\n\t\treturn <div class=\"set-button\">\r\n\t\t\t<div style=\"text-align:right\">\r\n\t\t\t\t<button class=\"option\" onClick={this.deleteSet} value={i} style={editor.readonly ? \"visibility:hidden\" : \"\"}>\r\n\t\t\t\t\t<i class=\"fa fa-trash\" aria-hidden></i> Delete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<table>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td rowSpan={2} class=\"set-pokemon\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t<button class={`button button-first${cur('pokemon')}`} onClick={this.setFocus} value={`pokemon|${i}`}>\r\n\t\t\t\t\t\t\t<span class=\"sprite\" style={sprite}><span class=\"sprite-inner\">\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Pokemon</strong> {}\r\n\t\t\t\t\t\t\t\t{set.species}\r\n\t\t\t\t\t\t\t</span></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div></td>\r\n\t\t\t\t\t<td colSpan={2} class=\"set-details\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t<button class={`button button-middle${cur('details')}`} onClick={this.setFocus} value={`details|${i}`}>\r\n\t\t\t\t\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Types</strong> {}\r\n\t\t\t\t\t\t\t\t{species.types.map(type => <div>{TeamEditor.renderTypeIcon(type)}</div>)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class=\"detailcell\">\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Level</strong> {}\r\n\t\t\t\t\t\t\t\t{set.level || editor.defaultLevel}\r\n\t\t\t\t\t\t\t\t{editor.narrow && set.shiny && <><br />\r\n\t\t\t\t\t\t\t\t\t<img src={`${Dex.resourcePrefix}sprites/misc/shiny.png`} width={22} height={22} alt=\"Shiny\" />\r\n\t\t\t\t\t\t\t\t</>}\r\n\t\t\t\t\t\t\t\t{!editor.narrow && set.gender && set.gender !== 'N' && <>\r\n\t\t\t\t\t\t\t\t\t<br /><img\r\n\t\t\t\t\t\t\t\t\t\tsrc={`${Dex.fxPrefix}gender-${set.gender.toLowerCase()}.png`} alt={set.gender} width=\"7\" height=\"10\" class=\"pixelated\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t{!!(!editor.narrow && (set.shiny || editor.gen >= 2)) && <span class=\"detailcell\">\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Shiny</strong> {}\r\n\t\t\t\t\t\t\t\t{set.shiny ? <img src={`${Dex.resourcePrefix}sprites/misc/shiny.png`} width={22} height={22} alt=\"Yes\" /> : '\\u2014'}\r\n\t\t\t\t\t\t\t</span>}\r\n\t\t\t\t\t\t\t{editor.gen === 9 && <span class=\"detailcell\">\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Tera</strong> {}\r\n\t\t\t\t\t\t\t\t{TeamEditor.renderTypeIcon(set.teraType || species.requiredTeraType || species.types[0])}\r\n\t\t\t\t\t\t\t</span>}\r\n\t\t\t\t\t\t\t{editor.hpTypeMatters(set) && <span class=\"detailcell\">\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">H.P.</strong> {}\r\n\t\t\t\t\t\t\t\t{TeamEditor.renderTypeIcon(editor.getHPType(set))}\r\n\t\t\t\t\t\t\t</span>}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div></td>\r\n\t\t\t\t\t<td rowSpan={2} class=\"set-moves\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t<button class={`button button-middle${cur('move')}${overfull}`} onClick={this.setFocus} value={`move|${i}`}>\r\n\t\t\t\t\t\t\t<strong class=\"label\">Moves</strong> {}\r\n\t\t\t\t\t\t\t{set.moves.map((move, mi) => <div>\r\n\t\t\t\t\t\t\t\t{!editor.narrow && <small class=\"gray\">&bull;</small>}\r\n\t\t\t\t\t\t\t\t{mi >= 4 ? <span class=\"message-error\">{move || (editor.narrow && '-') || ''}</span> : move || (editor.narrow && '-')}\r\n\t\t\t\t\t\t\t</div>)}\r\n\t\t\t\t\t\t\t{!set.moves.length && <em>(no moves)</em>}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div></td>\r\n\t\t\t\t\t<td rowSpan={2} class=\"set-stats\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t<button class={`button button-last${cur('stats')}`} onClick={this.setFocus} value={`stats|${i}`}>\r\n\t\t\t\t\t\t\t{StatForm.renderStatGraph(set, this.props.editor, true)}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div></td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td class=\"set-ability\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t<button class={`button button-middle${cur('ability')}`} onClick={this.setFocus} value={`ability|${i}`}>\r\n\t\t\t\t\t\t\t{(editor.gen >= 3 || set.ability) && <>\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Ability</strong> {}\r\n\t\t\t\t\t\t\t\t{(set.ability !== 'No Ability' && set.ability) ||\r\n\t\t\t\t\t\t\t\t\t(!set.ability ? <em>(choose ability)</em> : <em>(no ability)</em>)}\r\n\t\t\t\t\t\t\t</>}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div></td>\r\n\t\t\t\t\t<td class=\"set-item\"><div class=\"border-collapse\">\r\n\t\t\t\t\t\t<button class={`button button-middle${cur('item')}`} onClick={this.setFocus} value={`item|${i}`}>\r\n\t\t\t\t\t\t\t{(editor.gen >= 2 || set.item) && <>\r\n\t\t\t\t\t\t\t\t{set.item && <span class=\"itemicon\" style={'float:right;' + Dex.getItemIcon(set.item)}></span>}\r\n\t\t\t\t\t\t\t\t<strong class=\"label\">Item</strong> {}\r\n\t\t\t\t\t\t\t\t{set.item || <em>(no item)</em>}\r\n\t\t\t\t\t\t\t</>}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div></td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<button class={`button set-nickname${cur('details')}`} onClick={this.setFocus} value={`details|${i}`}>\r\n\t\t\t\t<strong class=\"label\">Nickname</strong> {}\r\n\t\t\t\t{editor.getNickname(set)}\r\n\t\t\t</button>\r\n\t\t</div>;\r\n\t}\r\n\thandleSetChange = () => {\r\n\t\tthis.props.editor.save();\r\n\t\tthis.props.onChange?.();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tclearSearchBox() {\r\n\t\tconst searchBox = this.base!.querySelector<HTMLInputElement>('input[name=value]');\r\n\t\tif (searchBox) {\r\n\t\t\tsearchBox.value = '';\r\n\t\t\tif (!TeamEditor.probablyMobile()) searchBox.focus();\r\n\t\t}\r\n\t}\r\n\tselectResult = (type: string | null, name: string, slot?: string, reverse?: boolean) => {\r\n\t\tconst { editor } = this.props;\r\n\t\tthis.clearSearchBox();\r\n\t\tif (type === null) {\r\n\t\t\tthis.resetScroll();\r\n\t\t\tthis.forceUpdate();\r\n\t\t} if (!type) {\r\n\t\t\teditor.setSearchValue('');\r\n\t\t\tthis.resetScroll();\r\n\t\t\tthis.forceUpdate();\r\n\t\t} else {\r\n\t\t\tconst setIndex = editor.innerFocus!.setIndex;\r\n\t\t\tconst set = (editor.sets[setIndex] ||= { species: '', moves: [] });\r\n\t\t\tswitch (type) {\r\n\t\t\tcase 'pokemon':\r\n\t\t\t\teditor.changeSpecies(set, name);\r\n\t\t\t\tthis.changeFocus({\r\n\t\t\t\t\tsetIndex,\r\n\t\t\t\t\ttype: reverse ? 'details' : 'ability',\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ability':\r\n\t\t\t\tif (name === 'No Ability' && editor.gen <= 2) name = '';\r\n\t\t\t\tset.ability = name;\r\n\t\t\t\tthis.changeFocus({\r\n\t\t\t\t\tsetIndex,\r\n\t\t\t\t\ttype: reverse ? 'pokemon' : 'item',\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'item':\r\n\t\t\t\tset.item = name;\r\n\t\t\t\tthis.changeFocus({\r\n\t\t\t\t\tsetIndex,\r\n\t\t\t\t\ttype: reverse ? 'ability' : 'move',\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'move':\r\n\t\t\t\tif (slot) {\r\n\t\t\t\t\t// intentional; we're _removing_ from the slot\r\n\t\t\t\t\tconst i = parseInt(slot) - 1;\r\n\t\t\t\t\tif (set.moves[i]) {\r\n\t\t\t\t\t\tset.moves[i] = '';\r\n\t\t\t\t\t\t// remove empty slots at the end\r\n\t\t\t\t\t\tif (i === set.moves.length - 1) {\r\n\t\t\t\t\t\t\twhile (set.moves.length > 4 && !set.moves[set.moves.length - 1]) {\r\n\t\t\t\t\t\t\t\tset.moves.pop();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if we have more than 4 moves, move the last move into the newly-cleared slot\r\n\t\t\t\t\t\tif (set.moves.length > 4 && i < set.moves.length - 1) {\r\n\t\t\t\t\t\t\tset.moves[i] = set.moves.pop()!;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (set.moves.includes(name)) {\r\n\t\t\t\t\tset.moves.splice(set.moves.indexOf(name), 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 0; i < set.moves.length + 1; i++) {\r\n\t\t\t\t\t\tif (!set.moves[i]) {\r\n\t\t\t\t\t\t\tset.moves[i] = name;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (set.moves.length === 4 && set.moves.every(Boolean)) {\r\n\t\t\t\t\tthis.changeFocus({\r\n\t\t\t\t\t\tsetIndex,\r\n\t\t\t\t\t\ttype: reverse ? 'item' : 'stats',\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (editor.search.query) {\r\n\t\t\t\t\t\tthis.resetScroll();\r\n\t\t\t\t\t}\r\n\t\t\t\t\teditor.updateSearchMoves(set);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\teditor.save();\r\n\t\t\tthis.props.onChange?.();\r\n\t\t\tthis.forceUpdate();\r\n\t\t}\r\n\t};\r\n\tupdateSearch = (ev: Event) => {\r\n\t\tconst searchBox = ev.currentTarget as HTMLInputElement;\r\n\t\tthis.props.editor.setSearchValue(searchBox.value);\r\n\t\tthis.resetScroll();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\thandleClickFilters = (ev: Event) => {\r\n\t\tconst search = this.props.editor.search;\r\n\t\tlet target = ev.target as HTMLElement | null;\r\n\t\twhile (target && target.className !== 'dexlist') {\r\n\t\t\tif (target.tagName === 'BUTTON') {\r\n\t\t\t\tconst filter = target.getAttribute('data-filter');\r\n\t\t\t\tif (filter) {\r\n\t\t\t\t\tsearch.removeFilter(filter.split(':') as any);\r\n\t\t\t\t\tconst searchBox = this.base!.querySelector<HTMLInputElement>('input[name=value]');\r\n\t\t\t\t\tsearch.find(searchBox?.value || '');\r\n\t\t\t\t\tif (!TeamEditor.probablyMobile()) searchBox?.select();\r\n\t\t\t\t\tthis.forceUpdate();\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttarget = target.parentElement;\r\n\t\t}\r\n\t};\r\n\tkeyDownSearch = (ev: KeyboardEvent) => {\r\n\t\tconst searchBox = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { editor } = this.props;\r\n\t\tswitch (ev.keyCode) {\r\n\t\tcase 8: // backspace\r\n\t\t\tif (searchBox.selectionStart === 0 && searchBox.selectionEnd === 0) {\r\n\t\t\t\teditor.search.removeFilter();\r\n\t\t\t\teditor.setSearchValue(searchBox.value);\r\n\t\t\t\tthis.resetScroll();\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 38: // up\r\n\t\t\teditor.upSearchValue();\r\n\t\t\tconst resultsUp = this.base!.querySelector('.wizardsearchresults');\r\n\t\t\tif (resultsUp) {\r\n\t\t\t\tresultsUp.scrollTop = Math.max(0, editor.searchIndex * 33 - Math.trunc((window.innerHeight - 300) / 2));\r\n\t\t\t}\r\n\t\t\tthis.forceUpdate();\r\n\t\t\tev.preventDefault();\r\n\t\t\tbreak;\r\n\t\tcase 40: // down\r\n\t\t\teditor.downSearchValue();\r\n\t\t\tconst resultsDown = this.base!.querySelector('.wizardsearchresults');\r\n\t\t\tif (resultsDown) {\r\n\t\t\t\tresultsDown.scrollTop = Math.max(0, editor.searchIndex * 33 - Math.trunc((window.innerHeight - 300) / 2));\r\n\t\t\t}\r\n\t\t\tthis.forceUpdate();\r\n\t\t\tev.preventDefault();\r\n\t\t\tbreak;\r\n\t\tcase 37: // left\r\n\t\t\t// prevent jumping to other rooms\r\n\t\t\tev.stopImmediatePropagation();\r\n\t\t\tbreak;\r\n\t\tcase 39: // right\r\n\t\t\t// prevent jumping to other rooms\r\n\t\t\tev.stopImmediatePropagation();\r\n\t\t\tbreak;\r\n\t\tcase 13: // enter\r\n\t\tcase 9: // tab\r\n\t\t\tconst value = editor.selectSearchValue();\r\n\t\t\tif (editor.innerFocus?.type !== 'move') searchBox.value = value || '';\r\n\t\t\tif (value !== null) {\r\n\t\t\t\tif (ev.keyCode === 9 && editor.innerFocus?.type === 'move') {\r\n\t\t\t\t\tthis.changeFocus({\r\n\t\t\t\t\t\tsetIndex: editor.innerFocus.setIndex,\r\n\t\t\t\t\t\ttype: ev.shiftKey ? 'item' : 'stats',\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst [name, moveSlot] = value.split('|');\r\n\t\t\t\t\tthis.selectResult(editor.innerFocus?.type || '', name, moveSlot, ev.keyCode === 9 && ev.shiftKey);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.clearSearchBox();\r\n\t\t\t\teditor.setSearchValue('');\r\n\t\t\t\tthis.resetScroll();\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t}\r\n\t\t\tev.preventDefault();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tscrollResults = (ev: Event) => {\r\n\t\tif (!(ev.currentTarget as HTMLElement).scrollTop) return;\r\n\t\tthis.windowing = false;\r\n\t\tif (document.documentElement.clientWidth === document.documentElement.scrollWidth) {\r\n\t\t\t(ev.currentTarget as any).scrollIntoViewIfNeeded?.();\r\n\t\t}\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tresetScroll() {\r\n\t\tthis.windowing = true;\r\n\t\tconst searchResults = this.base!.querySelector('.wizardsearchresults');\r\n\t\tif (searchResults) searchResults.scrollTop = 0;\r\n\t}\r\n\twindowResults() {\r\n\t\tif (this.windowing) {\r\n\t\t\treturn Math.ceil(window.innerHeight / 33);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\toverride componentDidUpdate() {\r\n\t\tconst searchBox = this.base!.querySelector<HTMLInputElement>('input[name=value], input[name=nickname]');\r\n\t\tif (this.setSearchBox !== null) {\r\n\t\t\tif (searchBox) {\r\n\t\t\t\tsearchBox.value = this.setSearchBox;\r\n\t\t\t\tif (!TeamEditor.probablyMobile()) searchBox.select();\r\n\t\t\t}\r\n\t\t\tthis.setSearchBox = null;\r\n\t\t}\r\n\t\tconst filters = this.base!.querySelector('.dexlist-filters');\r\n\t\tif (searchBox && searchBox.name === 'value') {\r\n\t\t\tif (filters) {\r\n\t\t\t\tconst { width } = filters.getBoundingClientRect();\r\n\t\t\t\tsearchBox.style.paddingLeft = `${width + 5}px`;\r\n\t\t\t} else {\r\n\t\t\t\tsearchBox.style.paddingLeft = `3px`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trenderInnerFocus() {\r\n\t\tconst { editor } = this.props;\r\n\t\tif (!editor.innerFocus) return null;\r\n\t\tconst { type, setIndex } = editor.innerFocus;\r\n\t\tconst set = this.props.editor.sets[setIndex] as Dex.PokemonSet | undefined;\r\n\t\tconst cur = (i: number) => setIndex === i ? ' cur' : '';\r\n\t\treturn <div class=\"team-focus-editor\">\r\n\t\t\t<ul class=\"tabbar\">\r\n\t\t\t\t<li class=\"home-li\"><button class=\"button\" onClick={this.setFocus}>\r\n\t\t\t\t\t<i class=\"fa fa-chevron-left\" aria-hidden></i> Back\r\n\t\t\t\t</button></li>\r\n\t\t\t\t{editor.sets.map((curSet, i) => <li><button\r\n\t\t\t\t\tclass={`button picontab${cur(i)}`} onClick={this.setFocus} value={`${type}|${i}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span class=\"picon\" style={Dex.getPokemonIcon(curSet)}></span><br />\r\n\t\t\t\t\t{editor.getNickname(curSet)}\r\n\t\t\t\t</button></li>)}\r\n\t\t\t\t{editor.canAdd() && <li><button\r\n\t\t\t\t\tclass={`button picontab${cur(editor.sets.length)}`} onClick={this.setFocus} value={`pokemon|${editor.sets.length}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i class=\"fa fa-plus\"></i>\r\n\t\t\t\t</button></li>}\r\n\t\t\t</ul>\r\n\t\t\t<div class=\"pad\" style=\"padding-top:0\">{this.renderSet(set, setIndex)}</div>\r\n\t\t\t{type === 'stats' ? (\r\n\t\t\t\t<StatForm editor={editor} set={set!} onChange={this.handleSetChange} />\r\n\t\t\t) : type === 'details' ? (\r\n\t\t\t\t<DetailsForm editor={editor} set={set!} onChange={this.handleSetChange} />\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"searchboxwrapper pad\" onClick={this.handleClickFilters}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"search\" name=\"value\" class=\"textbox\" placeholder=\"Search or filter\"\r\n\t\t\t\t\t\t\tonInput={this.updateSearch} onKeyDown={this.keyDownSearch} autocomplete=\"off\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{PSSearchResults.renderFilters(editor.search)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"wizardsearchresults\" onScroll={this.scrollResults}><PSSearchResults\r\n\t\t\t\t\t\tsearch={editor.search} hideFilters resultIndex={editor.searchIndex}\r\n\t\t\t\t\t\tonSelect={this.selectResult} windowing={this.windowResults()}\r\n\t\t\t\t\t/></div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>;\r\n\t}\r\n\toverride render() {\r\n\t\tconst { editor } = this.props;\r\n\t\tif (editor.innerFocus) return this.renderInnerFocus();\r\n\t\tif (editor.fetching) {\r\n\t\t\treturn <div class=\"teameditor\">Fetching Paste...</div>;\r\n\t\t}\r\n\r\n\t\tconst deletedSet = (i: number) => editor.deletedSet?.index === i ? <p style=\"text-align:right\">\r\n\t\t\t<button class=\"button\" onClick={this.undeleteSet}>\r\n\t\t\t\t<i class=\"fa fa-undo\" aria-hidden></i> Undo delete\r\n\t\t\t</button>\r\n\t\t</p> : null;\r\n\t\treturn <div class=\"teameditor\">\r\n\t\t\t{editor.sets.map((set, i) => [\r\n\t\t\t\tdeletedSet(i),\r\n\t\t\t\tthis.renderSet(set, i),\r\n\t\t\t])}\r\n\t\t\t{deletedSet(editor.sets.length)}\r\n\t\t\t{editor.canAdd() && <p><button class=\"button big\" onClick={this.setFocus} value={`pokemon|${editor.sets.length}`}>\r\n\t\t\t\t<i class=\"fa fa-plus\" aria-hidden></i> Add Pok&eacute;mon\r\n\t\t\t</button></p>}\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nclass StatForm extends preact.Component<{\r\n\teditor: TeamEditorState,\r\n\tset: Dex.PokemonSet,\r\n\tonChange: () => void,\r\n}> {\r\n\tstatic renderStatGraph(set: Dex.PokemonSet, editor: TeamEditorState, evs?: boolean) {\r\n\t\t// const supportsEVs = !team.format.includes('letsgo');\r\n\t\tconst defaultEV = (editor.gen > 2 ? 0 : 252);\r\n\t\tconst ivs = editor.getIVs(set);\r\n\t\treturn Dex.statNames.map(statID => {\r\n\t\t\tif (statID === 'spd' && editor.gen === 1) return null;\r\n\r\n\t\t\tconst stat = editor.getStat(statID, set, ivs[statID]);\r\n\t\t\tlet ev: number | string = set.evs?.[statID] ?? defaultEV;\r\n\t\t\tlet width = stat * 75 / 504;\r\n\t\t\tif (statID === 'hp') width = stat * 75 / 704;\r\n\t\t\tif (width > 75) width = 75;\r\n\t\t\tlet hue = Math.floor(stat * 180 / 714);\r\n\t\t\tif (hue > 360) hue = 360;\r\n\t\t\tconst statName = editor.gen === 1 && statID === 'spa' ? 'Spc' : BattleStatNames[statID];\r\n\t\t\tif (evs && !ev && !set.evs && statID === 'hp') ev = 'EVs';\r\n\t\t\treturn <span class=\"statrow\">\r\n\t\t\t\t<label>{statName}</label> {}\r\n\t\t\t\t<span class=\"statgraph\">\r\n\t\t\t\t\t<span style={`width:${width}px;background:hsl(${hue},40%,75%);border-color:hsl(${hue},40%,45%)`}></span>\r\n\t\t\t\t</span> {}\r\n\t\t\t\t{!evs && <em>{stat}</em>}\r\n\t\t\t\t{evs && <em>{ev || ''}</em>}\r\n\t\t\t\t{evs && (BattleNatures[set.nature!]?.plus === statID ? (\r\n\t\t\t\t\t<small>+</small>\r\n\t\t\t\t) : BattleNatures[set.nature!]?.minus === statID ? (\r\n\t\t\t\t\t<small>&minus;</small>\r\n\t\t\t\t) : null)}\r\n\t\t\t</span>;\r\n\t\t});\r\n\t}\r\n\trenderIVMenu() {\r\n\t\tconst { editor, set } = this.props;\r\n\t\tif (editor.gen <= 2) return null;\r\n\r\n\t\tconst hpType = editor.getHPMove(set);\r\n\t\tconst hpIVdata = hpType && !editor.canHyperTrain(set) && editor.getHPIVs(hpType) || null;\r\n\t\tconst autoSpread = set.ivs && editor.defaultIVs(set, false);\r\n\t\tconst autoSpreadValue = autoSpread && Object.values(autoSpread).join('/');\r\n\t\tif (!hpIVdata) {\r\n\t\t\treturn <select name=\"ivspread\" class=\"button\" onChange={this.changeIVSpread}>\r\n\t\t\t\t<option value=\"\" selected>IV spreads</option>\r\n\t\t\t\t{autoSpreadValue && <option value=\"auto\">Auto ({autoSpreadValue})</option>}\r\n\t\t\t\t<optgroup label=\"min Atk\">\r\n\t\t\t\t\t<option value=\"31/0/31/31/31/31\">31/0/31/31/31/31</option>\r\n\t\t\t\t</optgroup>\r\n\t\t\t\t<optgroup label=\"min Atk, min Spe\">\r\n\t\t\t\t\t<option value=\"31/0/31/31/31/0\">31/0/31/31/31/0</option>\r\n\t\t\t\t</optgroup>\r\n\t\t\t\t<optgroup label=\"max all\">\r\n\t\t\t\t\t<option value=\"31/31/31/31/31/31\">31/31/31/31/31/31</option>\r\n\t\t\t\t</optgroup>\r\n\t\t\t\t<optgroup label=\"min Spe\">\r\n\t\t\t\t\t<option value=\"31/31/31/31/31/0\">31/31/31/31/31/0</option>\r\n\t\t\t\t</optgroup>\r\n\t\t\t</select>;\r\n\t\t}\r\n\t\tconst minStat = editor.gen >= 6 ? 0 : 2;\r\n\t\tconst hpIVs = hpIVdata.map(ivs => ivs.split('').map(iv => parseInt(iv)));\r\n\r\n\t\treturn <select name=\"ivspread\" class=\"button\" onChange={this.changeIVSpread}>\r\n\t\t\t<option value=\"\" selected>Hidden Power {hpType} IVs</option>\r\n\t\t\t{autoSpreadValue && <option value=\"auto\">Auto ({autoSpreadValue})</option>}\r\n\t\t\t<optgroup label=\"min Atk\">\r\n\t\t\t\t{hpIVs.map(ivs => {\r\n\t\t\t\t\tconst spread = ivs.map((iv, i) => (i === 1 ? minStat : 30) + iv).join('/');\r\n\t\t\t\t\treturn <option value={spread}>{spread}</option>;\r\n\t\t\t\t})}\r\n\t\t\t</optgroup>\r\n\t\t\t<optgroup label=\"min Atk, min Spe\">\r\n\t\t\t\t{hpIVs.map(ivs => {\r\n\t\t\t\t\tconst spread = ivs.map((iv, i) => (i === 5 || i === 1 ? minStat : 30) + iv).join('/');\r\n\t\t\t\t\treturn <option value={spread}>{spread}</option>;\r\n\t\t\t\t})}\r\n\t\t\t</optgroup>\r\n\t\t\t<optgroup label=\"max all\">\r\n\t\t\t\t{hpIVs.map(ivs => {\r\n\t\t\t\t\tconst spread = ivs.map(iv => 30 + iv).join('/');\r\n\t\t\t\t\treturn <option value={spread}>{spread}</option>;\r\n\t\t\t\t})}\r\n\t\t\t</optgroup>\r\n\t\t\t<optgroup label=\"min Spe\">\r\n\t\t\t\t{hpIVs.map(ivs => {\r\n\t\t\t\t\tconst spread = ivs.map((iv, i) => (i === 5 ? minStat : 30) + iv).join('/');\r\n\t\t\t\t\treturn <option value={spread}>{spread}</option>;\r\n\t\t\t\t})}\r\n\t\t\t</optgroup>\r\n\t\t</select>;\r\n\t}\r\n\tsmogdexLink(s: string) {\r\n\t\tconst { editor } = this.props;\r\n\t\tconst species = editor.dex.species.get(s);\r\n\t\tlet format: string = editor.format;\r\n\t\tlet smogdexid: string = toID(species.baseSpecies);\r\n\r\n\t\tif (species.id === 'meowstic') {\r\n\t\t\tsmogdexid = 'meowstic-m';\r\n\t\t} else if (species.forme) {\r\n\t\t\tswitch (species.baseSpecies) {\r\n\t\t\tcase 'Alcremie':\r\n\t\t\tcase 'Basculin':\r\n\t\t\tcase 'Burmy':\r\n\t\t\tcase 'Castform':\r\n\t\t\tcase 'Cherrim':\r\n\t\t\tcase 'Deerling':\r\n\t\t\tcase 'Flabebe':\r\n\t\t\tcase 'Floette':\r\n\t\t\tcase 'Florges':\r\n\t\t\tcase 'Furfrou':\r\n\t\t\tcase 'Gastrodon':\r\n\t\t\tcase 'Genesect':\r\n\t\t\tcase 'Keldeo':\r\n\t\t\tcase 'Mimikyu':\r\n\t\t\tcase 'Minior':\r\n\t\t\tcase 'Pikachu':\r\n\t\t\tcase 'Polteageist':\r\n\t\t\tcase 'Sawsbuck':\r\n\t\t\tcase 'Shellos':\r\n\t\t\tcase 'Sinistea':\r\n\t\t\tcase 'Tatsugiri':\r\n\t\t\tcase 'Vivillon':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsmogdexid += '-' + toID(species.forme);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet generationNumber = 9;\r\n\t\tif (format.startsWith('gen')) {\r\n\t\t\tlet number = parseInt(format.charAt(3), 10);\r\n\t\t\tif (1 <= number && number <= 8) {\r\n\t\t\t\tgenerationNumber = number;\r\n\t\t\t}\r\n\t\t\tformat = format.slice(4);\r\n\t\t}\r\n\t\tconst generation = ['rb', 'gs', 'rs', 'dp', 'bw', 'xy', 'sm', 'ss', 'sv'][generationNumber - 1];\r\n\t\tif (format === 'battlespotdoubles') {\r\n\t\t\tsmogdexid += '/vgc15';\r\n\t\t} else if (format === 'doublesou' || format === 'doublesuu') {\r\n\t\t\tsmogdexid += '/doubles';\r\n\t\t} else if (\r\n\t\t\tformat === 'ou' || format === 'uu' || format === 'ru' || format === 'nu' || format === 'pu' ||\r\n\t\t\tformat === 'lc' || format === 'monotype' || format === 'mixandmega' || format === 'nfe' ||\r\n\t\t\tformat === 'nationaldex' || format === 'stabmons' || format === '1v1' || format === 'almostanyability'\r\n\t\t) {\r\n\t\t\tsmogdexid += '/' + format;\r\n\t\t} else if (format === 'balancedhackmons') {\r\n\t\t\tsmogdexid += '/bh';\r\n\t\t} else if (format === 'anythinggoes') {\r\n\t\t\tsmogdexid += '/ag';\r\n\t\t} else if (format === 'nationaldexag') {\r\n\t\t\tsmogdexid += '/national-dex-ag';\r\n\t\t}\r\n\t\treturn `http://smogon.com/dex/${generation}/pokemon/${smogdexid}/`;\r\n\t}\r\n\thandleGuess = () => {\r\n\t\tconst { editor, set } = this.props;\r\n\t\tconst team = editor.team;\r\n\r\n\t\tconst guess = new BattleStatGuesser(team.format).guess(set);\r\n\t\tset.evs = guess.evs;\r\n\t\tthis.plus = guess.plusStat || null;\r\n\t\tthis.minus = guess.minusStat || null;\r\n\t\tthis.updateNatureFromPlusMinus();\r\n\t\tthis.props.onChange();\r\n\t};\r\n\thandleOptimize = () => {\r\n\t\tconst { editor, set } = this.props;\r\n\t\tconst team = editor.team;\r\n\r\n\t\tconst optimized = BattleStatOptimizer(set, team.format);\r\n\t\tif (!optimized) return;\r\n\r\n\t\tset.evs = optimized.evs;\r\n\t\tthis.plus = optimized.plus || null;\r\n\t\tthis.minus = optimized.minus || null;\r\n\t\tthis.props.onChange();\r\n\t};\r\n\trenderSpreadGuesser() {\r\n\t\tconst { editor, set } = this.props;\r\n\t\tconst team = editor.team;\r\n\r\n\t\tif (editor.gen < 3) {\r\n\t\t\treturn <p>\r\n\t\t\t\t(<a target=\"_blank\" href={this.smogdexLink(set.species)}>Smogon&nbsp;analysis</a>)\r\n\t\t\t</p>;\r\n\t\t}\r\n\r\n\t\tconst guess = new BattleStatGuesser(team.format).guess(set);\r\n\t\tconst role = guess.role;\r\n\r\n\t\tconst guessedEVs = guess.evs;\r\n\t\tconst guessedPlus = guess.plusStat || null;\r\n\t\tconst guessedMinus = guess.minusStat || null;\r\n\t\treturn <p class=\"suggested\">\r\n\t\t\t<small>Guessed spread: </small>\r\n\t\t\t{role === '?' ? (\r\n\t\t\t\t\"(Please choose 4 moves to get a guessed spread)\"\r\n\t\t\t) : (\r\n\t\t\t\t<button name=\"setStatFormGuesses\" class=\"button\" onClick={this.handleGuess}>{role}: {}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDex.statNames.map(statID => guessedEVs[statID] ? `${guessedEVs[statID]} ${BattleStatNames[statID]}` : null)\r\n\t\t\t\t\t\t\t.filter(Boolean).join(' / ')\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{!!(guessedPlus && guessedMinus) && (\r\n\t\t\t\t\t\t` (+${BattleStatNames[guessedPlus]}, -${BattleStatNames[guessedMinus]})`\r\n\t\t\t\t\t)}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<small> (<a target=\"_blank\" href={this.smogdexLink(set.species)}>Smogon&nbsp;analysis</a>)</small>\r\n\t\t\t{/* <small>\r\n\t\t\t\t({role} | bulk: phys {Math.round(guess.moveCount.physicalBulk / 1000)}\r\n\t\t\t\t{} + spec {Math.round(guess.moveCount.specialBulk / 1000)}\r\n\t\t\t\t{} = {Math.round(guess.moveCount.bulk / 1000)})\r\n\t\t\t</small> */}\r\n\t\t</p>;\r\n\t}\r\n\trenderStatOptimizer() {\r\n\t\tconst optimized = BattleStatOptimizer(this.props.set, this.props.editor.format);\r\n\t\tif (!optimized) return null;\r\n\r\n\t\treturn <p>\r\n\t\t\t<small><em>Protip:</em> Use a different nature to {\r\n\t\t\t\toptimized.savedEVs ?\r\n\t\t\t\t\t`save ${optimized.savedEVs} EVs` :\r\n\t\t\t\t\t'get higher stats'\r\n\t\t\t}: </small>\r\n\t\t\t<button name=\"setStatFormOptimization\" class=\"button\" onClick={this.handleOptimize}>\r\n\t\t\t\t{\r\n\t\t\t\t\tDex.statNames.map(statID => optimized.evs[statID] ? `${optimized.evs[statID]} ${BattleStatNames[statID]}` : null)\r\n\t\t\t\t\t\t.filter(Boolean).join(' / ')\r\n\t\t\t\t}\r\n\t\t\t\t{!!(optimized.plus && optimized.minus) && (\r\n\t\t\t\t\t` (+${BattleStatNames[optimized.plus]}, -${BattleStatNames[optimized.minus]})`\r\n\t\t\t\t)}\r\n\t\t\t</button>\r\n\t\t</p>;\r\n\t}\r\n\tsetInput(name: string, value: string) {\r\n\t\tconst evInput = this.base!.querySelector<HTMLInputElement>(`input[name=\"${name}\"]`);\r\n\t\tif (evInput) evInput.value = value;\r\n\t}\r\n\tupdate(init?: boolean) {\r\n\t\tconst { set } = this.props;\r\n\t\tconst nature = BattleNatures[set.nature!];\r\n\t\tconst skipID = !init ? this.base!.querySelector<HTMLInputElement>('input:focus')?.name : undefined;\r\n\t\tif (nature?.plus) {\r\n\t\t\tthis.plus = nature?.plus || null;\r\n\t\t\tthis.minus = nature?.minus || null;\r\n\t\t} else if (this.plus && this.minus) {\r\n\t\t\t// if only one of plus or minus is set, clearing Nature doesn't change them\r\n\t\t\tthis.plus = null;\r\n\t\t\tthis.minus = null;\r\n\t\t}\r\n\t\tfor (const statID of Dex.statNames) {\r\n\t\t\tconst ev = `${set.evs?.[statID] || ''}`;\r\n\t\t\tconst plusMinus = this.plus === statID ? '+' : this.minus === statID ? '-' : '';\r\n\t\t\tconst iv = this.ivToDv(set.ivs?.[statID]);\r\n\t\t\tif (skipID !== `ev-${statID}`) this.setInput(`ev-${statID}`, ev + plusMinus);\r\n\t\t\tif (skipID !== `iv-${statID}`) this.setInput(`iv-${statID}`, iv);\r\n\t\t}\r\n\t}\r\n\toverride componentDidMount(): void {\r\n\t\tthis.update(true);\r\n\t}\r\n\toverride componentDidUpdate(): void {\r\n\t\tthis.update();\r\n\t}\r\n\tplus: Dex.StatNameExceptHP | null = null;\r\n\tminus: Dex.StatNameExceptHP | null = null;\r\n\trenderStatbar(stat: number, statID: StatName) {\r\n\t\tlet width = stat * 180 / 504;\r\n\t\tif (statID === 'hp') width = Math.floor(stat * 180 / 704);\r\n\t\tif (width > 179) width = 179;\r\n\t\tlet hue = Math.floor(stat * 180 / 714);\r\n\t\tif (hue > 360) hue = 360;\r\n\t\treturn <span\r\n\t\t\tstyle={`width:${Math.floor(width)}px;background:hsl(${hue},85%,45%);border-color:hsl(${hue},85%,35%)`}\r\n\t\t></span>;\r\n\t}\r\n\tchangeEV = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tconst statID = target.name.split('-')[1] as Dex.StatName;\r\n\t\tlet value = Math.abs(parseInt(target.value));\r\n\r\n\t\tif (isNaN(value)) {\r\n\t\t\tif (set.evs) delete set.evs[statID];\r\n\t\t} else {\r\n\t\t\tset.evs ||= {};\r\n\t\t\tset.evs[statID] = value;\r\n\t\t}\r\n\r\n\t\tif (target.type === 'range') {\r\n\t\t\t// enforce limit\r\n\t\t\tconst maxEv = this.maxEVs();\r\n\t\t\tif (maxEv < 6 * 252) {\r\n\t\t\t\tlet totalEv = 0;\r\n\t\t\t\tfor (const curEv of Object.values(set.evs || {})) totalEv += curEv;\r\n\t\t\t\tif (totalEv > maxEv && totalEv - value <= maxEv) {\r\n\t\t\t\t\tset.evs![statID] = maxEv - (totalEv - value) - (maxEv % 4);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (target.value.includes('+')) {\r\n\t\t\t\tif (statID === 'hp') {\r\n\t\t\t\t\talert(\"Natures cannot raise or lower HP.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.plus = statID;\r\n\t\t\t} else if (this.plus === statID) {\r\n\t\t\t\tthis.plus = null;\r\n\t\t\t}\r\n\t\t\tif (target.value.includes('-')) {\r\n\t\t\t\tif (statID === 'hp') {\r\n\t\t\t\t\talert(\"Natures cannot raise or lower HP.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.minus = statID;\r\n\t\t\t} else if (this.minus === statID) {\r\n\t\t\t\tthis.minus = null;\r\n\t\t\t}\r\n\t\t\tthis.updateNatureFromPlusMinus();\r\n\t\t}\r\n\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tupdateNatureFromPlusMinus = () => {\r\n\t\tconst { set } = this.props;\r\n\t\tif (!this.plus || !this.minus) {\r\n\t\t\tdelete set.nature;\r\n\t\t} else {\r\n\t\t\tfor (const i in BattleNatures) {\r\n\t\t\t\tif (BattleNatures[i as Dex.NatureName].plus === this.plus && BattleNatures[i as Dex.NatureName].minus === this.minus) {\r\n\t\t\t\t\tset.nature = i as Dex.NatureName;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/** Converts DV/IV in a textbox to the value in set. */\r\n\tdvToIv(dvOrIvString?: string): number | null {\r\n\t\tconst dvOrIv = Number(dvOrIvString);\r\n\t\tif (isNaN(dvOrIv)) return null;\r\n\t\tconst useIVs = this.props.editor.gen > 2;\r\n\t\treturn useIVs ? dvOrIv : (dvOrIv === 15 ? 31 : dvOrIv * 2);\r\n\t}\r\n\t/** Converts set.iv value to a DV/IV for a text box. */\r\n\tivToDv(iv?: number | null): string {\r\n\t\tif (iv === null || iv === undefined) return '';\r\n\t\tconst useIVs = this.props.editor.gen > 2;\r\n\t\treturn `${useIVs ? iv : Math.trunc(iv / 2)}`;\r\n\t}\r\n\tchangeIV = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tconst statID = target.name.split('-')[1] as StatName;\r\n\t\tconst value = this.dvToIv(target.value);\r\n\t\tif (value === null) {\r\n\t\t\tif (set.ivs) {\r\n\t\t\t\tdelete set.ivs[statID];\r\n\t\t\t\tif (Object.values(set.ivs).every(iv => iv === undefined)) {\r\n\t\t\t\t\tset.ivs = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tset.ivs ||= { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\r\n\t\t\tset.ivs[statID] = value;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeNature = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLSelectElement;\r\n\t\tconst { set } = this.props;\r\n\t\tconst nature = target.value as Dex.NatureName;\r\n\t\tif (nature === 'Serious') {\r\n\t\t\tdelete set.nature;\r\n\t\t} else {\r\n\t\t\tset.nature = nature;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeIVSpread = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLSelectElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (!target.value) return;\r\n\r\n\t\tif (target.value === 'auto') {\r\n\t\t\tset.ivs = undefined;\r\n\t\t} else {\r\n\t\t\tconst [hp, atk, def, spa, spd, spe] = target.value.split('/').map(Number);\r\n\t\t\tset.ivs = { hp, atk, def, spa, spd, spe };\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tmaxEVs() {\r\n\t\tconst team = this.props.editor.team;\r\n\t\tconst useEVs = !team.format.includes('letsgo');\r\n\t\treturn useEVs ? 510 : Infinity;\r\n\t}\r\n\toverride render() {\r\n\t\tconst { editor, set } = this.props;\r\n\t\tconst team = editor.team;\r\n\t\tconst species = editor.dex.species.get(set.species);\r\n\r\n\t\tconst baseStats = species.baseStats;\r\n\r\n\t\tconst nature = BattleNatures[set.nature || 'Serious'];\r\n\r\n\t\tconst useEVs = !team.format.includes('letsgo');\r\n\t\t// const useAVs = !useEVs && team.format.endsWith('norestrictions');\r\n\t\tconst maxEV = useEVs ? 252 : 200;\r\n\t\tconst stepEV = useEVs ? 4 : 1;\r\n\t\tconst defaultEV = useEVs && editor.gen <= 2 && !set.evs ? maxEV : 0;\r\n\t\tconst useIVs = editor.gen > 2;\r\n\r\n\t\t// label column\r\n\t\tconst statNames = {\r\n\t\t\thp: 'HP',\r\n\t\t\tatk: 'Attack',\r\n\t\t\tdef: 'Defense',\r\n\t\t\tspa: 'Sp. Atk.',\r\n\t\t\tspd: 'Sp. Def.',\r\n\t\t\tspe: 'Speed',\r\n\t\t};\r\n\t\tif (editor.gen === 1) statNames.spa = 'Special';\r\n\r\n\t\tconst ivs = editor.getIVs(set);\r\n\t\tconst stats = Dex.statNames.filter(statID => editor.gen > 1 || statID !== 'spd').map(statID => [\r\n\t\t\tstatID, statNames[statID], editor.getStat(statID, set, ivs[statID]),\r\n\t\t] as const);\r\n\r\n\t\tlet remaining = null;\r\n\t\tconst maxEv = this.maxEVs();\r\n\t\tif (maxEv < 6 * 252) {\r\n\t\t\tlet totalEv = 0;\r\n\t\t\tfor (const ev of Object.values(set.evs || {})) totalEv += ev;\r\n\t\t\tif (totalEv <= maxEv) {\r\n\t\t\t\tremaining = (totalEv > (maxEv - 2) ? 0 : (maxEv - 2) - totalEv);\r\n\t\t\t} else {\r\n\t\t\t\tremaining = maxEv - totalEv;\r\n\t\t\t}\r\n\t\t\tremaining ||= null;\r\n\t\t}\r\n\t\tconst defaultIVs = editor.defaultIVs(set);\r\n\r\n\t\treturn <div style=\"font-size:10pt\" role=\"dialog\" aria-label=\"Stats\">\r\n\t\t\t<div class=\"resultheader\"><h3>EVs, IVs, and Nature</h3></div>\r\n\t\t\t<div class=\"pad\">\r\n\t\t\t\t{this.renderSpreadGuesser()}\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>{/* Stat name */}</th>\r\n\t\t\t\t\t\t<th>Base</th>\r\n\t\t\t\t\t\t<th class=\"setstatbar\">{/* Stat bar */}</th>\r\n\t\t\t\t\t\t<th>{useEVs ? 'EVs' : 'AVs'}</th>\r\n\t\t\t\t\t\t<th>{/* EV slider */}</th>\r\n\t\t\t\t\t\t<th>{useIVs ? 'IVs' : 'DVs'}</th>\r\n\t\t\t\t\t\t<th>{/* Final stat */}</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{stats.map(([statID, statName, stat]) => <tr>\r\n\t\t\t\t\t\t<th style=\"text-align:right;font-weight:normal\">{statName}</th>\r\n\t\t\t\t\t\t<td style=\"text-align:right\"><strong>{baseStats[statID]}</strong></td>\r\n\t\t\t\t\t\t<td class=\"setstatbar\">{this.renderStatbar(stat, statID)}</td>\r\n\t\t\t\t\t\t<td><input\r\n\t\t\t\t\t\t\tname={`ev-${statID}`} placeholder={`${defaultEV || ''}`}\r\n\t\t\t\t\t\t\ttype=\"text\" inputMode=\"numeric\" class=\"textbox default-placeholder\" style=\"width:40px\"\r\n\t\t\t\t\t\t\tonInput={this.changeEV} onChange={this.changeEV}\r\n\t\t\t\t\t\t/></td>\r\n\t\t\t\t\t\t<td><input\r\n\t\t\t\t\t\t\tname={`evslider-${statID}`} value={set.evs?.[statID] ?? defaultEV} min=\"0\" max={maxEV} step={stepEV}\r\n\t\t\t\t\t\t\ttype=\"range\" class=\"evslider\" tabIndex={-1} aria-hidden\r\n\t\t\t\t\t\t\tonInput={this.changeEV} onChange={this.changeEV}\r\n\t\t\t\t\t\t/></td>\r\n\t\t\t\t\t\t<td><input\r\n\t\t\t\t\t\t\tname={`iv-${statID}`} min={0} max={useIVs ? 31 : 15} placeholder={`${defaultIVs[statID]}`} style=\"width:40px\"\r\n\t\t\t\t\t\t\ttype=\"number\" inputMode=\"numeric\" class=\"textbox default-placeholder\" onInput={this.changeIV} onChange={this.changeIV}\r\n\t\t\t\t\t\t/></td>\r\n\t\t\t\t\t\t<td style=\"text-align:right\"><strong>{stat}</strong></td>\r\n\t\t\t\t\t</tr>)}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colSpan={2}></td>\r\n\t\t\t\t\t\t<td class=\"setstatbar\" style=\"text-align:right\">{remaining !== null ? 'Remaining:' : ''}</td>\r\n\t\t\t\t\t\t<td style=\"text-align:center\">{remaining && remaining < 0 ? <b class=\"message-error\">{remaining}</b> : remaining}</td>\r\n\t\t\t\t\t\t<td colSpan={3} style=\"text-align:right\">{this.renderIVMenu()}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n\t\t\t\t{editor.gen >= 3 && <p>\r\n\t\t\t\t\tNature: <select name=\"nature\" class=\"button\" onChange={this.changeNature}>\r\n\t\t\t\t\t\t{Object.entries(BattleNatures).map(([natureName, curNature]) => (\r\n\t\t\t\t\t\t\t<option value={natureName} selected={curNature === nature}>\r\n\t\t\t\t\t\t\t\t{natureName}\r\n\t\t\t\t\t\t\t\t{curNature.plus && ` (+${BattleStatNames[curNature.plus]}, -${BattleStatNames[curNature.minus!]})`}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{editor.gen >= 3 && <p>\r\n\t\t\t\t\t<small><em>Protip:</em> You can also set natures by typing <kbd>+</kbd> and <kbd>-</kbd> in the EV box.</small>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{editor.gen >= 3 && this.renderStatOptimizer()}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nclass DetailsForm extends preact.Component<{\r\n\teditor: TeamEditorState,\r\n\tset: Dex.PokemonSet,\r\n\tonChange: () => void,\r\n}> {\r\n\tupdate(init?: boolean) {\r\n\t\tconst { set } = this.props;\r\n\t\tconst skipID = !init ? this.base!.querySelector<HTMLInputElement>('input:focus')?.name : undefined;\r\n\r\n\t\tconst nickname = this.base!.querySelector<HTMLInputElement>('input[name=\"nickname\"]');\r\n\t\tif (nickname && skipID !== 'nickname') nickname.value = set.name || '';\r\n\t}\r\n\toverride componentDidMount(): void {\r\n\t\tthis.update(true);\r\n\t}\r\n\toverride componentDidUpdate(): void {\r\n\t\tthis.update();\r\n\t}\r\n\tchangeNickname = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.name = target.value.trim();\r\n\t\t} else {\r\n\t\t\tdelete set.name;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeTera = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { editor, set } = this.props;\r\n\t\tconst species = editor.dex.species.get(set.species);\r\n\t\tif (!target.value || target.value === (species.requiredTeraType || species.types[0])) {\r\n\t\t\tdelete set.teraType;\r\n\t\t} else {\r\n\t\t\tset.teraType = target.value.trim();\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeLevel = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.level = parseInt(target.value.trim());\r\n\t\t} else {\r\n\t\t\tdelete set.level;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeGender = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.gender = target.value.trim();\r\n\t\t} else {\r\n\t\t\tdelete set.gender;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeHappiness = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.happiness = parseInt(target.value.trim());\r\n\t\t} else {\r\n\t\t\tdelete set.happiness;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeShiny = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.shiny = true;\r\n\t\t} else {\r\n\t\t\tdelete set.shiny;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeDynamaxLevel = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.dynamaxLevel = parseInt(target.value.trim());\r\n\t\t} else {\r\n\t\t\tdelete set.dynamaxLevel;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeGigantamax = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.checked) {\r\n\t\t\tset.gigantamax = true;\r\n\t\t} else {\r\n\t\t\tdelete set.gigantamax;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\tchangeHPType = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLInputElement;\r\n\t\tconst { set } = this.props;\r\n\t\tif (target.value) {\r\n\t\t\tset.hpType = target.value;\r\n\t\t} else {\r\n\t\t\tdelete set.hpType;\r\n\t\t}\r\n\t\tthis.props.onChange();\r\n\t};\r\n\trenderGender(gender: Dex.GenderName) {\r\n\t\tconst genderTable = { 'M': \"Male\", 'F': \"Female\" };\r\n\t\tif (gender === 'N') return 'Unknown';\r\n\t\treturn <>\r\n\t\t\t<img src={`${Dex.fxPrefix}gender-${gender.toLowerCase()}.png`} alt=\"\" width=\"7\" height=\"10\" class=\"pixelated\" /> {}\r\n\t\t\t{genderTable[gender]}\r\n\t\t</>;\r\n\t}\r\n\trender() {\r\n\t\tconst { editor, set } = this.props;\r\n\t\tconst species = editor.dex.species.get(set.species);\r\n\t\treturn <div style=\"font-size:10pt\" role=\"dialog\" aria-label=\"Details\">\r\n\t\t\t<div class=\"resultheader\"><h3>Details</h3></div>\r\n\t\t\t<div class=\"pad\">\r\n\t\t\t\t<p><label class=\"label\">Nickname: <input\r\n\t\t\t\t\tname=\"nickname\" class=\"textbox default-placeholder\" placeholder={species.baseSpecies}\r\n\t\t\t\t\tonInput={this.changeNickname} onChange={this.changeNickname}\r\n\t\t\t\t/></label></p>\r\n\t\t\t\t<p><label class=\"label\">Level: <input\r\n\t\t\t\t\tname=\"level\" value={set.level ?? ''} placeholder={`${editor.defaultLevel}`}\r\n\t\t\t\t\ttype=\"number\" inputMode=\"numeric\" min=\"1\" max=\"100\" step=\"1\"\r\n\t\t\t\t\tclass=\"textbox inputform numform default-placeholder\" style=\"width: 50px\"\r\n\t\t\t\t\tonInput={this.changeLevel} onChange={this.changeLevel}\r\n\t\t\t\t/></label><small>(You probably want to change the team's levels by changing the format, not here)</small></p>\r\n\t\t\t\t{editor.gen > 1 && (<>\r\n\t\t\t\t\t<p><div class=\"label\">Shiny: <div class=\"labeled\">\r\n\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\ttype=\"radio\" name=\"shiny\" value=\"true\" checked={set.shiny}\r\n\t\t\t\t\t\t\tonInput={this.changeShiny} onChange={this.changeShiny}\r\n\t\t\t\t\t\t/> <img src={`${Dex.resourcePrefix}sprites/misc/shiny.png`} width={22} height={22} alt=\"Shiny\" /> Yes</label>\r\n\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\ttype=\"radio\" name=\"shiny\" value=\"\" checked={!set.shiny}\r\n\t\t\t\t\t\t\tonInput={this.changeShiny} onChange={this.changeShiny}\r\n\t\t\t\t\t\t/> No</label>\r\n\t\t\t\t\t</div></div></p>\r\n\t\t\t\t\t<p><div class=\"label\">Gender: {species.gender ? (\r\n\t\t\t\t\t\t<strong>{this.renderGender(species.gender)}</strong>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div class=\"labeled\">\r\n\t\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\t\ttype=\"radio\" name=\"gender\" value=\"M\" checked={set.gender === 'M'}\r\n\t\t\t\t\t\t\t\tonInput={this.changeGender} onChange={this.changeGender}\r\n\t\t\t\t\t\t\t/> {this.renderGender('M')}</label>\r\n\t\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\t\ttype=\"radio\" name=\"gender\" value=\"F\" checked={set.gender === 'F'}\r\n\t\t\t\t\t\t\t\tonInput={this.changeGender} onChange={this.changeGender}\r\n\t\t\t\t\t\t\t/> {this.renderGender('F')}</label>\r\n\t\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\t\ttype=\"radio\" name=\"gender\" value=\"\" checked={!set.gender || set.gender === 'N'}\r\n\t\t\t\t\t\t\t\tonInput={this.changeGender} onChange={this.changeGender}\r\n\t\t\t\t\t\t\t/> Random</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}</div></p>\r\n\t\t\t\t\t{editor.isLetsGo ? (\r\n\t\t\t\t\t\t<p><label class=\"label\">Happiness: <input\r\n\t\t\t\t\t\t\tname=\"happiness\" value=\"\" placeholder=\"70\"\r\n\t\t\t\t\t\t\ttype=\"number\" inputMode=\"numeric\"\r\n\t\t\t\t\t\t\tclass=\"textbox inputform numform default-placeholder\" style=\"width: 50px\"\r\n\t\t\t\t\t\t\tonInput={this.changeHappiness} onChange={this.changeHappiness}\r\n\t\t\t\t\t\t/></label></p>\r\n\t\t\t\t\t) : (editor.gen < 8 || editor.isNatDex) && (\r\n\t\t\t\t\t\t<p><label class=\"label\">Happiness: <input\r\n\t\t\t\t\t\t\tname=\"happiness\" value={set.happiness ?? ''} placeholder=\"255\"\r\n\t\t\t\t\t\t\ttype=\"number\" inputMode=\"numeric\" min=\"0\" max=\"255\" step=\"1\"\r\n\t\t\t\t\t\t\tclass=\"textbox inputform numform default-placeholder\" style=\"width: 50px\"\r\n\t\t\t\t\t\t\tonInput={this.changeHappiness} onChange={this.changeHappiness}\r\n\t\t\t\t\t\t/></label></p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t{editor.gen === 8 && !editor.isBDSP && !species.cannotDynamax && (\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<label class=\"label\" style=\"display:inline\">Dynamax Level: <input\r\n\t\t\t\t\t\t\tname=\"dynamaxlevel\" value={set.dynamaxLevel ?? ''} placeholder=\"10\"\r\n\t\t\t\t\t\t\ttype=\"number\" inputMode=\"numeric\" min=\"0\" max=\"10\" step=\"1\" class=\"textbox inputform numform default-placeholder\"\r\n\t\t\t\t\t\t\tonInput={this.changeDynamaxLevel} onChange={this.changeDynamaxLevel}\r\n\t\t\t\t\t\t/></label> {}\r\n\t\t\t\t\t\t{species.canGigantamax ? (\r\n\t\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\" name=\"gigantamax\" value=\"true\" checked={set.gigantamax}\r\n\t\t\t\t\t\t\t\tonInput={this.changeGigantamax} onChange={this.changeGigantamax}\r\n\t\t\t\t\t\t\t/> Gigantamax</label>\r\n\t\t\t\t\t\t) : species.forme === 'Gmax' && (\r\n\t\t\t\t\t\t\t<label class=\"checkbox inline\"><input\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\" checked disabled\r\n\t\t\t\t\t\t\t/> Gigantamax</label>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t\t{((!editor.isLetsGo && editor.gen === 7) || editor.isNatDex || species.baseSpecies === 'Unown') && <p>\r\n\t\t\t\t\t<label class=\"label\">Hidden Power Type: <select name=\"hptype\" class=\"button\" onChange={this.changeHPType}>\r\n\t\t\t\t\t\t{Dex.types.all().map(type => (\r\n\t\t\t\t\t\t\ttype.HPivs && <option value={type.name} selected={editor.getHPType(set) === type.name}>\r\n\t\t\t\t\t\t\t\t{type.name}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select></label>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{editor.gen === 9 && <p>\r\n\t\t\t\t\t<label class=\"label\" title=\"Tera Type\">\r\n\t\t\t\t\t\tTera Type: {}\r\n\t\t\t\t\t\t{species.requiredTeraType && editor.formeLegality === 'normal' ? (\r\n\t\t\t\t\t\t\t<select name=\"teratype\" class=\"button cur\" disabled><option>{species.requiredTeraType}</option></select>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<select name=\"teratype\" class=\"button\" onChange={this.changeTera}>\r\n\t\t\t\t\t\t\t\t{Dex.types.all().map(type => (\r\n\t\t\t\t\t\t\t\t\t<option value={type.name} selected={(set.teraType || species.requiredTeraType || species.types[0]) === type.name}>\r\n\t\t\t\t\t\t\t\t\t\t{type.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{species.cosmeticFormes && <p>\r\n\t\t\t\t\t<button class=\"button\">\r\n\t\t\t\t\t\tChange sprite\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAmB;AAEnB,gCAA8B;AAC9B,wBAA4D;AAC5D,0BAAsB;AACtB,+BAA2D;AAC3D,kCAAgC;AAChC,6BAA8D;AAC9D,6BAAuD;AACvD,yBAAwB;AACxB,+BAAoB;AAlBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA,MAAM,wBAAwB,2BAAQ;AAAA,EA8BrC,YAAY,MAAY;AACvB,UAAM;AA7BP,gBAAyB,CAAC;AAC1B,eAAM,sBAAI;AACV,eAAiB;AACjB,sBAGW;AACX,kBAAS,IAAI,mCAAU;AACvB,kBAAa,MAAM,KAAK,GAAG;AAC3B,uBAAc;AACd,2BAAiC;AACjC,kBAAS;AACT,8BAA+C;AAAA,MAC9C;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,IAChD;AACA,sBAIW;AACX,oBAAW;AACX,oBAAW;AACX,kBAAS;AACT,yBAAkD;AAClD,2BAAyC;AACzC,wBAAe;AACf,oBAAW;AACX,oBAAW;AAgKX,sBAAa,CAAC,UAAU,eAAe,YAAY,MAAM;AA7JxD,SAAK,OAAO;AACZ,SAAK,OAAO,0BAAM,OAAO,KAAK,UAAU;AACxC,SAAK,UAAU,KAAK,MAAM;AAC1B,WAAO,SAAS,KAAK;AAAA,EACtB;AAAA,EACA,YAAY,UAAmB;AAC9B,QAAI,CAAC,YAAY,KAAK,SAAU,MAAK,OAAO,0BAAM,OAAO,KAAK,KAAK,UAAU;AAC7E,SAAK,WAAW;AAAA,EACjB;AAAA,EACA,UAAU,QAAgB;AACzB,UAAM,OAAO,KAAK;AAClB,UAAM,eAAW,wBAAK,MAAM;AAC5B,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,MAAM,sBAAI,UAAU,QAAQ;AACjC,SAAK,MAAM,KAAK,IAAI;AAEpB,iBAAS,wBAAK,MAAM,EAAE,MAAM,CAAC;AAC7B,SAAK,WAAW,SAAS,SAAS,QAAQ;AAC1C,SAAK,WAAW,SAAS,SAAS,aAAa,KAAK,SAAS,SAAS,QAAQ;AAC9E,SAAK,SAAS,SAAS,SAAS,MAAM;AACtC,QAAI,SAAS,SAAS,kBAAkB,KAAK,SAAS,SAAS,KAAK,GAAG;AACtE,WAAK,kBAAkB;AAAA,IACxB,OAAO;AACN,WAAK,kBAAkB;AAAA,IACxB;AACA,QAAI,SAAS,SAAS,UAAU,KAAK,SAAS,SAAS,IAAI,GAAG;AAC7D,WAAK,gBAAgB;AACrB,WAAK,kBAAkB;AAAA,IACxB,WAAW,SAAS,SAAS,WAAW,KAAK,SAAS,SAAS,YAAY,GAAG;AAC7E,WAAK,gBAAgB;AACrB,WAAK,kBAAkB;AAAA,IACxB,OAAO;AACN,WAAK,gBAAgB;AAAA,IACtB;AAEA,SAAK,eAAe;AACpB,QACC,SAAS,SAAS,KAAK,KAAK,SAAS,SAAS,KAAK,KAAK,SAAS,SAAS,oBAAoB,KAC9F,SAAS,SAAS,YAAY,KAAK,SAAS,SAAS,eAAe,KAAK,SAAS,SAAS,gBAAgB,GAC1G;AACD,WAAK,eAAe;AAAA,IACrB;AACA,QAAI,SAAS,SAAS,IAAI,GAAG;AAC5B,WAAK,eAAe;AAAA,IACrB;AAAA,EACD;AAAA,EACA,cAAc,MAAkB,GAAW,OAAgB;AAC1D,UAAM,MAAM,KAAK,KAAK,CAAC;AACvB,SAAK,OAAO,QAAQ,MAAM,KAAK,QAAQ,GAAG;AAC1C,SAAK,kBAAkB;AACvB,SAAK,OAAO,iBAAiB;AAC7B,QAAI,SAAS,QAAQ;AACpB,WAAK,OAAO,iBAAiB,KAAK,eAAe,GAAG;AACpD,UAAI,SAAS,KAAK,OAAO,eAAe,KAAK,SAAO,IAAI,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,UAAM,wBAAK,KAAK,CAAC,GAAG;AAC1F,gBAAQ;AAAA,MACT;AAAA,IACD,WAAW,OAAO;AACjB,cAAQ,MAAM;AAAA,QACd,KAAK;AACJ,cAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE,QAAQ;AACvC,iBAAK,kBAAkB;AACvB,iBAAK,OAAO,iBAAiB,CAAC,CAAC,eAAW,wBAAK,KAAK,CAAC,CAAC;AACtD,oBAAQ;AAAA,UACT;AACA;AAAA,QACD,KAAK;AACJ,kBAAI,wBAAK,KAAK,MAAM,SAAU,SAAQ;AACtC,cAAI,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE,QAAQ;AACrC,iBAAK,OAAO,iBAAiB,CAAC,CAAC,YAAQ,wBAAK,KAAK,CAAC,CAAC;AACnD,oBAAQ;AAAA,UACT;AACA;AAAA,QACD,KAAK;AACJ,kBAAI,wBAAK,KAAK,MAAM,gBAAiB,SAAQ;AAC7C,kBAAI,wBAAK,KAAK,MAAM,YAAa,SAAQ;AACzC,cAAI,KAAK,IAAI,UAAU,IAAI,KAAK,EAAE,QAAQ;AACzC,iBAAK,OAAO,iBAAiB,CAAC,CAAC,eAAW,wBAAK,KAAK,CAAC,CAAC;AACtD,oBAAQ;AAAA,UACT;AACA;AAAA,MACD;AAAA,IACD;AACA,QAAI,SAAS,OAAQ,EAAC,KAAK,OAAO,mBAAmB,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAQ,CAAC;AAChF,SAAK,OAAO,KAAK,SAAS,EAAE;AAC5B,SAAK,cAAc,KAAK,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,WAAW,IAAI;AAAA,EACrE;AAAA,EACA,kBAAkB,KAAqB;AACtC,QAAI,mBAAmB,KAAK,OAAO,gBAAgB,UAAU;AAC7D,SAAK,OAAO,iBAAiB,KAAK,eAAe,GAAG;AACpD,SAAK,eAAe,KAAK,OAAO,eAAe,SAAS;AACxD,QAAI,KAAK,cAAc,EAAG,MAAK,cAAc;AAC7C,SAAK,OAAO,UAAU;AACtB,QAAI,KAAK,OAAO,OAAO;AACtB,WAAK,eAAe,EAAE;AAAA,IACvB,OAAO;AACN,WAAK,OAAO,KAAK,EAAE;AAAA,IACpB;AAAA,EACD;AAAA,EACA,eAAe,KAAqB;AACnC,UAAM,MAAmB,CAAC;AAC1B,aAAS,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI,MAAM,QAAQ,CAAC,GAAG,KAAK;AACvD,UAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAI,wBAAK,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,EAAQ,CAAC;AAAA,IACjE;AACA,WAAO;AAAA,EACR;AAAA,EACA,eAAe,OAAe;AAC7B,SAAK,OAAO,KAAK,KAAK;AACtB,SAAK,cAAc,KAAK,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,WAAW,IAAI;AAAA,EACrE;AAAA,EACA,oBAAmC;AAClC,QAAI,SAAS,KAAK,OAAO,UAAU,KAAK,WAAW;AACnD,QAAI,SAAS,CAAC,MAAM,UAAU;AAC7B,WAAK;AACL,eAAS,KAAK,OAAO,UAAU,KAAK,WAAW;AAAA,IAChD;AACA,QAAI,CAAC,OAAQ,QAAO;AACpB,QAAI,KAAK,OAAO,UAAU,MAAM,GAAG;AAClC,WAAK,cAAc;AACnB,aAAO;AAAA,IACR;AACA,WAAO,KAAK,eAAe,MAAM;AAAA,EAClC;AAAA,EACA,cAAc,KAAqB,aAAqB;AACvD,UAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,WAAW;AAChD,QAAI,IAAI,SAAS,KAAK,eAAe,IAAI,OAAO,EAAG,KAAI,OAAO;AAC9D,QAAI,IAAI,SAAS,IAAI,QAAQ,MAAM,GAAG,EAAE,CAAC,EAAG,QAAO,IAAI;AACvD,QAAI,UAAU,QAAQ;AACtB,QAAI,UAAU,KAAK,kBAAkB,GAAG;AACxC,QAAI,OAAO,KAAK,eAAe,QAAQ,IAAI,KAAK,IAAI;AAEpD,YAAI,wBAAK,WAAW,MAAM,SAAS;AAClC,UAAI,OAAO;AACX,UAAI,UAAU;AACd,UAAI,QAAQ;AACZ,UAAI,SAAS;AACb,UAAI,OAAO;AACX,UAAI,UAAU;AACd,UAAI,QAAQ,CAAC,cAAc,cAAc,cAAc,eAAe;AACtE,UAAI,MAAM,EAAE,IAAI,IAAI,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI;AAC/D,UAAI,MAAM;AACV,UAAI,SAAS;AAAA,IACd;AAAA,EACD;AAAA,EACA,UAAU,OAAe;AACxB,QAAI,KAAK,KAAK,UAAU,MAAO;AAC/B,SAAK,aAAa;AAAA,MACjB,KAAK,KAAK,KAAK,KAAK;AAAA,MACpB;AAAA,IACD;AACA,SAAK,KAAK,OAAO,OAAO,CAAC;AAAA,EAC1B;AAAA,EACA,cAAc;AACb,QAAI,CAAC,KAAK,WAAY;AACtB,SAAK,KAAK,OAAO,KAAK,WAAW,OAAO,GAAG,KAAK,WAAW,GAAG;AAC9D,SAAK,aAAa;AAAA,EACnB;AAAA,EAEA,kBAAkB;AACjB,QAAI,CAAC,KAAK,OAAO,WAAW,KAAK,eAAe,KAAK,OAAO,QAAQ,SAAS,EAAG;AAEhF,SAAK;AACL,QAAI,KAAK,WAAW,SAAS,KAAK,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,CAAC,GAAG;AACzE,UAAI,KAAK,eAAe,KAAK,OAAO,QAAQ,SAAS,EAAG;AACxD,WAAK;AAAA,IACN;AACA,QAAI,KAAK,WAAW,SAAS,KAAK,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,CAAC,GAAG;AACzE,UAAI,KAAK,eAAe,KAAK,OAAO,QAAQ,SAAS,EAAG;AACxD,WAAK;AAAA,IACN;AAAA,EACD;AAAA,EACA,gBAAgB;AACf,QAAI,CAAC,KAAK,OAAO,WAAW,KAAK,eAAe,EAAG;AAEnD,QAAI,KAAK,eAAe,KAAK,KAAK,WAAW,SAAS,KAAK,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAG;AACpF,SAAK;AACL,QAAI,KAAK,WAAW,SAAS,KAAK,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,CAAC,GAAG;AACzE,UAAI,KAAK,eAAe,EAAG;AAC3B,WAAK;AAAA,IACN;AACA,QAAI,KAAK,WAAW,SAAS,KAAK,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,CAAC,GAAG;AACzE,UAAI,KAAK,eAAe,EAAG;AAC3B,WAAK;AAAA,IACN;AAAA,EACD;AAAA,EACA,eAAe,QAA2B;AACzC,YAAQ,OAAO,CAAC,GAAG;AAAA,MACnB,KAAK;AACJ,eAAO,KAAK,IAAI,QAAQ,IAAI,OAAO,CAAC,CAAC,EAAE;AAAA,MACxC,KAAK;AACJ,eAAO,KAAK,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,EAAE;AAAA,MACtC,KAAK;AACJ,eAAO,KAAK,IAAI,UAAU,IAAI,OAAO,CAAC,CAAC,EAAE;AAAA,MAC1C,KAAK;AACJ,YAAI,OAAO,CAAC,EAAE,WAAW,GAAG,GAAG;AAC9B,gBAAM,CAAC,MAAM,MAAM,IAAI,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,GAAG;AACnD,iBAAO,KAAK,IAAI,MAAM,IAAI,MAAM,EAAE,OAAO,MAAM;AAAA,QAChD;AACA,eAAO,KAAK,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,EAAE;AAAA,MACtC;AACC,eAAO,OAAO,CAAC;AAAA,IAChB;AAAA,EACD;AAAA,EACA,SAAkB;AACjB,WAAO,KAAK,KAAK,SAAS,KAAK,KAAK,KAAK;AAAA,EAC1C;AAAA,EACA,UAAU,KAAmC;AAC5C,QAAI,IAAI,OAAQ,QAAO,IAAI;AAC3B,UAAM,SAAS,IAAI,MAAM,OAAO,KAAK,UAAU,GAAG;AAClD,QAAI,OAAQ,QAAO;AAEnB,UAAM,UAAU;AAAA,MACf;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,IAC9I;AACA,QAAI,KAAK,OAAO,GAAG;AAClB,UAAI,CAAC,IAAI,IAAK,QAAO;AAErB,YAAM,QAAQ,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC;AACxC,YAAM,QAAQ,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC;AAQxC,aAAO,QAAQ,KAAK,QAAQ,KAAM,QAAQ,CAAE;AAAA,IAC7C,OAAO;AACN,YAAM,MAAM,IAAI,OAAO,KAAK,WAAW,GAAG;AAC1C,UAAI,UAAU;AACd,UAAI,IAAI;AAER,YAAM,YAAY,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,KAAK;AAC1D,iBAAW,KAAK,WAAW;AAC1B,YAAI,IAAI,CAAC,MAAM,OAAW,KAAI,CAAC,IAAI;AACnC,mBAAW,KAAK,IAAI,CAAC,IAAI;AACzB,aAAK;AAAA,MACN;AACA,aAAO,QAAQ,KAAK,MAAM,UAAU,KAAK,EAAE,CAAC;AAAA,IAC7C;AAAA,EACD;AAAA,EACA,cAAc,KAA8B;AAC3C,QAAI,KAAK,MAAM,EAAG,QAAO;AACzB,QAAI,KAAK,MAAM,EAAG,QAAO;AACzB,eAAW,QAAQ,IAAI,OAAO;AAC7B,YAAM,aAAS,wBAAK,IAAI;AACxB,UAAI,OAAO,WAAW,aAAa,EAAG,QAAO;AAC7C,UAAI,WAAW,YAAa,QAAO;AAAA,IACpC;AACA,YAAI,wBAAK,IAAI,OAAO,MAAM,WAAY,QAAO;AAC7C,WAAO;AAAA,EACR;AAAA,EACA,UAAU,KAA0C;AACnD,QAAI,IAAI,OAAO;AACd,iBAAW,QAAQ,IAAI,OAAO;AAC7B,cAAM,aAAS,wBAAK,IAAI;AACxB,YAAI,OAAO,WAAW,aAAa,GAAG;AACrC,iBAAO,OAAO,OAAO,EAAE,EAAE,YAAY,IAAI,OAAO,MAAM,EAAE;AAAA,QACzD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,OAAO,KAAqB;AAC3B,UAAM,MAAM,KAAK,WAAW,GAAG;AAC/B,QAAI,IAAI,IAAK,QAAO,OAAO,KAAK,IAAI,GAAG;AACvC,WAAO;AAAA,EACR;AAAA,EACA,WAAW,KAAqB,UAAU,CAAC,CAAC,IAAI,KAAmC;AAClF,UAAM,SAAS,KAAK,MAAM;AAC1B,UAAM,aAAa,EAAE,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AACzE,QAAI,CAAC,QAAQ;AACZ,iBAAW,QAAQ,sBAAI,UAAW,YAAW,IAAI,IAAI;AAAA,IACtD;AACA,QAAI,QAAS,QAAO;AAEpB,UAAM,SAAS,KAAK,UAAU,GAAG;AACjC,UAAM,WAAY,SAAS,IAAI;AAC/B,UAAM,EAAE,QAAQ,OAAO,IAAI,KAAK,gBAAgB,GAAG;AACnD,QAAI,OAAQ,YAAW,KAAK,IAAI;AAChC,QAAI,OAAQ,YAAW,KAAK,IAAI;AAEhC,QAAI,CAAC,QAAQ;AACZ,YAAM,QAAQ,SAAS,KAAK,IAAI,MAAM,IAAI,MAAM,EAAE,QAAQ;AAC1D,UAAI,OAAO;AACV,mBAAW,QAAQ,MAAO,YAAW,IAAoB,IAAI,MAAM,IAAoB;AAAA,MACxF;AAAA,IACD,OAAO;AACN,YAAM,QAAQ,SAAS,KAAK,IAAI,MAAM,IAAI,MAAM,EAAE,QAAQ;AAC1D,UAAI,OAAO;AACV,YAAI,KAAK,cAAc,GAAG,GAAG;AAC5B,cAAI,OAAQ,YAAW,KAAK,IAAI,MAAM,KAAK,KAAK;AAChD,cAAI,OAAQ,YAAW,KAAK,IAAI,MAAM,KAAK,KAAK;AAAA,QACjD,OAAO;AACN,qBAAW,QAAQ,MAAO,YAAW,IAAoB,IAAI,MAAM,IAAoB;AAAA,QACxF;AAAA,MACD;AAAA,IACD;AAEA,QAAI,QAAQ;AACX,UAAI,OAAQ,YAAW,KAAK,KAAK;AACjC,UAAI,OAAQ,YAAW,KAAK,KAAK;AAAA,IAClC;AACA,QAAI,UAAU,QAAQ;AAErB,UAAI,CAAC,gBAAgB,gBAAgB,cAAc,aAAa,EAAE,SAAS,IAAI,OAAO,GAAG;AAExF,mBAAW,KAAK,IAAI;AAAA,MACrB,WAAW,IAAI,QAAQ,WAAW,WAAW,GAAG;AAE/C,mBAAW,KAAK,IAAI;AAAA,MACrB;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,iBAAiB,KAAqB;AACrC,QAAI,IAAI,MAAM,SAAS,QAAQ,EAAG,QAAO;AACzC,QAAI,IAAI,MAAM,SAAS,aAAa,EAAG,QAAO;AAC9C,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB,KAAqB;AACpC,QAAI,SAAS,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,SAAS,WAAW;AAC5D,QAAI,SAAS,CAAC,IAAI,KAAK;AAGvB,QAAI,IAAI,QAAQ,WAAW,WAAW,EAAG,UAAS;AAElD,QAAI,KAAK,WAAW,iBAAkB,QAAO,EAAE,QAAQ,OAAO;AAC9D,QAAI,KAAK,OAAO,SAAS,KAAK,EAAG,QAAO,EAAE,QAAQ,OAAO;AAGzD,QAAI,IAAI,YAAY,iBAAiB,CAAC,YAAY,UAAU,EAAE,SAAS,IAAI,OAAO,GAAG;AACpF,eAAS;AACT,aAAO,EAAE,QAAQ,OAAO;AAAA,IACzB;AACA,QAAI,CAAC,IAAI,MAAM,OAAQ,UAAS;AAChC,eAAW,YAAY,IAAI,OAAO;AACjC,UAAI,CAAC,SAAU;AACf,YAAM,OAAO,KAAK,IAAI,MAAM,IAAI,QAAQ;AACxC,UAAI,KAAK,OAAO,aAAa;AAC5B,cAAM,0BAA0B,IAAI,MAAM,SAAS;AACnD,YAAI,CAAC,wBAAyB,UAAS;AAAA,MACxC,WACC,KAAK,aAAa,cAAc,CAAC,KAAK,UAAU,CAAC,KAAK,QACtD,CAAC,CAAC,YAAY,YAAY,WAAW,aAAa,eAAe,QAAQ,cAAc,WAAW,EAAE,SAAS,KAAK,EAAE,KACpH,EAAE,KAAK,MAAM,KAAK,KAAK,OAAO,cAC7B;AACD,iBAAS;AAAA,MACV,WACC,CAAC,aAAa,UAAU,WAAW,WAAW,gBAAgB,gBAAgB,WAAW,EAAE,SAAS,KAAK,EAAE,KAC1G,KAAK,QAAQ,KAAK,KAAK,OAAO,eAC9B;AACD,iBAAS;AAAA,MACV;AAAA,IACD;AAEA,WAAO,EAAE,QAAQ,OAAO;AAAA,EACzB;AAAA,EACA,YAAY,KAAqB;AAChC,WAAO,IAAI,QAAQ,KAAK,IAAI,QAAQ,IAAI,IAAI,OAAO,EAAE,eAAe;AAAA,EACrE;AAAA,EACA,cAAc,KAAqB;AAClC,QAAI,SAAiB,KAAK;AAC1B,QAAI,KAAK,MAAM,KAAK,WAAW,iBAAkB,QAAO;AACxD,SAAK,IAAI,SAAS,KAAK,kBAAkB,IAAK,QAAO;AACrD,SAAK,IAAI,SAAS,KAAK,iBAAiB,MAAM,KAAK,iBAAiB,GAAI,QAAO;AAC/E,WAAO;AAAA,EACR;AAAA,EACA,SAAS,QAA6B;AACrC,YAAQ,QAAQ;AAAA,MAChB,KAAK;AACJ,eAAO,CAAC,QAAQ;AAAA,MACjB,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,QAAQ;AAAA,MAC3B,KAAK;AACJ,eAAO,CAAC,UAAU,QAAQ;AAAA,MAC3B,KAAK;AACJ,eAAO,CAAC,UAAU,QAAQ;AAAA,MAC3B,KAAK;AACJ,eAAO,CAAC,UAAU,QAAQ;AAAA,MAC3B,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC,KAAK;AACJ,eAAO,CAAC,UAAU,UAAU,QAAQ;AAAA,MACrC;AACC,eAAO;AAAA,IACR;AAAA,EACD;AAAA,EACA,QAAQ,MAAgB,KAAqB,YAAoB,YAAqB,gBAAyB;AAC9G,UAAM,OAAO,KAAK;AAElB,UAAM,cAAc,CAAC,KAAK,OAAO,SAAS,QAAQ;AAClD,UAAM,cAAc,CAAC;AAIrB,UAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,IAAI,OAAO;AAChD,QAAI,CAAC,QAAQ,OAAQ,QAAO;AAE5B,UAAM,QAAQ,IAAI,SAAS,KAAK;AAEhC,UAAM,WAAW,QAAQ,UAAU,IAAI;AACvC,UAAM,KAAK;AACX,UAAM,KAAK,cAAc,IAAI,MAAM,IAAI,MAAM,KAAK,MAAM,IAAI,IAAI;AAEhE,QAAI,SAAS,MAAM;AAClB,UAAI,aAAa,EAAG,QAAO;AAC3B,UAAI,CAAC,YAAa,QAAO,KAAK,MAAM,KAAK,MAAM,IAAI,WAAW,KAAK,GAAG,IAAI,QAAQ,MAAM,EAAE,KAAK,cAAc,KAAK;AAClH,aAAO,KAAK,MAAM,KAAK,MAAM,IAAI,WAAW,KAAK,KAAK,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE;AAAA,IAC9F;AACA,QAAI,MAAM,KAAK,MAAM,KAAK,MAAM,IAAI,WAAW,KAAK,KAAK,MAAM,KAAK,CAAC,CAAC,IAAI,QAAQ,MAAM,CAAC;AACzF,QAAI,CAAC,aAAa;AACjB,YAAM,KAAK,MAAM,KAAK,MAAM,IAAI,WAAW,EAAE,IAAI,QAAQ,MAAM,CAAC;AAAA,IACjE;AACA,QAAI,gBAAgB;AACnB,aAAO;AAAA,IACR,WAAW,qCAAc,IAAI,MAAO,GAAG,SAAS,MAAM;AACrD,aAAO;AAAA,IACR,WAAW,qCAAc,IAAI,MAAO,GAAG,UAAU,MAAM;AACtD,aAAO;AAAA,IACR;AACA,QAAI,CAAC,aAAa;AACjB,YAAM,kBAAkB,KAAK,OAAO,KAAK,MAAM,KAAK,KAAK,GAAG;AAC5D,YAAM,KAAK,MAAM,GAAG,IAAI,kBAAkB,OAAO,cAAc,KAAK;AAAA,IACrE;AACA,WAAO,KAAK,MAAM,GAAG;AAAA,EACtB;AAAA,EACA,OAAO,QAAkB;AACxB,WAAO,0BAAM,OAAO,KAAK,MAAM,KAAK,KAAK,CAAC,MAAM;AAAA,EACjD;AAAA,EACA,OAAO,OAAe;AACrB,SAAK,OAAO,wCAAc,WAAW,KAAK;AAC1C,SAAK,KAAK;AAAA,EACX;AAAA,EACA,gBAAgB,MAAoB,YAA2C;AAC9E,UAAM,eAAe,KAAK,IAAI,MAAM,IAAI,IAAI,EAAE,cAAc,UAAU;AACtE,QAAI,iBAAiB,sBAAI,OAAQ,QAAO;AACxC,QAAI,iBAAiB,sBAAI,OAAQ,QAAO;AACxC,QAAI,iBAAiB,sBAAI,KAAM,QAAO;AACtC,WAAO;AAAA,EACR;AAAA,EACA,YAAY,OAAgC,WAAe,YAAkC;AAC5F,QAAI,eAAe,YAAY,cAAc,WAAY,QAAO;AAChE,QAAI,eAAe,WAAW,cAAc,UAAW,QAAO;AAC9D,QAAI,eAAe,UAAU,cAAc,YAAa,QAAO;AAC/D,QAAI,eAAe,cAAc,cAAc,kBAAkB,KAAK,OAAO,EAAG,QAAO;AACvF,QAAI,eAAe,WAAW,cAAc,YAAa,QAAO;AAChE,QAAI,eAAe,cAAc,cAAc,aAAc,QAAO;AACpE,QAAI,eAAe,WAAW,cAAc,gBAAgB,KAAK,OAAO,EAAG,QAAO;AAClF,QAAI,eAAe,cAAc,cAAc,aAAc,QAAO;AACpE,QAAI,eAAe,WAAW,cAAc,cAAe,QAAO;AAClE,QAAI,eAAe,YAAY,cAAc,aAAc,QAAO;AAClE,QAAI,eAAe,UAAU,cAAc,gBAAiB,QAAO;AAEnE,QAAI,eAAe,UAAU,cAAc,gBAAiB,QAAO;AACnE,QAAI,eAAe,WAAW,cAAc,eAAgB,QAAO;AAEnE,QAAI,cAAc,eAAe;AAChC,iBAAW,QAAQ,OAAO;AACzB,YAAI,KAAK,gBAAgB,MAAM,UAAU,KAAK,EAAG,QAAO;AAAA,MACzD;AAAA,IACD;AAEA,QAAI,SAAS;AACb,SAAK,eAAe,UAAU,eAAe,UAAU,cAAc,WAAY,WAAU;AAC3F,QAAI,eAAe,UAAU,cAAc,cAAe,WAAU;AACpE,QAAI,eAAe,UAAU,cAAc,YAAa,WAAU;AAClE,QAAI,eAAe,WAAW,cAAc,gBAAiB,WAAU;AACvE,QAAI,eAAe,UAAU,cAAc,SAAU,WAAU;AAC/D,SAAK,eAAe,cAAc,eAAe,UAAU,eAAe,UAAU,cAAc,eAAe;AAChH,gBAAU;AAAA,IACX;AACA,eAAW,QAAQ,OAAO;AACzB,gBAAU,KAAK,gBAAgB,MAAM,UAAU;AAAA,IAChD;AACA,WAAO;AAAA,EACR;AAAA,EACA,yBAAyB,KAAqB;AAC7C,UAAM,WAAmC,CAAC;AAC1C,UAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,IAAI,OAAO;AAChD,UAAM,gBAAY,wBAAK,IAAI,OAAO;AAClC,eAAW,QAAQ,KAAK,IAAI,MAAM,MAAM,GAAG;AAC1C,eAAS,IAAI,IAAI,KAAK,YAAY,QAAQ,OAAO,WAAW,IAAI;AAAA,IACjE;AACA,WAAO;AAAA,EACR;AAAA,EACA,wBAAwB;AAEvB,UAAM,WAA0C,CAAC;AACjD,eAAW,QAAQ,KAAK,IAAI,MAAM,MAAM,GAAG;AAC1C,eAAS,IAAI,IAAI;AAAA,QAChB;AAAA,QACA,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,MACb;AAAA,IACD;AACA,eAAW,OAAO,KAAK,MAAM;AAC5B,YAAM,WAAW,KAAK,yBAAyB,GAAG;AAClD,iBAAW,CAAC,MAAM,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAA+B;AACjF,YAAI,QAAQ,GAAG;AACd,mBAAS,IAAI,EAAE;AAAA,QAChB,WAAW,UAAU,GAAG;AACvB,mBAAS,IAAI,EAAE;AAAA,QAChB,OAAO;AACN,mBAAS,IAAI,EAAE;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,kBAAkB,KAAqB;AACtC,QAAI,KAAK,MAAM,KAAK,KAAK,YAAY,KAAK,kBAAkB,SAAU,QAAO,IAAI;AACjF,UAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,IAAI,OAAO;AAChD,QAAI,KAAK,kBAAkB,YAAY;AAEtC,UAAI,KAAK,MAAM,KAAK,QAAQ,gBAAgB,UAAW,QAAO,IAAI;AAAA,IAEnE,WAAW,KAAK,oBAAoB,YAAY;AAC/C,UAAI,CAAC,QAAQ,WAAY,QAAO,IAAI;AACpC,UAAI,QAAQ,cAAc,UAAU,QAAQ,gBAAgB,WAAY,QAAO,IAAI;AAInF,aAAO,QAAQ,UAAU,CAAC;AAAA,IAC3B;AACA,UAAM,YAAY,OAAO,OAAO,QAAQ,SAAS;AACjD,QAAI,UAAU,WAAW,EAAG,QAAO,UAAU,CAAC;AAC9C,QAAI,IAAI,WAAW,UAAU,SAAS,IAAI,OAAO,EAAG,QAAO,IAAI;AAC/D,WAAO;AAAA,EACR;AAAA,EACA,eAAe,aAAqB;AACnC,UAAM,UAAU,KAAK,IAAI,QAAQ,IAAI,WAAW;AAChD,QAAI,QAAQ,QAAQ;AACpB,QAAI,KAAK,QAAQ,KAAK,CAAC,KAAK,UAAU;AAErC,cAAQ,MAAM,OAAO,OAAK,CAAC,EAAE,SAAS,OAAO,CAAC;AAAA,IAC/C;AACA,QAAI,MAAM,WAAW,GAAG;AACvB,UAAI,KAAK,kBAAkB,YAC1B,KAAK,kBAAkB,cAAc,KAAK,QAAQ,KAAK,QAAQ,cAC/D,CAAC,QAAQ,UAAU,CAAC,QAAQ,YAAY,QAAQ,SAAS,kBAAkB;AAC3E,eAAO,MAAM,CAAC;AAAA,MACf;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EACA,OAAO;AACN,SAAK,KAAK,aAAa,0BAAM,KAAK,KAAK,IAAI;AAC3C,SAAK,KAAK,YAAY;AAAA,EACvB;AACD;AAEO,MAAM,mBAAmB,cAAAA,QAAO,UAGpC;AAAA,EAHI;AAAA;AAIN,kBAAS;AAET,kBAAS,CAAC,OAAc;AACvB,YAAM,SAAS,GAAG;AAClB,YAAM,SAAS,OAAO,UAAU;AAChC,WAAK,SAAS;AACd,WAAK,YAAY;AAAA,IAClB;AAkDA,kBAAS,MAAM;AACd,WAAK,YAAY;AAAA,IAClB;AAAA;AAAA,EAnDA,OAAO,eAAe,MAAqB,GAAa;AACvD,QAAI,CAAC,KAAM,QAAO;AAElB,WAAO,sBAAI,MAAM,IAAI,IAAI,EAAE;AAC3B,QAAI,CAAC,KAAM,QAAO;AAClB,QAAI,gBAAgB,KAAK,QAAQ,OAAO,KAAK;AAC7C,WAAO;AAAA,MAAC;AAAA;AAAA,QACP,KAAK,GAAG,sBAAI,cAAc,iBAAiB,aAAa;AAAA,QAAQ,KAAK;AAAA,QACrE,QAAO;AAAA,QAAK,OAAM;AAAA,QAAK,OAAO,YAAY,IAAI,OAAO,EAAE;AAAA,QAAI,OAAM;AAAA;AAAA,IAClE;AAAA,EACD;AAAA,EACA,OAAO,iBAAiB;AACvB,WAAO,SAAS,KAAK,cAAc;AAAA,EACpC;AAAA,EACA,0BAA0B;AACzB,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,OAAO,KAAK,MAAO,QAAO;AAC9B,QAAI,CAAC,OAAO,KAAK,OAAQ,QAAO;AAEhC,UAAM,WAAW,OAAO,OAAO,OAAO,sBAAsB,CAAC;AAC7D,8BAAQ,OAAO,UAAU,aAAW,CAAC,QAAQ,SAAS,CAAC,QAAQ,UAAU,CAAC;AAC1E,UAAM,OAAO,CAAC,GAAG,SAAS,CAAC,GAAG,MAAM,CAAC;AACrC,UAAM,sBAAsB,CAAC,YAC5B,uBAAC,YACA,uBAAC,YAAI,QAAQ,IAAK,GAClB,uBAAC,YAAI,QAAQ,SAAQ,KAAC,uBAAC,WAAM,OAAM,UAAO,QAAM,CAAQ,GACxD,uBAAC,YAAI,QAAQ,YAAW,KAAC,uBAAC,WAAM,OAAM,UAAO,MAAI,CAAQ,CAC1D;AAED,eAAW,WAAW,UAAU;AAC/B,UAAI,QAAQ,UAAU,GAAG;AACxB,aAAK,KAAK,oBAAoB,OAAO,CAAC;AAAA,MACvC,WAAW,QAAQ,cAAc,GAAG;AACnC,eAAO,KAAK,oBAAoB,OAAO,CAAC;AAAA,MACzC,OAAO;AACN,YAAI,KAAK,oBAAoB,OAAO,CAAC;AAAA,MACtC;AAAA,IACD;AACA,WAAO,uBAAC,aAAQ,OAAM,aACrB,uBAAC,iBACA,uBAAC,gBAAO,oBAAkB,GAC1B,uBAAC,WAAM,OAAM,2BACX,KACD,uBAAC,YAAG,uBAAC,QAAG,SAAS,KAAG,uBAAC,UAAK,OAAM,2BAAwB,uBAAC,eAAM,SAAO,CAAQ,CAAO,CAAK,CAC3F,CACD,GACA,uBAAC,WAAM,OAAM,WAAS,KAAK,QAAQ,IAAK,CACzC;AAAA,EACD;AAAA,EAIS,SAAS;AACjB,SAAK,WAAW,IAAI,gBAAgB,KAAK,MAAM,IAAI;AACnD,UAAM,SAAS,KAAK;AACpB,WAAO,YAAY,CAAC,CAAC,KAAK,MAAM,QAAQ;AACxC,WAAO,SAAS,KAAK,MAAM,UAAU,SAAS,KAAK,cAAc;AACjE,QAAI,KAAK,MAAM,KAAK,WAAW,OAAO,QAAQ;AAC7C,aAAO,UAAU,KAAK,MAAM,KAAK,MAAM;AAAA,IACxC;AAEA,WAAO,uBAAC,SAAI,OAAM,gBACjB,uBAAC,QAAG,OAAM,YACT,uBAAC,YAAG,uBAAC,YAAO,SAAS,KAAK,QAAQ,OAAM,UAAS,OAAO,SAAS,KAAK,SAAS,SAAS,EAAE,MAAI,QAE9F,CAAS,GACT,uBAAC,YAAG,uBAAC,YAAO,SAAS,KAAK,QAAQ,OAAM,UAAS,OAAO,SAAS,CAAC,KAAK,SAAS,SAAS,EAAE,MAAI,eAE/F,CAAS,CACV,GACC,KAAK,SACL,uBAAC,cAAW,QAAgB,UAAU,KAAK,MAAM,UAAU,UAAU,KAAK,QAAQ,IAElF,uBAAC,eAAY,QAAgB,UAAU,KAAK,MAAM,UAAU,UAAU,KAAK,QAAQ,GAEnF,CAAC,KAAK,OAAO,cAAc,4CAC1B,KAAK,MAAM,UACZ,uBAAC,SAAI,OAAM,oBACV,uBAAC,UAAG,GAAE,uBAAC,UAAG,GAAE,uBAAC,UAAG,GACf,KAAK,wBAAwB,GAC7B,KAAK,MAAM,SACb,CACD,CACD;AAAA,EACD;AACD;AAEA,MAAM,oBAAoB,cAAAA,QAAO,UAG9B;AAAA,EAHH;AAAA;AAMC,mBAIM,CAAC;AACP,mBAA+B;AAC/B,wBAAoC;AACpC,kBAAS;AAET;AAAA,oBAAW;AACX,qBAAY;AACZ,qBAKW;AACX,sBASW;AAQX,iBAAQ,MAAM;AACb,WAAK,WAAW;AAChB,WAAK,KAAK;AAAA,IACX;AACA,iBAAQ,MAAM,KAAK,WAAW,IAAI;AAClC,uBAAc,CAAC,OAAmB;AACjC,UAAI,CAAC,GAAG,UAAU;AACjB,cAAM,gBAAgB,KAAK,YAAY,MAAM,CAAC;AAC9C,aAAK,eAAe;AACpB,YAAI,kBAAkB,KAAK,YAAY,MAAM,CAAC,GAAG;AAChD,aAAG,eAAe;AAClB,aAAG,yBAAyB;AAAA,QAC7B;AAAA,MACD;AAAA,IACD;AAcA,mBAAU,CAAC,OAAsB;AAChC,YAAM,SAAS,KAAK;AACpB,cAAQ,GAAG,SAAS;AAAA,QACpB,KAAK;AAAA;AAAA,QACL,KAAK;AACJ,cAAI,KAAK,YAAY;AACpB,kBAAM,UAAW,KAAK,WAAW,MAAM,CAAC,MAAM,KAAK,QAAQ,kBAC1D,KAAK,WAAW,MAAM,CAAC,MAAM,KAAK,QAAQ;AAC3C,gBAAI,GAAG,YAAY,MAAM,SAAS;AACjC,kBAAI,OAAO,OAAO,aAAa,GAAG;AACjC,uBAAO,eAAe,KAAK,mBAAmB,CAAC;AAC/C,qBAAK,YAAY;AACjB,qBAAK,YAAY;AACjB,mBAAG,yBAAyB;AAC5B,mBAAG,eAAe;AAAA,cACnB,WAAW,KAAK,UAAU,GAAG;AAC5B,mBAAG,yBAAyB;AAC5B,mBAAG,eAAe;AAAA,cACnB;AAAA,YACD;AAAA,UACD;AACA;AAAA,QACD,KAAK;AACJ,cAAI,KAAK,YAAY;AACpB,mBAAO,cAAc;AACrB,kBAAM,YAAY,KAAK,KAAM,cAAc,gBAAgB;AAC3D,gBAAI,WAAW;AACd,wBAAU,YAAY,KAAK,IAAI,GAAG,OAAO,cAAc,KAAK,KAAK,OAAO,OAAO,cAAc,OAAO,GAAG,CAAC;AAAA,YACzG;AACA,iBAAK,YAAY;AACjB,eAAG,eAAe;AAAA,UACnB;AACA;AAAA,QACD,KAAK;AACJ,cAAI,KAAK,YAAY;AACpB,mBAAO,gBAAgB;AACvB,kBAAM,cAAc,KAAK,KAAM,cAAc,gBAAgB;AAC7D,gBAAI,aAAa;AAChB,0BAAY,YAAY,KAAK,IAAI,GAAG,OAAO,cAAc,KAAK,KAAK,OAAO,OAAO,cAAc,OAAO,GAAG,CAAC;AAAA,YAC3G;AACA,iBAAK,YAAY;AACjB,eAAG,eAAe;AAAA,UACnB;AACA;AAAA,QACD,KAAK;AAAA;AAAA,QACL,KAAK;AACJ,cAAI,GAAG,YAAY,MAAM,GAAG,SAAU;AACtC,cAAI,GAAG,UAAU,GAAG,QAAS;AAC7B,cAAI,CAAC,KAAK,YAAY;AACrB,gBAAI,KAAK,iBAAiB,GAAG;AAAA,YAE7B,WACC,KAAK,QAAQ,mBAAmB,KAAK,QAAQ,MAAM,WAClD,KAAK,QAAQ,MAAM,SAAS,MAAM,KAAK,CAAC,KAAK,QAAQ,QACrD;AACD,mBAAK,WAAW;AAAA,YACjB,WAAW,CAAC,KAAK,eAAe,GAAG;AAClC;AAAA,YACD;AACA,eAAG,yBAAyB;AAC5B,eAAG,eAAe;AAAA,UACnB,OAAO;AACN,kBAAM,SAAS,KAAK,OAAO,kBAAkB;AAC7C,gBAAI,WAAW,MAAM;AACpB,oBAAM,CAAC,MAAM,QAAQ,IAAI,OAAO,MAAM,GAAG;AACzC,mBAAK,aAAa,KAAK,WAAW,MAAM,MAAM,QAAQ;AAAA,YACvD,OAAO;AACN,mBAAK,eAAe,IAAI,KAAK,WAAW,MAAM,CAAC,GAAG,KAAK,WAAW,MAAM,CAAC,CAAC;AAC1E,mBAAK,OAAO,eAAe,EAAE;AAC7B,mBAAK,YAAY;AAAA,YAClB;AACA,iBAAK,YAAY;AACjB,eAAG,yBAAyB;AAC5B,eAAG,eAAe;AAAA,UACnB;AACA;AAAA,QACD,KAAK;AACJ,cAAI,GAAG,SAAS;AACf,mBAAO,GAAG,MAAM,OAAO,OAAO,KAAK,MAAM,CAAC;AAC1C,eAAG,yBAAyB;AAC5B,eAAG,eAAe;AAClB;AAAA,UACD;AAAA,MACD;AAAA,IACD;AACA,4BAAmB,MAAM;AACxB,UAAI,KAAK,QAAQ,mBAAmB,KAAK,QAAQ,aAAc;AAC/D,YAAM,UAAU,KAAK,QAAQ;AAC7B,YAAM,YAAY,KAAK,QAAQ,MAAM,YAAY,MAAM,OAAO,IAAI;AAClE,YAAM,QAAQ,KAAK,QAAQ,MAAM,MAAM,WAAW,OAAO;AAEzD,YAAM,YAAY,iDAAiD,KAAK,KAAK,IAAI,CAAC;AAClF,UAAI,WAAW;AACd,aAAK,OAAO,WAAW;AACvB,0CAAI,uBAAuB,SAAS,OAAO,EAAE,IAAI,EAAE,KAAK,UAAQ;AAC/D,gBAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,gBAAM,WAAW,MAAM,MAAM,QAAQ,SAAS,IAAI;AAClD,cAAI,KAAK,SAAS;AAEjB,kBAAM,aAAa,KAAK,QAAQ,MAAM,QAAQ,KAAK;AACnD,iBAAK,QAAQ,MAAM,MAAM,QAAQ,SAAS,IAAI,GAAG,YAAY,aAAa,MAAM,MAAM;AAAA,UACvF,OAAO;AACN,iBAAK,OAAO,OAAO,QAAQ;AAAA,UAC5B;AACA,gBAAM,QAAQ,MAAM,OAAO;AAC3B,cAAI,MAAM,WAAW,UAAU,GAAG;AACjC,kBAAM,eAAW,wBAAK,MAAM,MAAM,CAAC,CAAC;AACpC,iBAAK,OAAO,UAAU,QAAQ;AAAA,UAC/B;AACA,gBAAM,QAAQ,MAAM,OAAO;AAC3B,cAAI,SAAS,CAAC,MAAM,WAAW,UAAU,GAAG;AAC3C,iBAAK,OAAO,KAAK,OAAO,MAAM,QAAQ,WAAW,EAAE;AAAA,UACpD;AACA,eAAK,OAAO,WAAW;AACvB,eAAK,MAAM,WAAW;AAAA,QACvB,CAAC;AACD,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AAgBA,qBAAY,MAAM;AACjB,UAAI,KAAK,YAAY;AACpB,aAAK,gBAAgB;AACrB,YAAI,KAAK,UAAU;AAClB,eAAK,WAAW;AAChB,eAAK,KAAK;AAAA,QACX,OAAO;AACN,eAAK,YAAY;AAAA,QAClB;AACA,aAAK,QAAQ,MAAM;AACnB,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR;AACA,sBAAa,CAAC,cAAwB,eAAyC;AAC9E,YAAM,UAAU,KAAK;AACrB,UAAI,QAAQ,QAAQ;AACpB,UAAI,iBAAiB,QAAQ,kBAAkB;AAC/C,UAAI,eAAe,QAAQ,gBAAgB;AAE3C,UAAI,KAAK,YAAY;AACpB,YAAI,CAAC,cAAc;AAClB,cAAI,UAAU,KAAK,QAAQ,MAAM,QAAQ,MAAM,KAAK,WAAW,MAAM,CAAC,CAAC;AACvE,cAAI,UAAU,EAAG,WAAU,KAAK,QAAQ,MAAM;AAC9C,gBAAM,OAAO,KAAK,QAAQ,MAAM,MAAM,KAAK,WAAW,MAAM,CAAC,GAAG,OAAO;AACvE,cAAI,KAAK,WAAW,cAAc;AACjC,kBAAMC,SAAQ,KAAK,QAAQ,KAAK,WAAW,YAAY;AACvD,gBAAIA,UAAS,EAAG,WAAU,KAAK,WAAW,MAAM,CAAC,IAAIA;AAAA,UACtD;AACA,eAAK,WAAW,MAAM,CAAC,IAAI;AAAA,QAC5B;AACA,cAAM,CAAC,OAAO,GAAG,IAAI,KAAK,WAAW;AACrC,YAAI,kBAAkB,SAAS,kBAAkB,OAAO,gBAAgB,SAAS,gBAAgB,KAAK;AACrG,cAAI,CAAC,cAAc;AAClB,iBAAK,aAAa;AAClB,iBAAK,WAAW;AAAA,UACjB;AACA;AAAA,QACD;AACA,aAAK,gBAAgB;AACrB,gBAAQ,QAAQ;AAChB,yBAAiB,QAAQ,kBAAkB;AAC3C,uBAAe,QAAQ,gBAAgB;AAAA,MACxC;AAEA,UAAI,KAAK,UAAU;AAClB,aAAK,WAAW;AAChB,uBAAe;AAAA,MAChB;AAEA,WAAK,aAAa,MAAM,QAAQ,GAAG,QAAQ,WAAW;AAEtD,UAAI,QAAQ;AAEZ,UAAI,WAA0B;AAC9B,UAAI,eAAe;AACnB,UAAI,CAAC,aAAc,MAAK,UAAU,CAAC;AACnC,WAAK,YAAY;AAEjB,aAAO,QAAQ,MAAM,QAAQ;AAC5B,YAAI,UAAU,MAAM,QAAQ,MAAM,KAAK;AACvC,YAAI,UAAU,EAAG,WAAU,MAAM;AACjC,cAAM,OAAO,MAAM,MAAM,OAAO,OAAO;AAEvC,YAAI,CAAC,KAAK,KAAK,GAAG;AACjB,qBAAW;AACX,kBAAQ,UAAU;AAClB;AAAA,QACD;AAEA,YAAI,aAAa,QAAQ,SAAS,CAAC,gBAAgB,KAAK,QAAQ,QAAQ;AACvE,eAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,EAAE,UAAU,KAAK,OAAO,QAAQ,CAAC;AAAA,QACtE;AAEA,YAAI,aAAa,MAAM;AACtB,cAAI,CAAC,cAAc;AAClB,kBAAM,UAAU,KAAK,QAAQ,GAAG;AAChC,gBAAI,UAAU,WAAW,IAAI,KAAK,MAAM,GAAG,OAAO,EAAE,KAAK,IAAI,KAAK,KAAK;AACvE,gBAAI,QAAQ,SAAS,MAAM,KAAK,QAAQ,SAAS,MAAM,GAAG;AACzD,wBAAU,QAAQ,MAAM,GAAG,EAAE;AAAA,YAC9B;AACA,gBAAI,QAAQ,SAAS,GAAG,GAAG;AAC1B,oBAAM,aAAa,QAAQ,YAAY,IAAI;AAC3C,kBAAI,cAAc,GAAG;AACpB,0BAAU,QAAQ,MAAM,aAAa,GAAG,EAAE;AAAA,cAC3C;AAAA,YACD;AACA,iBAAK,QAAQ,KAAK;AAAA,cACjB;AAAA,cACA,SAAS;AAAA,cACT;AAAA,YACD,CAAC;AAAA,UACF;AACA,qBAAW;AACX;AAAA,QACD;AAEA,cAAM,qBAAsB,mBAAmB,eAAe,UAAU,UAAU;AAClF,YAAI,QAAQ,OAAO,MAAM,QAAQ,KAAK;AACtC,YAAI,SAAS,kBAAkB,gBAAgB,oBAAoB;AAElE,cAAI,OAA6B;AACjC,gBAAM,SAAS,KAAK,YAAY,EAAE,KAAK;AAEvC,cAAI,OAAO,WAAW,UAAU,GAAG;AAClC,mBAAO;AAAA,UACR,WAAW,OAAO,WAAW,GAAG,GAAG;AAClC,mBAAO;AAAA,UACR,WACC,CAAC,UAAU,OAAO,WAAW,QAAQ,KAAK,OAAO,WAAW,SAAS,MACpE,SAAS,KAAK,WAAW,QAAQ,MAAM,SAAS,KAAK,WAAW,aAAa,KAC9E,OAAO,WAAW,YAAY,KAAK,OAAO,WAAW,gBAAgB,GACpE;AACD,mBAAO;AAAA,UACR,WACC,OAAO,WAAW,MAAM,KAAK,OAAO,WAAW,MAAM,KACrD,OAAO,SAAS,SAAS,GACxB;AACD,mBAAO;AAAA,UACR,OAAO;AACN,mBAAO;AACP,kBAAM,UAAU,KAAK,QAAQ,GAAG;AAChC,gBAAI,WAAW,GAAG;AACjB,kBAAI,iBAAiB,QAAQ,SAAS;AACrC,uBAAO;AACP,wBAAQ,QAAQ,UAAU;AAAA,cAC3B,OAAO;AACN,sBAAM,QAAQ;AACd,oBAAI,KAAK,OAAO,UAAU,CAAC,MAAM,OAAO,KAAK,OAAO,UAAU,CAAC,MAAM,KAAK;AACzE,yBAAO;AAAA,gBACR;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,OAAO,eAAe,SAAU,cAAa,eAAe;AAChE,eAAK,YAAY;AAAA,YAChB;AAAA,YAAU;AAAA,YAAM,WAAW,CAAC,OAAO,GAAG;AAAA,YAAG,WAAW;AAAA,UACrD;AACA,cAAI,WAAY,MAAK,YAAY;AAAA,QAClC;AAEA,gBAAQ,UAAU;AAAA,MACnB;AACA,UAAI,CAAC,cAAc;AAClB,cAAM,MAAM,MAAM,SAAS,MAAM,IAAI,MAAM,SAAS,IAAI,MAAM;AAC9D,cAAM,UAAU,KAAK,OAAO,KAAK,IAAI;AACrC,YAAI,KAAK,QAAQ,QAAQ;AACxB,eAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,EAAE,UAAU;AAAA,QACjD;AAEA,gBAAQ,MAAM,SAAS,GAAG,UAAU,GAAG;AAAA,MACxC;AACA,WAAK,YAAY;AAAA,IAClB;AA+CA,wBAAe,CAAC,MAAqB,MAAc,aAAsB;AACxE,UAAI,SAAS,MAAM;AAClB,aAAK,YAAY;AACjB,aAAK,YAAY;AAAA,MAClB,WAAW,CAAC,MAAM;AACjB,aAAK,UAAU,KAAK,WAAY,MAAM,EAAE;AAAA,MACzC,OAAO;AACN,aAAK,UAAU,MAAuB,MAAM,QAAQ;AAAA,MACrD;AAAA,IACD;AAkHA,wBAAe,CAAC,OAAc;AAC7B,YAAM,WAAW,GAAG;AACpB,WAAK,SAAS,SAAS;AACvB,WAAK,OAAO,OAAO,KAAK,QAAQ,KAAK;AACrC,WAAK,QAAQ,QAAQ,KAAK,OAAO,OAAO,KAAK,MAAM;AAGnD,WAAK,WAAW;AAAA,IACjB;AA6DA,wBAAe,CAAC,OAAc;AAC7B,YAAM,SAAS,GAAG;AAClB,YAAM,IAAI,SAAS,OAAO,SAAS,GAAG;AACtC,UAAI,KAAK,YAAY,SAAS,OAAO,MAAM;AAC1C,aAAK,aAAa;AAClB,aAAK,YAAY;AACjB;AAAA,MACD;AACA,WAAK,YAAY;AAAA,QAChB,SAAS;AAAA,QACT,UAAU;AAAA,QACV,MAAM,OAAO;AAAA,QACb,WAAW;AAAA,QACX,OAAO,CAAC,GAAG,CAAC;AAAA,QACZ,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AACA,sBAAa,MAAM;AAClB,UAAI,KAAK,QAAQ,SAAS,CAAC,KAAK,QAAQ,MAAM,SAAS,MAAM,GAAG;AAC/D,aAAK,QAAQ,SAAS,KAAK,QAAQ,MAAM,SAAS,IAAI,IAAI,OAAO;AAAA,MAClE;AACA,YAAM,MAAM,KAAK,QAAQ,UAAU,SAAS,IAAI,KAAK,QAAQ,MAAM;AACnE,WAAK,QAAQ,kBAAkB,KAAK,GAAG;AACvC,WAAK,QAAQ,MAAM;AACnB,WAAK,YAAY;AAAA,QAChB,SAAS,KAAK,OAAO,KAAK,IAAI;AAAA,QAC9B,UAAU,KAAK,QAAQ;AAAA,QACvB,MAAM;AAAA,QACN,WAAW;AAAA,QACX,OAAO,CAAC,KAAK,GAAG;AAAA,QAChB,cAAc;AAAA,MACf,CAAC;AAAA,IACF;AACA,yBAAgB,CAAC,OAAc;AAC9B,UAAI,CAAE,GAAG,cAA8B,UAAW;AAClD,WAAK,YAAY;AACjB,UAAI,SAAS,gBAAgB,gBAAgB,SAAS,gBAAgB,aAAa;AAClF,QAAC,GAAG,cAAsB,yBAAyB;AAAA,MACpD;AACA,WAAK,YAAY;AAAA,IAClB;AAuDA,2BAAkB,MAAM;AACvB,UAAI,KAAK,WAAW;AACnB,aAAK,WAAW,KAAK,UAAU,QAAQ;AACvC,aAAK,YAAY;AAAA,MAClB;AAAA,IACD;AAIA,mBAAU,CAAC,OAAc;AACxB,WAAK,QAAQ,OAAO;AACpB,eAAS,YAAY,MAAM;AAC3B,YAAM,SAAS,IAAI;AACnB,UAAI,QAAQ;AACX,eAAO,YAAY;AACnB,eAAO,aAAa;AAAA,MACrB;AAAA,IACD;AAAA;AAAA,EAhsBA;AAAA,SAAO,gBAAgB,QAAQ,QAAQ,IAAI;AAAA;AAAA,EA6B3C,OAAO,OAAe,UAAoB;AACzC,QAAI,QAAQ,EAAG,QAAO;AACtB,QAAI,UAAU,EAAG,QAAO;AACxB,UAAM,WAAW,KAAK,QAAQ,MAAM,MAAM,GAAG,KAAK;AAClD,SAAK,aAAa,QAAQ,YAAY,CAAC,SAAS,SAAS,IAAI,IAAI,WAAW,OAAO;AACnF,WAAO,KAAK,aAAa;AAAA,EAC1B;AAAA,EAgBA,iBAAiB;AAChB,UAAM,WAAW,KAAK,WAAW;AACjC,SAAK,WAAW,MAAM,IAAI;AAC1B,QAAI,KAAK,WAAW;AAEnB,UAAI,KAAK,UAAU,cAAc,SAAU,QAAO,CAAC,CAAC,KAAK;AACzD,UAAI,KAAK,QAAQ,mBAAmB,KAAK,QAAQ,cAAc;AAC9D,cAAM,QAAQ,KAAK,sBAAsB;AACzC,YAAI,MAAO,MAAK,QAAQ,kBAAkB,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7D;AAAA,IACD;AACA,WAAO,CAAC,CAAC,KAAK;AAAA,EACf;AAAA,EAyHA,qBAAqB;AACpB,QAAI,CAAC,KAAK,WAAY,QAAO;AAC7B,WAAO,KAAK,QAAQ,MAAM,MAAM,KAAK,WAAW,MAAM,CAAC,GAAG,KAAK,WAAW,MAAM,CAAC,CAAC;AAAA,EACnF;AAAA,EACA,kBAAkB;AACjB,QAAI,KAAK,YAAY;AACpB,UAAI,KAAK,WAAW,SAAS,WAAW;AACvC,cAAM,QAAQ,KAAK,mBAAmB;AACtC,YAAI,KAAC,wBAAK,KAAK,GAAG;AACjB,eAAK,eAAe,KAAK,OAAO,mBAAmB,IAAI,KAAK,WAAW,MAAM,CAAC,GAAG,KAAK,WAAW,MAAM,CAAC,CAAC;AAAA,QAC1G;AAAA,MACD;AACA,WAAK,aAAa;AAAA,IACnB;AAAA,EACD;AAAA,EA4JA,YAAY,OAA4B;AACvC,QAAI,KAAK,cAAc,CAAC,MAAO;AAC/B,UAAM,SAAS,KAAK;AACpB,QAAI,OAAO,SAAU;AAErB,QAAI,CAAC,OAAO;AACX,UAAI,CAAC,KAAK,WAAW,KAAM;AAE3B,YAAM,QAAQ,KAAK,sBAAsB;AACzC,UAAI,CAAC,MAAO;AACZ,YAAM,EAAE,MAAM,SAAS,IAAI,KAAK;AAEhC,UAAI,eAAe,KAAK,QAAQ,MAAM,OAAO,MAAM,CAAC,CAAC;AACrD,UAAI,iBAAiB,IAAK,iBAAgB,KAAK,QAAQ,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;AAChF,cAAQ;AAAA,QACP,SAAS,KAAK,OAAO,MAAM,CAAC,CAAC;AAAA,QAC7B;AAAA,QACA;AAAA,QACA,WAAW,KAAK,UAAU;AAAA,QAC1B;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,SAAK,aAAa;AAElB,QAAI,MAAM,SAAS,aAAa,MAAM,SAAS,SAAS;AACvD,WAAK,YAAY;AACjB;AAAA,IACD;AAEA,UAAM,QAAQ,KAAK,QAAQ,MAAM,MAAM,MAAM,MAAM,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACrE,WAAO,cAAc,MAAM,MAAM,MAAM,UAAU,KAAK;AACtD,SAAK,YAAY;AACjB,SAAK,QAAQ,kBAAkB,MAAM,MAAM,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AAC7D,SAAK,YAAY;AAAA,EAClB;AAAA,EACA,eAAe;AACd,QAAI,CAAC,KAAK,WAAY;AACtB,UAAM,EAAE,MAAM,IAAI,KAAK;AACvB,UAAM,SAAS,KAAK;AACpB,UAAM,QAAQ,KAAK,QAAQ,MAAM,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAEzD,WAAO,eAAe,KAAK;AAC3B,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EAClB;AAAA,EAWA,wBAAiD;AAChD,UAAM,YAAY,KAAK;AACvB,QAAI,CAAC,WAAW,UAAW,QAAO;AAElC,QAAI,CAAC,OAAO,GAAG,IAAI,UAAU;AAC7B,QAAI,SAAS,KAAK,QAAQ,MAAM,MAAM,OAAO,GAAG,EAAE,YAAY;AAC9D,QAAI,OAAO,SAAS,IAAI,GAAG;AAC1B,aAAO;AACP,eAAS,OAAO,MAAM,GAAG,EAAE;AAAA,IAC5B;AAEA,YAAQ,UAAU,MAAM;AAAA,MACxB,KAAK,WAAW;AAQf,YAAI,OAAO,SAAS,GAAG,GAAG;AACzB,mBAAS,OAAO,MAAM,GAAG,EAAE;AAC3B;AAAA,QACD;AAEA,YAAI,OAAO,SAAS,MAAM,KAAK,OAAO,SAAS,MAAM,GAAG;AACvD,mBAAS,OAAO,MAAM,GAAG,EAAE;AAC3B,iBAAO;AAAA,QACR;AAEA,YAAI,OAAO,SAAS,GAAG,GAAG;AACzB,gBAAM,aAAa,OAAO,YAAY,IAAI;AAC1C,cAAI,cAAc,GAAG;AACpB,oBAAQ,QAAQ,aAAa;AAC7B;AAAA,UACD;AAAA,QACD;AAEA,eAAO,CAAC,OAAO,GAAG;AAAA,MACnB;AAAA,MACA,KAAK,QAAQ;AAMZ,YAAI,OAAO,WAAW,GAAG,EAAG;AAC5B,eAAO,CAAC,OAAO,GAAG;AAAA,MACnB;AAAA,MACA,KAAK,WAAW;AACf,YAAI,OAAO,WAAW,GAAG,GAAG;AAC3B;AACA,cAAI,OAAO,SAAS,GAAG,GAAG;AACzB;AACA,qBAAS,OAAO,MAAM,GAAG,EAAE;AAAA,UAC5B;AACA,cAAI,OAAO,SAAS,GAAG,GAAG;AACzB;AAAA,UACD;AACA,iBAAO,CAAC,OAAO,GAAG;AAAA,QACnB;AACA,YAAI,CAAC,OAAO,WAAW,UAAU,EAAG,QAAO;AAC3C,iBAAS,OAAO,WAAW,WAAW,IAAI,IAAI;AAC9C,eAAO,CAAC,OAAO,GAAG;AAAA,MACnB;AAAA,MACA,KAAK,QAAQ;AACZ,YAAI,CAAC,OAAO,WAAW,GAAG,EAAG,QAAO;AACpC,iBAAS,OAAO,WAAW,IAAI,IAAI,IAAI;AACvC,eAAO,CAAC,OAAO,GAAG;AAAA,MACnB;AAAA,IACA;AACA,WAAO,CAAC,OAAO,GAAG;AAAA,EACnB;AAAA,EACA,UAAU,MAAqB,MAAc,UAAmB;AAC/D,UAAM,QAAQ,KAAK;AACnB,QAAI,CAAC,MAAO;AAEZ,QAAI,SAAS,MAAM,QAAQ,SAAS,WAAW;AAC9C,WAAK,QAAQ,MAAM,MAAM,MAAM,CAAC,GAAG,MAAM,MAAM,CAAC,CAAC;AACjD,WAAK,WAAW,OAAO,IAAI;AAC3B;AAAA,IACD;AAEA,YAAQ,MAAM;AAAA,MACd,KAAK,WAAW;AACf,cAAM,MAAM,KAAK,OAAO,KAAK,MAAM,QAAQ,MAAM;AAAA,UAChD,SAAS;AAAA,UACT,OAAO,CAAC;AAAA,QACT;AACA,aAAK,OAAO,cAAc,KAAK,IAAI;AACnC,aAAK,WAAW,MAAM,QAAQ;AAC9B,aAAK,WAAW,OAAO,IAAI;AAC3B;AAAA,MACD;AAAA,MACA,KAAK,WAAW;AACf,aAAK,OAAO,KAAK,MAAM,QAAQ,EAAE,UAAU;AAC3C,aAAK,WAAW,MAAM,QAAQ;AAC9B,aAAK,WAAW,OAAO,IAAI;AAC3B;AAAA,MACD;AAAA,IACA;AAAA,EACD;AAAA,EACA,YAAY,OAAe;AAC1B,QAAI,CAAC,KAAK,QAAQ,KAAK,GAAG;AACzB,UAAI,KAAK,YAAY,aAAa,OAAO;AACxC,eAAO,KAAK,WAAW;AAAA,MACxB;AACA,aAAO,CAAC,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,MAAM;AAAA,IAC7D;AACA,UAAM,QAAQ,KAAK,QAAQ,KAAK,EAAE;AAClC,UAAM,MAAM,KAAK,QAAQ,QAAQ,CAAC,EAAE;AACpC,WAAO,CAAC,OAAO,GAAG;AAAA,EACnB;AAAA,EAUA,WAAW,OAAe;AACzB,UAAM,SAAS,KAAK;AACpB,UAAM,EAAE,KAAK,IAAI;AACjB,QAAI,CAAC,KAAM;AAEX,QAAI,UAAU,0BAAM,UAAU,OAAO,KAAK,KAAK,GAAG,OAAO,KAAK,CAAC,KAAK,MAAM;AAC1E,UAAM,CAAC,OAAO,GAAG,IAAI,KAAK,YAAY,KAAK;AAC3C,QAAI,SAAS,UAAU,KAAK,QAAQ,MAAM,UAAU,CAAC,KAAK,QAAQ,MAAM,SAAS,MAAM,GAAG;AACzF,iBAAW,KAAK,QAAQ,MAAM,SAAS,IAAI,IAAI,OAAO,UAAU;AAAA,IACjE;AACA,SAAK,eAAe,SAAS,OAAO,KAAK,QAAQ,QAAQ,MAAM;AAG/D,QAAI,CAAC,KAAK,QAAQ,KAAK,GAAG;AACzB,WAAK,WAAW;AAChB,WAAK,KAAK;AAAA,IACX,OAAO;AACN,UAAI,KAAK,QAAQ,QAAQ,CAAC,GAAG;AAC5B,aAAK,QAAQ,QAAQ,CAAC,EAAE,QAAQ,QAAQ,QAAQ;AAAA,MACjD;AAGA,WAAK,WAAW;AAAA,IACjB;AAAA,EACD;AAAA,EACA,QAAQ,MAAc,OAAe,KAAa,iBAAiB,OAAO,eAAe,QAAQ,KAAK,QAAQ;AAC7G,UAAM,UAAU,KAAK;AAGrB,YAAQ,MAAM;AACd,YAAQ,kBAAkB,OAAO,GAAG;AACpC,aAAS,YAAY,cAAc,OAAO,IAAI;AAE9C,SAAK,KAAK;AAAA,EACX;AAAA,EACA,eAAe,MAAc,OAAe,KAAa,iBAAiB,OAAO,eAAe,QAAQ,KAAK,QAAQ;AACpH,UAAM,UAAU,KAAK;AACrB,UAAM,QAAQ,QAAQ;AACtB,YAAQ,QAAQ,MAAM,MAAM,GAAG,KAAK,IAAI,OAAO,MAAM,MAAM,GAAG;AAC9D,YAAQ,kBAAkB,gBAAgB,YAAY;AACtD,SAAK,KAAK;AAAA,EACX;AAAA,EACA,OAAO;AACN,SAAK,OAAO,OAAO,KAAK,QAAQ,KAAK;AACrC,SAAK,MAAM,WAAW;AAAA,EACvB;AAAA,EACS,oBAAoB;AAC5B,SAAK,UAAU,KAAK,KAAM,uBAAuB,aAAa,EAAE,CAAC;AACjE,SAAK,eAAe,KAAK,KAAM,uBAAuB,cAAc,EAAE,CAAC;AAEvE,SAAK,SAAS,KAAK,MAAM;AACzB,UAAM,eAAe,KAAK,OAAO,OAAO,KAAK,MAAM;AACnD,SAAK,QAAQ,QAAQ;AACrB,SAAK,WAAW;AAChB,eAAW,MAAM,KAAK,WAAW,CAAC;AAAA,EACnC;AAAA,EACS,uBAAuB;AAC/B,SAAK,UAAU;AACf,SAAK,eAAe;AAAA,EACrB;AAAA,EA0CA,cAAc;AACb,SAAK,YAAY;AACjB,UAAM,gBAAgB,KAAK,KAAM,cAAc,gBAAgB;AAC/D,QAAI,cAAe,eAAc,YAAY;AAAA,EAC9C;AAAA,EACA,gBAAgB;AACf,QAAI,KAAK,WAAW;AACnB,aAAO,KAAK,KAAK,OAAO,cAAc,EAAE;AAAA,IACzC;AACA,WAAO;AAAA,EACR;AAAA,EAEA,cAAc,KAAqB,GAAW;AAC7C,UAAM,SAAS,KAAK;AACpB,UAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,IAAI,OAAO;AAElD,UAAM,cAAc;AAAA,MACnB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA;AAAA,IACN;AACA,UAAM,SAAS,YAAa,IAAI,UAAU,QAAQ,UAAU,GAAW;AAEvE,WAAO,uBAAC,YAAO,OAAM,sBAAqB,MAAK,WAAU,OAAO,GAAG,SAAS,KAAK,gBAChF,uBAAC,UAAK,OAAM,gBACX,uBAAC,eAAM,OAAK,GAAS,IAAI,SAAS,OAAO,YAC1C,GACA,uBAAC,UAAK,OAAM,gBACX,uBAAC,eAAM,OAAK,GAAS,IAAI,QAAQ,QAAQ,QAC1C,GACC,OAAO,QAAQ,IACf,uBAAC,UAAK,OAAM,gBACX,uBAAC,eAAM,MAAI,GAAS,WAAW,eAAe,IAAI,YAAY,QAAQ,oBAAoB,QAAQ,MAAM,CAAC,CAAC,CAC3G,IACG,OAAO,cAAc,GAAG,IAC3B,uBAAC,UAAK,OAAM,gBACX,uBAAC,eAAM,UAAQ,GAAS,WAAW,eAAe,OAAO,UAAU,GAAG,CAAC,CACxE,IAEA,uBAAC,UAAK,OAAM,gBACX,uBAAC,eAAM,QAAM,GAAS,MACvB,CAEF;AAAA,EACD;AAAA,EAEA,YAAY,KAAqB,GAAW;AAC3C,UAAM,SAAS,KAAK;AAGpB,WAAO,uBAAC,YAAO,OAAM,oBAAmB,MAAK,SAAQ,OAAO,GAAG,SAAS,KAAK,gBAC3E,SAAS,gBAAgB,KAAK,MAAM,CACtC;AAAA,EACD;AAAA,EAOA,UAAU;AACT,WAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,GAAG,WAAW;AAAA,EAC1D;AAAA,EAUA,SAAS;AACR,UAAM,SAAS,KAAK,MAAM;AAC1B,UAAM,qBAAqB,OAAO,OAAO,IAAI,KAAK;AAClD,WAAO,uBAAC,aACP,uBAAC,WACA,uBAAC,YAAO,OAAM,UAAS,SAAS,KAAK,WACpC,uBAAC,OAAE,OAAM,cAAa,eAAW,MAAC,GAAI,OACvC,GAAS,KACT,uBAAC,WAAM,OAAM,qBACZ,uBAAC,WAAM,MAAK,YAAW,MAAK,UAAS,UAAU,KAAK,cAAc,GAAE,oBACrE,CACD,GACA,uBAAC,SAAI,OAAM,qBACV;AAAA,MAAC;AAAA;AAAA,QACA,OAAM;AAAA,QAAsB,OAAO,gBAAgB,OAAO,SAAS,SAAS,OAAO;AAAA,QACnF,SAAS,KAAK;AAAA,QAAO,eAAe,KAAK;AAAA,QAAa,SAAS,KAAK;AAAA,QAAO,WAAW,KAAK;AAAA,QAC3F,SAAS,KAAK;AAAA,QAAO,UAAU,KAAK;AAAA,QACpC,aAAY;AAAA,QAAsD,UAAU,OAAO;AAAA;AAAA,IACpF,GACA;AAAA,MAAC;AAAA;AAAA,QACA,OAAM;AAAA,QAAmC,UAAU;AAAA,QAAI,eAAW;AAAA,QAClE,OAAO,gBAAgB,OAAO,SAAS,SAAS,OAAO;AAAA;AAAA,IACxD,GACA,uBAAC,SAAI,OAAM,kBACT,KAAK,QAAQ,MAAM,GAAG,EAAE,EAAE;AAAA,MAAI,UAC9B,uBAAC,QAAG,OAAO,OAAO,KAAK,UAAU,EAAE,0BAA0B;AAAA,IAC9D,GACC,OAAO,OAAO,KAAK,CAAC,CAAC,KAAK,QAAQ,UAAU,uBAAC,QAAG,OAAO,OAAO,KAAK,QAAQ,IAAI,EAAE,MAAM,GACvF,KAAK,QAAQ,IAAI,CAAC,MAAM,MAAM;AAC9B,UAAI,CAAC,KAAK,QAAS,QAAO;AAC1B,YAAM,MAAM,OAAO,KAAK,CAAC;AACzB,UAAI,CAAC,IAAK,QAAO;AACjB,YAAM,aAAa,MAAM,IAAI,IAAI,KAAK,QAAQ,IAAI,CAAC,EAAE;AACrD,YAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,KAAK,OAAO;AACnD,YAAM,MAAM,sBAAI,kBAAkB,QAAQ,EAAE;AAC5C,UAAI,CAAC,IAAK,QAAO;AAEjB,YAAM,MAAM,KAAK,MAAM,MAAM,EAAE,IAAI;AACnC,YAAM,OAAQ,MAAM,KAAM;AAC1B,YAAM,YAAY,8BAA8B,sBAAI,cAAc,qDAAqD,IAAI,OAAO,GAAG;AAErI,YAAM,YAAY,IAAI,QAAQ,sBAAI,YAAY,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC;AAE5E,UAAI,OAAO,QAAQ;AAClB,eAAO,uBAAC,SAAI,OAAO,OAAO,aAAa,CAAC,yEACvC,uBAAC,aAAI,uBAAC,UAAK,OAAM,SAAQ,OAAO,WAAW,CAAO,GACjD,QAAQ,MAAM,IAAI,UAAQ,uBAAC,aAAK,WAAW,eAAe,IAAI,CAAE,CAAM,GACvE,uBAAC,aAAI,uBAAC,UAAK,OAAM,YAAW,OAAO,WAAW,CAAO,CACtD;AAAA,MACD;AACA,aAAO,CAAC;AAAA,QAAC;AAAA;AAAA,UACR,OACC,OAAO,aAAa,CAAC,uHAErB,sBAAI,qBAAqB,KAAK,OAAO,GAAG;AAAA;AAAA,QAGzC,uBAAC,aAAK,QAAQ,MAAM,IAAI,UAAQ,WAAW,eAAe,IAAI,CAAC,GAAE,uBAAC,UAAK,OAAM,YAAW,OAAO,WAAW,CAAO;AAAA,MAClH,GAAQ,uBAAC,SAAI,OAAO,OAAO,aAAa,kBAAkB,oCACxD,KAAK,YAAY,KAAK,CAAC,CACzB,GAAQ,uBAAC,SAAI,OAAO,OAAO,aAAa,kBAAkB,sCACxD,KAAK,cAAc,KAAK,CAAC,CAC3B,CAAM;AAAA,IACP,CAAC,GACA,OAAO,OAAO,KAAK,EAAE,KAAK,cAAc,KAAK,WAAW,YAAY,KAAK,QAAQ,WACjF,uBAAC,SAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,WAAW,OAAO,SAAS,KAAK,GAAG,0BACvE,uBAAC,YAAO,OAAM,UAAS,SAAS,KAAK,cACpC,uBAAC,OAAE,OAAM,cAAa,eAAW,MAAC,GAAI,iBACvC,CACD,GAEA,KAAK,YAAY,WAAW,QAC5B;AAAA,MAAC;AAAA;AAAA,QACA,OAAO,qCAAqC,KAAK,WAAW,IAAI;AAAA,QAChE,OAAO,OAAO,KAAK,WAAW,UAAU,EAAE,WAAW,OAAO,SAAS,KAAK,EAAE;AAAA;AAAA,IAC5E,CAEH,GACC,KAAK,cACL;AAAA,MAAC;AAAA;AAAA,QACA,OAAM;AAAA,QACN,OAAO,QAAQ,KAAK,QAAQ,KAAK,WAAW,QAAQ,GAAG,WAAW,KAAK,QAAQ,IAAI,MAAM,EAAE;AAAA,QAC3F,UAAU,KAAK;AAAA;AAAA,MAEf,uBAAC,YAAO,OAAM,sBAAqB,SAAS,KAAK,aAC/C,CAAC,OAAO,UAAU,uBAAC,aAAI,KAAG,GAAO,KAAC,uBAAC,OAAE,OAAM,eAAc,eAAW,MAAC,GAAI,QAC3E;AAAA,MACC,KAAK,WAAW,SAAS,UACzB,uBAAC,YAAS,QAAgB,KAAK,KAAK,OAAO,KAAK,KAAK,WAAW,QAAQ,GAAG,UAAU,KAAK,iBAAiB,IACxG,KAAK,WAAW,SAAS,YAC5B,uBAAC,eAAY,QAAgB,KAAK,KAAK,OAAO,KAAK,KAAK,WAAW,QAAQ,GAAG,UAAU,KAAK,iBAAiB,IAE9G;AAAA,QAAC;AAAA;AAAA,UACA,QAAQ,OAAO;AAAA,UAAQ,aAAa,OAAO;AAAA,UAC3C,WAAW,KAAK,cAAc;AAAA,UAAG,UAAU,KAAK;AAAA;AAAA,MACjD;AAAA,IAEF,CAEF,CACD;AAAA,EACD;AACD;AAEA,MAAM,mBAAmB,cAAAD,QAAO,UAE7B;AAAA,EAFH;AAAA;AAGC,wBAA8B;AAC9B,qBAAY;AACZ,oBAAW,CAAC,OAAc;AACzB,YAAM,EAAE,OAAO,IAAI,KAAK;AACxB,UAAI,OAAO,SAAU;AACrB,YAAM,SAAS,GAAG;AAClB,YAAM,CAAC,SAAS,CAAC,KAAK,OAAO,SAAS,IAAI,MAAM,GAAG;AACnD,YAAM,WAAW,SAAS,CAAC;AAC3B,YAAM,OAAO;AACb,UAAI,CAAC,OAAO,SAAS,OAAO,cAAc,OAAO,WAAW,aAAa,YAAY,OAAO,WAAW,SAAS,MAAM;AACrH,aAAK,YAAY,IAAI;AACrB;AAAA,MACD;AACA,WAAK,YAAY;AAAA,QAChB;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AACA,qBAAY,CAAC,OAAc;AAC1B,YAAM,SAAS,GAAG;AAClB,YAAM,IAAI,SAAS,OAAO,KAAK;AAC/B,YAAM,EAAE,OAAO,IAAI,KAAK;AACxB,aAAO,UAAU,CAAC;AAClB,UAAI,OAAO,YAAY;AACtB,aAAK,YAAY;AAAA,UAChB,UAAU,OAAO,KAAK;AAAA,UACtB,MAAM;AAAA,QACP,CAAC;AAAA,MACF;AACA,WAAK,gBAAgB;AACrB,SAAG,eAAe;AAAA,IACnB;AACA,uBAAc,CAAC,OAAc;AAC5B,YAAM,EAAE,OAAO,IAAI,KAAK;AACxB,YAAM,WAAW,OAAO,YAAY;AACpC,aAAO,YAAY;AACnB,UAAI,OAAO,cAAc,aAAa,QAAW;AAChD,aAAK,YAAY;AAAA,UAChB;AAAA,UACA,MAAM;AAAA,QACP,CAAC;AAAA,MACF;AACA,WAAK,gBAAgB;AACrB,SAAG,eAAe;AAAA,IACnB;AA0JA,2BAAkB,MAAM;AACvB,WAAK,MAAM,OAAO,KAAK;AACvB,WAAK,MAAM,WAAW;AACtB,WAAK,YAAY;AAAA,IAClB;AAQA,wBAAe,CAAC,MAAqB,MAAc,MAAe,YAAsB;AACvF,YAAM,EAAE,OAAO,IAAI,KAAK;AACxB,WAAK,eAAe;AACpB,UAAI,SAAS,MAAM;AAClB,aAAK,YAAY;AACjB,aAAK,YAAY;AAAA,MAClB;AAAE,UAAI,CAAC,MAAM;AACZ,eAAO,eAAe,EAAE;AACxB,aAAK,YAAY;AACjB,aAAK,YAAY;AAAA,MAClB,OAAO;AACN,cAAM,WAAW,OAAO,WAAY;AACpC,cAAM,MAAO,OAAO,KAAK,QAAQ,MAAM,EAAE,SAAS,IAAI,OAAO,CAAC,EAAE;AAChE,gBAAQ,MAAM;AAAA,UACd,KAAK;AACJ,mBAAO,cAAc,KAAK,IAAI;AAC9B,iBAAK,YAAY;AAAA,cAChB;AAAA,cACA,MAAM,UAAU,YAAY;AAAA,YAC7B,CAAC;AACD;AAAA,UACD,KAAK;AACJ,gBAAI,SAAS,gBAAgB,OAAO,OAAO,EAAG,QAAO;AACrD,gBAAI,UAAU;AACd,iBAAK,YAAY;AAAA,cAChB;AAAA,cACA,MAAM,UAAU,YAAY;AAAA,YAC7B,CAAC;AACD;AAAA,UACD,KAAK;AACJ,gBAAI,OAAO;AACX,iBAAK,YAAY;AAAA,cAChB;AAAA,cACA,MAAM,UAAU,YAAY;AAAA,YAC7B,CAAC;AACD;AAAA,UACD,KAAK;AACJ,gBAAI,MAAM;AAET,oBAAM,IAAI,SAAS,IAAI,IAAI;AAC3B,kBAAI,IAAI,MAAM,CAAC,GAAG;AACjB,oBAAI,MAAM,CAAC,IAAI;AAEf,oBAAI,MAAM,IAAI,MAAM,SAAS,GAAG;AAC/B,yBAAO,IAAI,MAAM,SAAS,KAAK,CAAC,IAAI,MAAM,IAAI,MAAM,SAAS,CAAC,GAAG;AAChE,wBAAI,MAAM,IAAI;AAAA,kBACf;AAAA,gBACD;AAEA,oBAAI,IAAI,MAAM,SAAS,KAAK,IAAI,IAAI,MAAM,SAAS,GAAG;AACrD,sBAAI,MAAM,CAAC,IAAI,IAAI,MAAM,IAAI;AAAA,gBAC9B;AAAA,cACD;AAAA,YACD,WAAW,IAAI,MAAM,SAAS,IAAI,GAAG;AACpC,kBAAI,MAAM,OAAO,IAAI,MAAM,QAAQ,IAAI,GAAG,CAAC;AAAA,YAC5C,OAAO;AACN,uBAAS,IAAI,GAAG,IAAI,IAAI,MAAM,SAAS,GAAG,KAAK;AAC9C,oBAAI,CAAC,IAAI,MAAM,CAAC,GAAG;AAClB,sBAAI,MAAM,CAAC,IAAI;AACf;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AACA,gBAAI,IAAI,MAAM,WAAW,KAAK,IAAI,MAAM,MAAM,OAAO,GAAG;AACvD,mBAAK,YAAY;AAAA,gBAChB;AAAA,gBACA,MAAM,UAAU,SAAS;AAAA,cAC1B,CAAC;AAAA,YACF,OAAO;AACN,kBAAI,OAAO,OAAO,OAAO;AACxB,qBAAK,YAAY;AAAA,cAClB;AACA,qBAAO,kBAAkB,GAAG;AAAA,YAC7B;AACA;AAAA,QACD;AACA,eAAO,KAAK;AACZ,aAAK,MAAM,WAAW;AACtB,aAAK,YAAY;AAAA,MAClB;AAAA,IACD;AACA,wBAAe,CAAC,OAAc;AAC7B,YAAM,YAAY,GAAG;AACrB,WAAK,MAAM,OAAO,eAAe,UAAU,KAAK;AAChD,WAAK,YAAY;AACjB,WAAK,YAAY;AAAA,IAClB;AACA,8BAAqB,CAAC,OAAc;AACnC,YAAM,SAAS,KAAK,MAAM,OAAO;AACjC,UAAI,SAAS,GAAG;AAChB,aAAO,UAAU,OAAO,cAAc,WAAW;AAChD,YAAI,OAAO,YAAY,UAAU;AAChC,gBAAM,SAAS,OAAO,aAAa,aAAa;AAChD,cAAI,QAAQ;AACX,mBAAO,aAAa,OAAO,MAAM,GAAG,CAAQ;AAC5C,kBAAM,YAAY,KAAK,KAAM,cAAgC,mBAAmB;AAChF,mBAAO,KAAK,WAAW,SAAS,EAAE;AAClC,gBAAI,CAAC,WAAW,eAAe,EAAG,YAAW,OAAO;AACpD,iBAAK,YAAY;AACjB,eAAG,eAAe;AAClB,eAAG,gBAAgB;AACnB;AAAA,UACD;AAAA,QACD;AAEA,iBAAS,OAAO;AAAA,MACjB;AAAA,IACD;AACA,yBAAgB,CAAC,OAAsB;AACtC,YAAM,YAAY,GAAG;AACrB,YAAM,EAAE,OAAO,IAAI,KAAK;AACxB,cAAQ,GAAG,SAAS;AAAA,QACpB,KAAK;AACJ,cAAI,UAAU,mBAAmB,KAAK,UAAU,iBAAiB,GAAG;AACnE,mBAAO,OAAO,aAAa;AAC3B,mBAAO,eAAe,UAAU,KAAK;AACrC,iBAAK,YAAY;AACjB,iBAAK,YAAY;AAAA,UAClB;AACA;AAAA,QACD,KAAK;AACJ,iBAAO,cAAc;AACrB,gBAAM,YAAY,KAAK,KAAM,cAAc,sBAAsB;AACjE,cAAI,WAAW;AACd,sBAAU,YAAY,KAAK,IAAI,GAAG,OAAO,cAAc,KAAK,KAAK,OAAO,OAAO,cAAc,OAAO,CAAC,CAAC;AAAA,UACvG;AACA,eAAK,YAAY;AACjB,aAAG,eAAe;AAClB;AAAA,QACD,KAAK;AACJ,iBAAO,gBAAgB;AACvB,gBAAM,cAAc,KAAK,KAAM,cAAc,sBAAsB;AACnE,cAAI,aAAa;AAChB,wBAAY,YAAY,KAAK,IAAI,GAAG,OAAO,cAAc,KAAK,KAAK,OAAO,OAAO,cAAc,OAAO,CAAC,CAAC;AAAA,UACzG;AACA,eAAK,YAAY;AACjB,aAAG,eAAe;AAClB;AAAA,QACD,KAAK;AAEJ,aAAG,yBAAyB;AAC5B;AAAA,QACD,KAAK;AAEJ,aAAG,yBAAyB;AAC5B;AAAA,QACD,KAAK;AAAA;AAAA,QACL,KAAK;AACJ,gBAAM,QAAQ,OAAO,kBAAkB;AACvC,cAAI,OAAO,YAAY,SAAS,OAAQ,WAAU,QAAQ,SAAS;AACnE,cAAI,UAAU,MAAM;AACnB,gBAAI,GAAG,YAAY,KAAK,OAAO,YAAY,SAAS,QAAQ;AAC3D,mBAAK,YAAY;AAAA,gBAChB,UAAU,OAAO,WAAW;AAAA,gBAC5B,MAAM,GAAG,WAAW,SAAS;AAAA,cAC9B,CAAC;AAAA,YACF,OAAO;AACN,oBAAM,CAAC,MAAM,QAAQ,IAAI,MAAM,MAAM,GAAG;AACxC,mBAAK,aAAa,OAAO,YAAY,QAAQ,IAAI,MAAM,UAAU,GAAG,YAAY,KAAK,GAAG,QAAQ;AAAA,YACjG;AAAA,UACD,OAAO;AACN,iBAAK,eAAe;AACpB,mBAAO,eAAe,EAAE;AACxB,iBAAK,YAAY;AACjB,iBAAK,YAAY;AAAA,UAClB;AACA,aAAG,eAAe;AAClB;AAAA,MACD;AAAA,IACD;AACA,yBAAgB,CAAC,OAAc;AAC9B,UAAI,CAAE,GAAG,cAA8B,UAAW;AAClD,WAAK,YAAY;AACjB,UAAI,SAAS,gBAAgB,gBAAgB,SAAS,gBAAgB,aAAa;AAClF,QAAC,GAAG,cAAsB,yBAAyB;AAAA,MACpD;AACA,WAAK,YAAY;AAAA,IAClB;AAAA;AAAA,EAtVA,YAAY,OAAsC;AACjD,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,WAAO,aAAa;AACpB,QAAI,CAAC,OAAO;AACX,WAAK,MAAM,SAAS;AACpB;AAAA,IACD;AAEA,UAAM,MAAM,OAAO,KAAK,MAAM,QAAQ;AACtC,QAAI,MAAM,SAAS,WAAW;AAC7B,WAAK,eAAe,IAAI,QAAQ;AAAA,IACjC,WAAW,MAAM,SAAS,SAAS;AAClC,UAAI;AACJ,UAAI,MAAM,SAAS,UAAW,SAAQ,KAAK,WAAW;AAAA,eAC7C,MAAM,SAAS,OAAQ,SAAQ,IAAI;AAAA,eACnC,MAAM,SAAS,UAAW,SAAQ,IAAI;AAC/C,aAAO,cAAc,MAAM,MAAM,MAAM,UAAU,KAAK;AACtD,WAAK,YAAY;AACjB,WAAK,eAAe,SAAS;AAAA,IAC9B;AACA,SAAK,MAAM,SAAS;AAAA,EACrB;AAAA,EACA,UAAU,KAAiC,GAAW;AACrD,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,UAAM,SAAS,sBAAI,qBAAqB,KAAK,OAAO,GAAG;AACvD,QAAI,CAAC,KAAK;AACT,aAAO,uBAAC,SAAI,OAAM,gBACjB,uBAAC,SAAI,OAAM,sBACT,OAAO,aACP,uBAAC,YAAO,SAAS,KAAK,aAAa,OAAM,YAAS,uBAAC,OAAE,OAAM,cAAa,eAAW,MAAC,GAAI,cAAY,IAEpG,uBAAC,YAAO,OAAM,UAAS,OAAM,uBAAoB,uBAAC,OAAE,OAAM,eAAc,eAAW,MAAC,GAAI,SAAO,CAEjG,GACA,uBAAC,eACA,uBAAC,YACA,uBAAC,QAAG,SAAS,GAAG,OAAM,iBAAc,uBAAC,SAAI,OAAM,qBAC9C,uBAAC,YAAO,OAAM,2BAA0B,SAAS,KAAK,UAAU,OAAO,WAAW,CAAC,MAClF,uBAAC,UAAK,OAAM,UAAS,OAAO,UAAQ,uBAAC,UAAK,OAAM,kBAC/C,uBAAC,YAAO,OAAM,WAAQ,SAAO,GAAS,KACtC,uBAAC,YAAG,kBAAgB,CACrB,CAAO,CACR,CACD,CAAM,GACN,uBAAC,QAAG,SAAS,GAAG,OAAM,eAAc,GACpC,uBAAC,QAAG,SAAS,GAAG,OAAM,aAAY,GAClC,uBAAC,QAAG,SAAS,GAAG,OAAM,aAAY,CACnC,GACA,uBAAC,YACA,uBAAC,QAAG,OAAM,eAAc,GACxB,uBAAC,QAAG,OAAM,YAAW,CACtB,CACD,CACD;AAAA,IACD;AACA,WAAO,IAAI,MAAM,SAAS,EAAG,KAAI,MAAM,KAAK,EAAE;AAC9C,UAAM,WAAW,IAAI,MAAM,SAAS,IAAI,cAAc;AAEtD,UAAM,MAAM,CAAC,MACZ,OAAO,YAAa,OAAO,YAAY,SAAS,KAAK,OAAO,WAAW,aAAa,IAAK,SAAS;AAEnG,UAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,IAAI,OAAO;AAClD,WAAO,uBAAC,SAAI,OAAM,gBACjB,uBAAC,SAAI,OAAM,sBACV,uBAAC,YAAO,OAAM,UAAS,SAAS,KAAK,WAAW,OAAO,GAAG,OAAO,OAAO,WAAW,sBAAsB,MACxG,uBAAC,OAAE,OAAM,eAAc,eAAW,MAAC,GAAI,SACxC,CACD,GACA,uBAAC,eACA,uBAAC,YACA,uBAAC,QAAG,SAAS,GAAG,OAAM,iBAAc,uBAAC,SAAI,OAAM,qBAC9C,uBAAC,YAAO,OAAO,sBAAsB,IAAI,SAAS,CAAC,IAAI,SAAS,KAAK,UAAU,OAAO,WAAW,CAAC,MACjG,uBAAC,UAAK,OAAM,UAAS,OAAO,UAAQ,uBAAC,UAAK,OAAM,kBAC/C,uBAAC,YAAO,OAAM,WAAQ,SAAO,GAAS,KACrC,IAAI,OACN,CAAO,CACR,CACD,CAAM,GACN,uBAAC,QAAG,SAAS,GAAG,OAAM,iBAAc,uBAAC,SAAI,OAAM,qBAC9C,uBAAC,YAAO,OAAO,uBAAuB,IAAI,SAAS,CAAC,IAAI,SAAS,KAAK,UAAU,OAAO,WAAW,CAAC,MAClG,uBAAC,UAAK,OAAM,gBACX,uBAAC,YAAO,OAAM,WAAQ,OAAK,GAAS,KACnC,QAAQ,MAAM,IAAI,UAAQ,uBAAC,aAAK,WAAW,eAAe,IAAI,CAAE,CAAM,CACxE,GACA,uBAAC,UAAK,OAAM,gBACX,uBAAC,YAAO,OAAM,WAAQ,OAAK,GAAS,KACnC,IAAI,SAAS,OAAO,cACpB,OAAO,UAAU,IAAI,SAAS,4CAAE,uBAAC,UAAG,GACpC,uBAAC,SAAI,KAAK,GAAG,sBAAI,cAAc,0BAA0B,OAAO,IAAI,QAAQ,IAAI,KAAI,SAAQ,CAC7F,GACC,CAAC,OAAO,UAAU,IAAI,UAAU,IAAI,WAAW,OAAO,4CACtD,uBAAC,UAAG,GAAE;AAAA,MAAC;AAAA;AAAA,QACN,KAAK,GAAG,sBAAI,QAAQ,UAAU,IAAI,OAAO,YAAY,CAAC;AAAA,QAAQ,KAAK,IAAI;AAAA,QAAQ,OAAM;AAAA,QAAI,QAAO;AAAA,QAAK,OAAM;AAAA;AAAA,IAC5G,CACD,CACD,GACC,CAAC,EAAE,CAAC,OAAO,WAAW,IAAI,SAAS,OAAO,OAAO,OAAO,uBAAC,UAAK,OAAM,gBACpE,uBAAC,YAAO,OAAM,WAAQ,OAAK,GAAS,KACnC,IAAI,QAAQ,uBAAC,SAAI,KAAK,GAAG,sBAAI,cAAc,0BAA0B,OAAO,IAAI,QAAQ,IAAI,KAAI,OAAM,IAAK,QAC7G,GACC,OAAO,QAAQ,KAAK,uBAAC,UAAK,OAAM,gBAChC,uBAAC,YAAO,OAAM,WAAQ,MAAI,GAAS,KAClC,WAAW,eAAe,IAAI,YAAY,QAAQ,oBAAoB,QAAQ,MAAM,CAAC,CAAC,CACxF,GACC,OAAO,cAAc,GAAG,KAAK,uBAAC,UAAK,OAAM,gBACzC,uBAAC,YAAO,OAAM,WAAQ,MAAI,GAAS,KAClC,WAAW,eAAe,OAAO,UAAU,GAAG,CAAC,CACjD,CACD,CACD,CAAM,GACN,uBAAC,QAAG,SAAS,GAAG,OAAM,eAAY,uBAAC,SAAI,OAAM,qBAC5C,uBAAC,YAAO,OAAO,uBAAuB,IAAI,MAAM,CAAC,GAAG,QAAQ,IAAI,SAAS,KAAK,UAAU,OAAO,QAAQ,CAAC,MACvG,uBAAC,YAAO,OAAM,WAAQ,OAAK,GAAS,KACnC,IAAI,MAAM,IAAI,CAAC,MAAM,OAAO,uBAAC,aAC5B,CAAC,OAAO,UAAU,uBAAC,WAAM,OAAM,UAAO,QAAM,GAC5C,MAAM,IAAI,uBAAC,UAAK,OAAM,mBAAiB,QAAS,OAAO,UAAU,OAAQ,EAAG,IAAU,QAAS,OAAO,UAAU,GAClH,CAAM,GACL,CAAC,IAAI,MAAM,UAAU,uBAAC,YAAG,YAAU,CACrC,CACD,CAAM,GACN,uBAAC,QAAG,SAAS,GAAG,OAAM,eAAY,uBAAC,SAAI,OAAM,qBAC5C,uBAAC,YAAO,OAAO,qBAAqB,IAAI,OAAO,CAAC,IAAI,SAAS,KAAK,UAAU,OAAO,SAAS,CAAC,MAC3F,SAAS,gBAAgB,KAAK,KAAK,MAAM,QAAQ,IAAI,CACvD,CACD,CAAM,CACP,GACA,uBAAC,YACA,uBAAC,QAAG,OAAM,iBAAc,uBAAC,SAAI,OAAM,qBAClC,uBAAC,YAAO,OAAO,uBAAuB,IAAI,SAAS,CAAC,IAAI,SAAS,KAAK,UAAU,OAAO,WAAW,CAAC,OAChG,OAAO,OAAO,KAAK,IAAI,YAAY,4CACpC,uBAAC,YAAO,OAAM,WAAQ,SAAO,GAAS,KACpC,IAAI,YAAY,gBAAgB,IAAI,YACpC,CAAC,IAAI,UAAU,uBAAC,YAAG,kBAAgB,IAAQ,uBAAC,YAAG,cAAY,EAC9D,CACD,CACD,CAAM,GACN,uBAAC,QAAG,OAAM,cAAW,uBAAC,SAAI,OAAM,qBAC/B,uBAAC,YAAO,OAAO,uBAAuB,IAAI,MAAM,CAAC,IAAI,SAAS,KAAK,UAAU,OAAO,QAAQ,CAAC,OAC1F,OAAO,OAAO,KAAK,IAAI,SAAS,4CAChC,IAAI,QAAQ,uBAAC,UAAK,OAAM,YAAW,OAAO,iBAAiB,sBAAI,YAAY,IAAI,IAAI,GAAG,GACvF,uBAAC,YAAO,OAAM,WAAQ,MAAI,GAAS,KAClC,IAAI,QAAQ,uBAAC,YAAG,WAAS,CAC3B,CACD,CACD,CAAM,CACP,CACD,GACA,uBAAC,YAAO,OAAO,sBAAsB,IAAI,SAAS,CAAC,IAAI,SAAS,KAAK,UAAU,OAAO,WAAW,CAAC,MACjG,uBAAC,YAAO,OAAM,WAAQ,UAAQ,GAAS,KACtC,OAAO,YAAY,GAAG,CACxB,CACD;AAAA,EACD;AAAA,EAMA,iBAAiB;AAChB,UAAM,YAAY,KAAK,KAAM,cAAgC,mBAAmB;AAChF,QAAI,WAAW;AACd,gBAAU,QAAQ;AAClB,UAAI,CAAC,WAAW,eAAe,EAAG,WAAU,MAAM;AAAA,IACnD;AAAA,EACD;AAAA,EAmLA,cAAc;AACb,SAAK,YAAY;AACjB,UAAM,gBAAgB,KAAK,KAAM,cAAc,sBAAsB;AACrE,QAAI,cAAe,eAAc,YAAY;AAAA,EAC9C;AAAA,EACA,gBAAgB;AACf,QAAI,KAAK,WAAW;AACnB,aAAO,KAAK,KAAK,OAAO,cAAc,EAAE;AAAA,IACzC;AACA,WAAO;AAAA,EACR;AAAA,EAES,qBAAqB;AAC7B,UAAM,YAAY,KAAK,KAAM,cAAgC,yCAAyC;AACtG,QAAI,KAAK,iBAAiB,MAAM;AAC/B,UAAI,WAAW;AACd,kBAAU,QAAQ,KAAK;AACvB,YAAI,CAAC,WAAW,eAAe,EAAG,WAAU,OAAO;AAAA,MACpD;AACA,WAAK,eAAe;AAAA,IACrB;AACA,UAAM,UAAU,KAAK,KAAM,cAAc,kBAAkB;AAC3D,QAAI,aAAa,UAAU,SAAS,SAAS;AAC5C,UAAI,SAAS;AACZ,cAAM,EAAE,MAAM,IAAI,QAAQ,sBAAsB;AAChD,kBAAU,MAAM,cAAc,GAAG,QAAQ,CAAC;AAAA,MAC3C,OAAO;AACN,kBAAU,MAAM,cAAc;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AAAA,EACA,mBAAmB;AAClB,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,QAAI,CAAC,OAAO,WAAY,QAAO;AAC/B,UAAM,EAAE,MAAM,SAAS,IAAI,OAAO;AAClC,UAAM,MAAM,KAAK,MAAM,OAAO,KAAK,QAAQ;AAC3C,UAAM,MAAM,CAAC,MAAc,aAAa,IAAI,SAAS;AACrD,WAAO,uBAAC,SAAI,OAAM,uBACjB,uBAAC,QAAG,OAAM,YACT,uBAAC,QAAG,OAAM,aAAU,uBAAC,YAAO,OAAM,UAAS,SAAS,KAAK,YACxD,uBAAC,OAAE,OAAM,sBAAqB,eAAW,MAAC,GAAI,OAC/C,CAAS,GACR,OAAO,KAAK,IAAI,CAAC,QAAQ,MAAM,uBAAC,YAAG;AAAA,MAAC;AAAA;AAAA,QACpC,OAAO,kBAAkB,IAAI,CAAC,CAAC;AAAA,QAAI,SAAS,KAAK;AAAA,QAAU,OAAO,GAAG,IAAI,IAAI,CAAC;AAAA;AAAA,MAE9E,uBAAC,UAAK,OAAM,SAAQ,OAAO,sBAAI,eAAe,MAAM,GAAG;AAAA,MAAO,uBAAC,UAAG;AAAA,MACjE,OAAO,YAAY,MAAM;AAAA,IAC3B,CAAS,CAAK,GACb,OAAO,OAAO,KAAK,uBAAC,YAAG;AAAA,MAAC;AAAA;AAAA,QACxB,OAAO,kBAAkB,IAAI,OAAO,KAAK,MAAM,CAAC;AAAA,QAAI,SAAS,KAAK;AAAA,QAAU,OAAO,WAAW,OAAO,KAAK,MAAM;AAAA;AAAA,MAEhH,uBAAC,OAAE,OAAM,cAAa;AAAA,IACvB,CAAS,CACV,GACA,uBAAC,SAAI,OAAM,OAAM,OAAM,mBAAiB,KAAK,UAAU,KAAK,QAAQ,CAAE,GACrE,SAAS,UACT,uBAAC,YAAS,QAAgB,KAAW,UAAU,KAAK,iBAAiB,IAClE,SAAS,YACZ,uBAAC,eAAY,QAAgB,KAAW,UAAU,KAAK,iBAAiB,IAExE,uBAAC,aACA,uBAAC,SAAI,OAAM,wBAAuB,SAAS,KAAK,sBAC/C;AAAA,MAAC;AAAA;AAAA,QACA,MAAK;AAAA,QAAS,MAAK;AAAA,QAAQ,OAAM;AAAA,QAAU,aAAY;AAAA,QACvD,SAAS,KAAK;AAAA,QAAc,WAAW,KAAK;AAAA,QAAe,cAAa;AAAA;AAAA,IACzE,GACC,4CAAgB,cAAc,OAAO,MAAM,CAC7C,GACA,uBAAC,SAAI,OAAM,uBAAsB,UAAU,KAAK,iBAAe;AAAA,MAAC;AAAA;AAAA,QAC/D,QAAQ,OAAO;AAAA,QAAQ,aAAW;AAAA,QAAC,aAAa,OAAO;AAAA,QACvD,UAAU,KAAK;AAAA,QAAc,WAAW,KAAK,cAAc;AAAA;AAAA,IAC5D,CAAE,CACH,CAEF;AAAA,EACD;AAAA,EACS,SAAS;AACjB,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,QAAI,OAAO,WAAY,QAAO,KAAK,iBAAiB;AACpD,QAAI,OAAO,UAAU;AACpB,aAAO,uBAAC,SAAI,OAAM,gBAAa,mBAAiB;AAAA,IACjD;AAEA,UAAM,aAAa,CAAC,MAAc,OAAO,YAAY,UAAU,IAAI,uBAAC,OAAE,OAAM,sBAC3E,uBAAC,YAAO,OAAM,UAAS,SAAS,KAAK,eACpC,uBAAC,OAAE,OAAM,cAAa,eAAW,MAAC,GAAI,cACvC,CACD,IAAO;AACP,WAAO,uBAAC,SAAI,OAAM,gBAChB,OAAO,KAAK,IAAI,CAAC,KAAK,MAAM;AAAA,MAC5B,WAAW,CAAC;AAAA,MACZ,KAAK,UAAU,KAAK,CAAC;AAAA,IACtB,CAAC,GACA,WAAW,OAAO,KAAK,MAAM,GAC7B,OAAO,OAAO,KAAK,uBAAC,WAAE,uBAAC,YAAO,OAAM,cAAa,SAAS,KAAK,UAAU,OAAO,WAAW,OAAO,KAAK,MAAM,MAC7G,uBAAC,OAAE,OAAM,cAAa,eAAW,MAAC,GAAI,iBACvC,CAAS,CACV;AAAA,EACD;AACD;AAEA,MAAM,iBAAiB,cAAAA,QAAO,UAI3B;AAAA,EAJH;AAAA;AAiKC,uBAAc,MAAM;AACnB,YAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,YAAM,OAAO,OAAO;AAEpB,YAAM,QAAQ,IAAI,yCAAkB,KAAK,MAAM,EAAE,MAAM,GAAG;AAC1D,UAAI,MAAM,MAAM;AAChB,WAAK,OAAO,MAAM,YAAY;AAC9B,WAAK,QAAQ,MAAM,aAAa;AAChC,WAAK,0BAA0B;AAC/B,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,0BAAiB,MAAM;AACtB,YAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,YAAM,OAAO,OAAO;AAEpB,YAAM,gBAAY,4CAAoB,KAAK,KAAK,MAAM;AACtD,UAAI,CAAC,UAAW;AAEhB,UAAI,MAAM,UAAU;AACpB,WAAK,OAAO,UAAU,QAAQ;AAC9B,WAAK,QAAQ,UAAU,SAAS;AAChC,WAAK,MAAM,SAAS;AAAA,IACrB;AA2FA,gBAAoC;AACpC,iBAAqC;AAWrC,oBAAW,CAAC,OAAc;AACzB,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,YAAM,SAAS,OAAO,KAAK,MAAM,GAAG,EAAE,CAAC;AACvC,UAAI,QAAQ,KAAK,IAAI,SAAS,OAAO,KAAK,CAAC;AAE3C,UAAI,MAAM,KAAK,GAAG;AACjB,YAAI,IAAI,IAAK,QAAO,IAAI,IAAI,MAAM;AAAA,MACnC,OAAO;AACN,YAAI,QAAQ,CAAC;AACb,YAAI,IAAI,MAAM,IAAI;AAAA,MACnB;AAEA,UAAI,OAAO,SAAS,SAAS;AAE5B,cAAM,QAAQ,KAAK,OAAO;AAC1B,YAAI,QAAQ,IAAI,KAAK;AACpB,cAAI,UAAU;AACd,qBAAW,SAAS,OAAO,OAAO,IAAI,OAAO,CAAC,CAAC,EAAG,YAAW;AAC7D,cAAI,UAAU,SAAS,UAAU,SAAS,OAAO;AAChD,gBAAI,IAAK,MAAM,IAAI,SAAS,UAAU,SAAU,QAAQ;AAAA,UACzD;AAAA,QACD;AAAA,MACD,OAAO;AACN,YAAI,OAAO,MAAM,SAAS,GAAG,GAAG;AAC/B,cAAI,WAAW,MAAM;AACpB,kBAAM,mCAAmC;AACzC;AAAA,UACD;AACA,eAAK,OAAO;AAAA,QACb,WAAW,KAAK,SAAS,QAAQ;AAChC,eAAK,OAAO;AAAA,QACb;AACA,YAAI,OAAO,MAAM,SAAS,GAAG,GAAG;AAC/B,cAAI,WAAW,MAAM;AACpB,kBAAM,mCAAmC;AACzC;AAAA,UACD;AACA,eAAK,QAAQ;AAAA,QACd,WAAW,KAAK,UAAU,QAAQ;AACjC,eAAK,QAAQ;AAAA,QACd;AACA,aAAK,0BAA0B;AAAA,MAChC;AAEA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,qCAA4B,MAAM;AACjC,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,CAAC,KAAK,QAAQ,CAAC,KAAK,OAAO;AAC9B,eAAO,IAAI;AAAA,MACZ,OAAO;AACN,mBAAW,KAAK,sCAAe;AAC9B,cAAI,qCAAc,CAAmB,EAAE,SAAS,KAAK,QAAQ,qCAAc,CAAmB,EAAE,UAAU,KAAK,OAAO;AACrH,gBAAI,SAAS;AACb;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAcA,oBAAW,CAAC,OAAc;AACzB,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,YAAM,SAAS,OAAO,KAAK,MAAM,GAAG,EAAE,CAAC;AACvC,YAAM,QAAQ,KAAK,OAAO,OAAO,KAAK;AACtC,UAAI,UAAU,MAAM;AACnB,YAAI,IAAI,KAAK;AACZ,iBAAO,IAAI,IAAI,MAAM;AACrB,cAAI,OAAO,OAAO,IAAI,GAAG,EAAE,MAAM,QAAM,OAAO,MAAS,GAAG;AACzD,gBAAI,MAAM;AAAA,UACX;AAAA,QACD;AAAA,MACD,OAAO;AACN,YAAI,QAAQ,EAAE,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AAClE,YAAI,IAAI,MAAM,IAAI;AAAA,MACnB;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,wBAAe,CAAC,OAAc;AAC7B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,YAAM,SAAS,OAAO;AACtB,UAAI,WAAW,WAAW;AACzB,eAAO,IAAI;AAAA,MACZ,OAAO;AACN,YAAI,SAAS;AAAA,MACd;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,0BAAiB,CAAC,OAAc;AAC/B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,CAAC,OAAO,MAAO;AAEnB,UAAI,OAAO,UAAU,QAAQ;AAC5B,YAAI,MAAM;AAAA,MACX,OAAO;AACN,cAAM,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG,IAAI,OAAO,MAAM,MAAM,GAAG,EAAE,IAAI,MAAM;AACxE,YAAI,MAAM,EAAE,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI;AAAA,MACzC;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AAAA;AAAA,EA3YA,OAAO,gBAAgB,KAAqB,QAAyB,KAAe;AAEnF,UAAM,YAAa,OAAO,MAAM,IAAI,IAAI;AACxC,UAAM,MAAM,OAAO,OAAO,GAAG;AAC7B,WAAO,sBAAI,UAAU,IAAI,YAAU;AAClC,UAAI,WAAW,SAAS,OAAO,QAAQ,EAAG,QAAO;AAEjD,YAAM,OAAO,OAAO,QAAQ,QAAQ,KAAK,IAAI,MAAM,CAAC;AACpD,UAAI,KAAsB,IAAI,MAAM,MAAM,KAAK;AAC/C,UAAI,QAAQ,OAAO,KAAK;AACxB,UAAI,WAAW,KAAM,SAAQ,OAAO,KAAK;AACzC,UAAI,QAAQ,GAAI,SAAQ;AACxB,UAAI,MAAM,KAAK,MAAM,OAAO,MAAM,GAAG;AACrC,UAAI,MAAM,IAAK,OAAM;AACrB,YAAM,WAAW,OAAO,QAAQ,KAAK,WAAW,QAAQ,QAAQ,uCAAgB,MAAM;AACtF,UAAI,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,WAAW,KAAM,MAAK;AACpD,aAAO,uBAAC,UAAK,OAAM,aAClB,uBAAC,eAAO,QAAS,GAAQ,KACzB,uBAAC,UAAK,OAAM,eACX,uBAAC,UAAK,OAAO,SAAS,KAAK,qBAAqB,GAAG,8BAA8B,GAAG,aAAa,CAClG,GAAO,KACN,CAAC,OAAO,uBAAC,YAAI,IAAK,GAClB,OAAO,uBAAC,YAAI,MAAM,EAAG,GACrB,QAAQ,qCAAc,IAAI,MAAO,GAAG,SAAS,SAC7C,uBAAC,eAAM,GAAC,IACL,qCAAc,IAAI,MAAO,GAAG,UAAU,SACzC,uBAAC,eAAM,QAAO,IACX,KACL;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EACA,eAAe;AACd,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,QAAI,OAAO,OAAO,EAAG,QAAO;AAE5B,UAAM,SAAS,OAAO,UAAU,GAAG;AACnC,UAAM,WAAW,UAAU,CAAC,OAAO,cAAc,GAAG,KAAK,OAAO,SAAS,MAAM,KAAK;AACpF,UAAM,aAAa,IAAI,OAAO,OAAO,WAAW,KAAK,KAAK;AAC1D,UAAM,kBAAkB,cAAc,OAAO,OAAO,UAAU,EAAE,KAAK,GAAG;AACxE,QAAI,CAAC,UAAU;AACd,aAAO,uBAAC,YAAO,MAAK,YAAW,OAAM,UAAS,UAAU,KAAK,kBAC5D,uBAAC,YAAO,OAAM,IAAG,UAAQ,QAAC,YAAU,GACnC,mBAAmB,uBAAC,YAAO,OAAM,UAAO,UAAO,iBAAgB,GAAC,GACjE,uBAAC,cAAS,OAAM,aACf,uBAAC,YAAO,OAAM,sBAAmB,kBAAgB,CAClD,GACA,uBAAC,cAAS,OAAM,sBACf,uBAAC,YAAO,OAAM,qBAAkB,iBAAe,CAChD,GACA,uBAAC,cAAS,OAAM,aACf,uBAAC,YAAO,OAAM,uBAAoB,mBAAiB,CACpD,GACA,uBAAC,cAAS,OAAM,aACf,uBAAC,YAAO,OAAM,sBAAmB,kBAAgB,CAClD,CACD;AAAA,IACD;AACA,UAAM,UAAU,OAAO,OAAO,IAAI,IAAI;AACtC,UAAM,QAAQ,SAAS,IAAI,SAAO,IAAI,MAAM,EAAE,EAAE,IAAI,QAAM,SAAS,EAAE,CAAC,CAAC;AAEvE,WAAO,uBAAC,YAAO,MAAK,YAAW,OAAM,UAAS,UAAU,KAAK,kBAC5D,uBAAC,YAAO,OAAM,IAAG,UAAQ,QAAC,iBAAc,QAAO,MAAI,GAClD,mBAAmB,uBAAC,YAAO,OAAM,UAAO,UAAO,iBAAgB,GAAC,GACjE,uBAAC,cAAS,OAAM,aACd,MAAM,IAAI,SAAO;AACjB,YAAM,SAAS,IAAI,IAAI,CAAC,IAAI,OAAO,MAAM,IAAI,UAAU,MAAM,EAAE,EAAE,KAAK,GAAG;AACzE,aAAO,uBAAC,YAAO,OAAO,UAAS,MAAO;AAAA,IACvC,CAAC,CACF,GACA,uBAAC,cAAS,OAAM,sBACd,MAAM,IAAI,SAAO;AACjB,YAAM,SAAS,IAAI,IAAI,CAAC,IAAI,OAAO,MAAM,KAAK,MAAM,IAAI,UAAU,MAAM,EAAE,EAAE,KAAK,GAAG;AACpF,aAAO,uBAAC,YAAO,OAAO,UAAS,MAAO;AAAA,IACvC,CAAC,CACF,GACA,uBAAC,cAAS,OAAM,aACd,MAAM,IAAI,SAAO;AACjB,YAAM,SAAS,IAAI,IAAI,QAAM,KAAK,EAAE,EAAE,KAAK,GAAG;AAC9C,aAAO,uBAAC,YAAO,OAAO,UAAS,MAAO;AAAA,IACvC,CAAC,CACF,GACA,uBAAC,cAAS,OAAM,aACd,MAAM,IAAI,SAAO;AACjB,YAAM,SAAS,IAAI,IAAI,CAAC,IAAI,OAAO,MAAM,IAAI,UAAU,MAAM,EAAE,EAAE,KAAK,GAAG;AACzE,aAAO,uBAAC,YAAO,OAAO,UAAS,MAAO;AAAA,IACvC,CAAC,CACF,CACD;AAAA,EACD;AAAA,EACA,YAAY,GAAW;AACtB,UAAM,EAAE,OAAO,IAAI,KAAK;AACxB,UAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,CAAC;AACxC,QAAI,SAAiB,OAAO;AAC5B,QAAI,gBAAoB,wBAAK,QAAQ,WAAW;AAEhD,QAAI,QAAQ,OAAO,YAAY;AAC9B,kBAAY;AAAA,IACb,WAAW,QAAQ,OAAO;AACzB,cAAQ,QAAQ,aAAa;AAAA,QAC7B,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACJ;AAAA,QACD;AACC,uBAAa,UAAM,wBAAK,QAAQ,KAAK;AACrC;AAAA,MACD;AAAA,IACD;AAEA,QAAI,mBAAmB;AACvB,QAAI,OAAO,WAAW,KAAK,GAAG;AAC7B,UAAI,SAAS,SAAS,OAAO,OAAO,CAAC,GAAG,EAAE;AAC1C,UAAI,KAAK,UAAU,UAAU,GAAG;AAC/B,2BAAmB;AAAA,MACpB;AACA,eAAS,OAAO,MAAM,CAAC;AAAA,IACxB;AACA,UAAM,aAAa,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,EAAE,mBAAmB,CAAC;AAC9F,QAAI,WAAW,qBAAqB;AACnC,mBAAa;AAAA,IACd,WAAW,WAAW,eAAe,WAAW,aAAa;AAC5D,mBAAa;AAAA,IACd,WACC,WAAW,QAAQ,WAAW,QAAQ,WAAW,QAAQ,WAAW,QAAQ,WAAW,QACvF,WAAW,QAAQ,WAAW,cAAc,WAAW,gBAAgB,WAAW,SAClF,WAAW,iBAAiB,WAAW,cAAc,WAAW,SAAS,WAAW,oBACnF;AACD,mBAAa,MAAM;AAAA,IACpB,WAAW,WAAW,oBAAoB;AACzC,mBAAa;AAAA,IACd,WAAW,WAAW,gBAAgB;AACrC,mBAAa;AAAA,IACd,WAAW,WAAW,iBAAiB;AACtC,mBAAa;AAAA,IACd;AACA,WAAO,yBAAyB,UAAU,YAAY,SAAS;AAAA,EAChE;AAAA,EAwBA,sBAAsB;AACrB,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,UAAM,OAAO,OAAO;AAEpB,QAAI,OAAO,MAAM,GAAG;AACnB,aAAO,uBAAC,WAAE,KACR,uBAAC,OAAE,QAAO,UAAS,MAAM,KAAK,YAAY,IAAI,OAAO,KAAG,oBAAoB,GAAI,GAClF;AAAA,IACD;AAEA,UAAM,QAAQ,IAAI,yCAAkB,KAAK,MAAM,EAAE,MAAM,GAAG;AAC1D,UAAM,OAAO,MAAM;AAEnB,UAAM,aAAa,MAAM;AACzB,UAAM,cAAc,MAAM,YAAY;AACtC,UAAM,eAAe,MAAM,aAAa;AACxC,WAAO,uBAAC,OAAE,OAAM,eACf,uBAAC,eAAM,kBAAgB,GACtB,SAAS,MACT,oDAEA,uBAAC,YAAO,MAAK,sBAAqB,OAAM,UAAS,SAAS,KAAK,eAAc,MAAK,MAEhF,sBAAI,UAAU,IAAI,YAAU,WAAW,MAAM,IAAI,GAAG,WAAW,MAAM,CAAC,IAAI,uCAAgB,MAAM,CAAC,KAAK,IAAI,EACxG,OAAO,OAAO,EAAE,KAAK,KAAK,GAE5B,CAAC,EAAE,eAAe,iBAClB,MAAM,uCAAgB,WAAW,CAAC,MAAM,uCAAgB,YAAY,CAAC,GAEvE,GAED,uBAAC,eAAM,MAAE,uBAAC,OAAE,QAAO,UAAS,MAAM,KAAK,YAAY,IAAI,OAAO,KAAG,oBAAoB,GAAI,GAAC,CAM3F;AAAA,EACD;AAAA,EACA,sBAAsB;AACrB,UAAM,gBAAY,4CAAoB,KAAK,MAAM,KAAK,KAAK,MAAM,OAAO,MAAM;AAC9E,QAAI,CAAC,UAAW,QAAO;AAEvB,WAAO,uBAAC,WACP,uBAAC,eAAM,uBAAC,YAAG,SAAO,GAAK,+BACtB,UAAU,WACT,QAAQ,UAAU,QAAQ,SAC1B,oBACD,IAAE,GACH,uBAAC,YAAO,MAAK,2BAA0B,OAAM,UAAS,SAAS,KAAK,kBAElE,sBAAI,UAAU,IAAI,YAAU,UAAU,IAAI,MAAM,IAAI,GAAG,UAAU,IAAI,MAAM,CAAC,IAAI,uCAAgB,MAAM,CAAC,KAAK,IAAI,EAC9G,OAAO,OAAO,EAAE,KAAK,KAAK,GAE5B,CAAC,EAAE,UAAU,QAAQ,UAAU,UAC/B,MAAM,uCAAgB,UAAU,IAAI,CAAC,MAAM,uCAAgB,UAAU,KAAK,CAAC,GAE7E,CACD;AAAA,EACD;AAAA,EACA,SAAS,MAAc,OAAe;AACrC,UAAM,UAAU,KAAK,KAAM,cAAgC,eAAe,IAAI,IAAI;AAClF,QAAI,QAAS,SAAQ,QAAQ;AAAA,EAC9B;AAAA,EACA,OAAO,MAAgB;AACtB,UAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAM,SAAS,qCAAc,IAAI,MAAO;AACxC,UAAM,SAAS,CAAC,OAAO,KAAK,KAAM,cAAgC,aAAa,GAAG,OAAO;AACzF,QAAI,QAAQ,MAAM;AACjB,WAAK,OAAO,QAAQ,QAAQ;AAC5B,WAAK,QAAQ,QAAQ,SAAS;AAAA,IAC/B,WAAW,KAAK,QAAQ,KAAK,OAAO;AAEnC,WAAK,OAAO;AACZ,WAAK,QAAQ;AAAA,IACd;AACA,eAAW,UAAU,sBAAI,WAAW;AACnC,YAAM,KAAK,GAAG,IAAI,MAAM,MAAM,KAAK,EAAE;AACrC,YAAM,YAAY,KAAK,SAAS,SAAS,MAAM,KAAK,UAAU,SAAS,MAAM;AAC7E,YAAM,KAAK,KAAK,OAAO,IAAI,MAAM,MAAM,CAAC;AACxC,UAAI,WAAW,MAAM,MAAM,GAAI,MAAK,SAAS,MAAM,MAAM,IAAI,KAAK,SAAS;AAC3E,UAAI,WAAW,MAAM,MAAM,GAAI,MAAK,SAAS,MAAM,MAAM,IAAI,EAAE;AAAA,IAChE;AAAA,EACD;AAAA,EACS,oBAA0B;AAClC,SAAK,OAAO,IAAI;AAAA,EACjB;AAAA,EACS,qBAA2B;AACnC,SAAK,OAAO;AAAA,EACb;AAAA,EAGA,cAAc,MAAc,QAAkB;AAC7C,QAAI,QAAQ,OAAO,MAAM;AACzB,QAAI,WAAW,KAAM,SAAQ,KAAK,MAAM,OAAO,MAAM,GAAG;AACxD,QAAI,QAAQ,IAAK,SAAQ;AACzB,QAAI,MAAM,KAAK,MAAM,OAAO,MAAM,GAAG;AACrC,QAAI,MAAM,IAAK,OAAM;AACrB,WAAO;AAAA,MAAC;AAAA;AAAA,QACP,OAAO,SAAS,KAAK,MAAM,KAAK,CAAC,qBAAqB,GAAG,8BAA8B,GAAG;AAAA;AAAA,IAC1F;AAAA,EACF;AAAA;AAAA,EA8DA,OAAO,cAAsC;AAC5C,UAAM,SAAS,OAAO,YAAY;AAClC,QAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,UAAM,SAAS,KAAK,MAAM,OAAO,MAAM;AACvC,WAAO,SAAS,SAAU,WAAW,KAAK,KAAK,SAAS;AAAA,EACzD;AAAA;AAAA,EAEA,OAAO,IAA4B;AAClC,QAAI,OAAO,QAAQ,OAAO,OAAW,QAAO;AAC5C,UAAM,SAAS,KAAK,MAAM,OAAO,MAAM;AACvC,WAAO,GAAG,SAAS,KAAK,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,EAC3C;AAAA,EA2CA,SAAS;AACR,UAAM,OAAO,KAAK,MAAM,OAAO;AAC/B,UAAM,SAAS,CAAC,KAAK,OAAO,SAAS,QAAQ;AAC7C,WAAO,SAAS,MAAM;AAAA,EACvB;AAAA,EACS,SAAS;AACjB,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,UAAM,OAAO,OAAO;AACpB,UAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,IAAI,OAAO;AAElD,UAAM,YAAY,QAAQ;AAE1B,UAAM,SAAS,qCAAc,IAAI,UAAU,SAAS;AAEpD,UAAM,SAAS,CAAC,KAAK,OAAO,SAAS,QAAQ;AAE7C,UAAM,QAAQ,SAAS,MAAM;AAC7B,UAAM,SAAS,SAAS,IAAI;AAC5B,UAAM,YAAY,UAAU,OAAO,OAAO,KAAK,CAAC,IAAI,MAAM,QAAQ;AAClE,UAAM,SAAS,OAAO,MAAM;AAG5B,UAAM,YAAY;AAAA,MACjB,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AACA,QAAI,OAAO,QAAQ,EAAG,WAAU,MAAM;AAEtC,UAAM,MAAM,OAAO,OAAO,GAAG;AAC7B,UAAM,QAAQ,sBAAI,UAAU,OAAO,YAAU,OAAO,MAAM,KAAK,WAAW,KAAK,EAAE,IAAI,YAAU;AAAA,MAC9F;AAAA,MAAQ,UAAU,MAAM;AAAA,MAAG,OAAO,QAAQ,QAAQ,KAAK,IAAI,MAAM,CAAC;AAAA,IACnE,CAAU;AAEV,QAAI,YAAY;AAChB,UAAM,QAAQ,KAAK,OAAO;AAC1B,QAAI,QAAQ,IAAI,KAAK;AACpB,UAAI,UAAU;AACd,iBAAW,MAAM,OAAO,OAAO,IAAI,OAAO,CAAC,CAAC,EAAG,YAAW;AAC1D,UAAI,WAAW,OAAO;AACrB,oBAAa,UAAW,QAAQ,IAAK,IAAK,QAAQ,IAAK;AAAA,MACxD,OAAO;AACN,oBAAY,QAAQ;AAAA,MACrB;AACA,oBAAc;AAAA,IACf;AACA,UAAM,aAAa,OAAO,WAAW,GAAG;AAExC,WAAO,uBAAC,SAAI,OAAM,kBAAiB,MAAK,UAAS,cAAW,WAC3D,uBAAC,SAAI,OAAM,kBAAe,uBAAC,YAAG,sBAAoB,CAAK,GACvD,uBAAC,SAAI,OAAM,SACT,KAAK,oBAAoB,GAC1B,uBAAC,eACA,uBAAC,YACA,uBAAC,UAAoB,GACrB,uBAAC,YAAG,MAAI,GACR,uBAAC,QAAG,OAAM,cAA6B,GACvC,uBAAC,YAAI,SAAS,QAAQ,KAAM,GAC5B,uBAAC,UAAoB,GACrB,uBAAC,YAAI,SAAS,QAAQ,KAAM,GAC5B,uBAAC,UAAqB,CACvB,GACC,MAAM,IAAI,CAAC,CAAC,QAAQ,UAAU,IAAI,MAAM,uBAAC,YACzC,uBAAC,QAAG,OAAM,yCAAuC,QAAS,GAC1D,uBAAC,QAAG,OAAM,sBAAmB,uBAAC,gBAAQ,UAAU,MAAM,CAAE,CAAS,GACjE,uBAAC,QAAG,OAAM,gBAAc,KAAK,cAAc,MAAM,MAAM,CAAE,GACzD,uBAAC,YAAG;AAAA,MAAC;AAAA;AAAA,QACJ,MAAM,MAAM,MAAM;AAAA,QAAI,aAAa,GAAG,aAAa,EAAE;AAAA,QACrD,MAAK;AAAA,QAAO,WAAU;AAAA,QAAU,OAAM;AAAA,QAA8B,OAAM;AAAA,QAC1E,SAAS,KAAK;AAAA,QAAU,UAAU,KAAK;AAAA;AAAA,IACxC,CAAE,GACF,uBAAC,YAAG;AAAA,MAAC;AAAA;AAAA,QACJ,MAAM,YAAY,MAAM;AAAA,QAAI,OAAO,IAAI,MAAM,MAAM,KAAK;AAAA,QAAW,KAAI;AAAA,QAAI,KAAK;AAAA,QAAO,MAAM;AAAA,QAC7F,MAAK;AAAA,QAAQ,OAAM;AAAA,QAAW,UAAU;AAAA,QAAI,eAAW;AAAA,QACvD,SAAS,KAAK;AAAA,QAAU,UAAU,KAAK;AAAA;AAAA,IACxC,CAAE,GACF,uBAAC,YAAG;AAAA,MAAC;AAAA;AAAA,QACJ,MAAM,MAAM,MAAM;AAAA,QAAI,KAAK;AAAA,QAAG,KAAK,SAAS,KAAK;AAAA,QAAI,aAAa,GAAG,WAAW,MAAM,CAAC;AAAA,QAAI,OAAM;AAAA,QACjG,MAAK;AAAA,QAAS,WAAU;AAAA,QAAU,OAAM;AAAA,QAA8B,SAAS,KAAK;AAAA,QAAU,UAAU,KAAK;AAAA;AAAA,IAC9G,CAAE,GACF,uBAAC,QAAG,OAAM,sBAAmB,uBAAC,gBAAQ,IAAK,CAAS,CACrD,CAAK,GACL,uBAAC,YACA,uBAAC,QAAG,SAAS,GAAG,GAChB,uBAAC,QAAG,OAAM,cAAa,OAAM,sBAAoB,cAAc,OAAO,eAAe,EAAG,GACxF,uBAAC,QAAG,OAAM,uBAAqB,aAAa,YAAY,IAAI,uBAAC,OAAE,OAAM,mBAAiB,SAAU,IAAO,SAAU,GACjH,uBAAC,QAAG,SAAS,GAAG,OAAM,sBAAoB,KAAK,aAAa,CAAE,CAC/D,CACD,GACC,OAAO,OAAO,KAAK,uBAAC,WAAE,YACd,uBAAC,YAAO,MAAK,UAAS,OAAM,UAAS,UAAU,KAAK,gBAC1D,OAAO,QAAQ,oCAAa,EAAE,IAAI,CAAC,CAAC,YAAY,SAAS,MACzD,uBAAC,YAAO,OAAO,YAAY,UAAU,cAAc,UACjD,YACA,UAAU,QAAQ,MAAM,uCAAgB,UAAU,IAAI,CAAC,MAAM,uCAAgB,UAAU,KAAM,CAAC,GAChG,CACA,CACF,CACD,GACC,OAAO,OAAO,KAAK,uBAAC,WACpB,uBAAC,eAAM,uBAAC,YAAG,SAAO,GAAK,wCAAoC,uBAAC,aAAI,GAAC,GAAM,SAAK,uBAAC,aAAI,GAAC,GAAM,iBAAe,CACxG,GACC,OAAO,OAAO,KAAK,KAAK,oBAAoB,CAC9C,CACD;AAAA,EACD;AACD;AAEA,MAAM,oBAAoB,cAAAA,QAAO,UAI9B;AAAA,EAJH;AAAA;AAkBC,0BAAiB,CAAC,OAAc;AAC/B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,OAAO,OAAO,MAAM,KAAK;AAAA,MAC9B,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,sBAAa,CAAC,OAAc;AAC3B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,YAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,IAAI,OAAO;AAClD,UAAI,CAAC,OAAO,SAAS,OAAO,WAAW,QAAQ,oBAAoB,QAAQ,MAAM,CAAC,IAAI;AACrF,eAAO,IAAI;AAAA,MACZ,OAAO;AACN,YAAI,WAAW,OAAO,MAAM,KAAK;AAAA,MAClC;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,uBAAc,CAAC,OAAc;AAC5B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,QAAQ,SAAS,OAAO,MAAM,KAAK,CAAC;AAAA,MACzC,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,wBAAe,CAAC,OAAc;AAC7B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,SAAS,OAAO,MAAM,KAAK;AAAA,MAChC,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,2BAAkB,CAAC,OAAc;AAChC,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,YAAY,SAAS,OAAO,MAAM,KAAK,CAAC;AAAA,MAC7C,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,uBAAc,CAAC,OAAc;AAC5B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,QAAQ;AAAA,MACb,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,8BAAqB,CAAC,OAAc;AACnC,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,eAAe,SAAS,OAAO,MAAM,KAAK,CAAC;AAAA,MAChD,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,4BAAmB,CAAC,OAAc;AACjC,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,SAAS;AACnB,YAAI,aAAa;AAAA,MAClB,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AACA,wBAAe,CAAC,OAAc;AAC7B,YAAM,SAAS,GAAG;AAClB,YAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAI,OAAO,OAAO;AACjB,YAAI,SAAS,OAAO;AAAA,MACrB,OAAO;AACN,eAAO,IAAI;AAAA,MACZ;AACA,WAAK,MAAM,SAAS;AAAA,IACrB;AAAA;AAAA,EAvGA,OAAO,MAAgB;AACtB,UAAM,EAAE,IAAI,IAAI,KAAK;AACrB,UAAM,SAAS,CAAC,OAAO,KAAK,KAAM,cAAgC,aAAa,GAAG,OAAO;AAEzF,UAAM,WAAW,KAAK,KAAM,cAAgC,wBAAwB;AACpF,QAAI,YAAY,WAAW,WAAY,UAAS,QAAQ,IAAI,QAAQ;AAAA,EACrE;AAAA,EACS,oBAA0B;AAClC,SAAK,OAAO,IAAI;AAAA,EACjB;AAAA,EACS,qBAA2B;AACnC,SAAK,OAAO;AAAA,EACb;AAAA,EA4FA,aAAa,QAAwB;AACpC,UAAM,cAAc,EAAE,KAAK,QAAQ,KAAK,SAAS;AACjD,QAAI,WAAW,IAAK,QAAO;AAC3B,WAAO,4CACN,uBAAC,SAAI,KAAK,GAAG,sBAAI,QAAQ,UAAU,OAAO,YAAY,CAAC,QAAQ,KAAI,IAAG,OAAM,KAAI,QAAO,MAAK,OAAM,aAAY,GAAE,KAC/G,YAAY,MAAM,CACpB;AAAA,EACD;AAAA,EACA,SAAS;AACR,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC7B,UAAM,UAAU,OAAO,IAAI,QAAQ,IAAI,IAAI,OAAO;AAClD,WAAO,uBAAC,SAAI,OAAM,kBAAiB,MAAK,UAAS,cAAW,aAC3D,uBAAC,SAAI,OAAM,kBAAe,uBAAC,YAAG,SAAO,CAAK,GAC1C,uBAAC,SAAI,OAAM,SACV,uBAAC,WAAE,uBAAC,WAAM,OAAM,WAAQ,cAAU;AAAA,MAAC;AAAA;AAAA,QAClC,MAAK;AAAA,QAAW,OAAM;AAAA,QAA8B,aAAa,QAAQ;AAAA,QACzE,SAAS,KAAK;AAAA,QAAgB,UAAU,KAAK;AAAA;AAAA,IAC9C,CAAE,CAAQ,GACV,uBAAC,WAAE,uBAAC,WAAM,OAAM,WAAQ,WAAO;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAQ,OAAO,IAAI,SAAS;AAAA,QAAI,aAAa,GAAG,OAAO,YAAY;AAAA,QACxE,MAAK;AAAA,QAAS,WAAU;AAAA,QAAU,KAAI;AAAA,QAAI,KAAI;AAAA,QAAM,MAAK;AAAA,QACzD,OAAM;AAAA,QAAgD,OAAM;AAAA,QAC5D,SAAS,KAAK;AAAA,QAAa,UAAU,KAAK;AAAA;AAAA,IAC3C,CAAE,GAAQ,uBAAC,eAAM,kFAAgF,CAAQ,GACxG,OAAO,MAAM,KAAM,4CACnB,uBAAC,WAAE,uBAAC,SAAI,OAAM,WAAQ,WAAO,uBAAC,SAAI,OAAM,aACvC,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAQ,MAAK;AAAA,QAAQ,OAAM;AAAA,QAAO,SAAS,IAAI;AAAA,QACpD,SAAS,KAAK;AAAA,QAAa,UAAU,KAAK;AAAA;AAAA,IAC3C,GAAE,KAAC,uBAAC,SAAI,KAAK,GAAG,sBAAI,cAAc,0BAA0B,OAAO,IAAI,QAAQ,IAAI,KAAI,SAAQ,GAAE,MAAI,GACrG,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAQ,MAAK;AAAA,QAAQ,OAAM;AAAA,QAAG,SAAS,CAAC,IAAI;AAAA,QACjD,SAAS,KAAK;AAAA,QAAa,UAAU,KAAK;AAAA;AAAA,IAC3C,GAAE,KAAG,CACN,CAAM,CAAM,GACZ,uBAAC,WAAE,uBAAC,SAAI,OAAM,WAAQ,YAAS,QAAQ,SACtC,uBAAC,gBAAQ,KAAK,aAAa,QAAQ,MAAM,CAAE,IAE3C,uBAAC,SAAI,OAAM,aACV,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAQ,MAAK;AAAA,QAAS,OAAM;AAAA,QAAI,SAAS,IAAI,WAAW;AAAA,QAC7D,SAAS,KAAK;AAAA,QAAc,UAAU,KAAK;AAAA;AAAA,IAC5C,GAAE,KAAE,KAAK,aAAa,GAAG,CAAE,GAC3B,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAQ,MAAK;AAAA,QAAS,OAAM;AAAA,QAAI,SAAS,IAAI,WAAW;AAAA,QAC7D,SAAS,KAAK;AAAA,QAAc,UAAU,KAAK;AAAA;AAAA,IAC5C,GAAE,KAAE,KAAK,aAAa,GAAG,CAAE,GAC3B,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAQ,MAAK;AAAA,QAAS,OAAM;AAAA,QAAG,SAAS,CAAC,IAAI,UAAU,IAAI,WAAW;AAAA,QAC3E,SAAS,KAAK;AAAA,QAAc,UAAU,KAAK;AAAA;AAAA,IAC5C,GAAE,SAAO,CACV,CACC,CAAM,GACP,OAAO,WACP,uBAAC,WAAE,uBAAC,WAAM,OAAM,WAAQ,eAAW;AAAA,MAAC;AAAA;AAAA,QACnC,MAAK;AAAA,QAAY,OAAM;AAAA,QAAG,aAAY;AAAA,QACtC,MAAK;AAAA,QAAS,WAAU;AAAA,QACxB,OAAM;AAAA,QAAgD,OAAM;AAAA,QAC5D,SAAS,KAAK;AAAA,QAAiB,UAAU,KAAK;AAAA;AAAA,IAC/C,CAAE,CAAQ,KACN,OAAO,MAAM,KAAK,OAAO,aAC7B,uBAAC,WAAE,uBAAC,WAAM,OAAM,WAAQ,eAAW;AAAA,MAAC;AAAA;AAAA,QACnC,MAAK;AAAA,QAAY,OAAO,IAAI,aAAa;AAAA,QAAI,aAAY;AAAA,QACzD,MAAK;AAAA,QAAS,WAAU;AAAA,QAAU,KAAI;AAAA,QAAI,KAAI;AAAA,QAAM,MAAK;AAAA,QACzD,OAAM;AAAA,QAAgD,OAAM;AAAA,QAC5D,SAAS,KAAK;AAAA,QAAiB,UAAU,KAAK;AAAA;AAAA,IAC/C,CAAE,CAAQ,CAEZ,GAEC,OAAO,QAAQ,KAAK,CAAC,OAAO,UAAU,CAAC,QAAQ,iBAC/C,uBAAC,WACA,uBAAC,WAAM,OAAM,SAAQ,OAAM,oBAAiB,mBAAe;AAAA,MAAC;AAAA;AAAA,QAC3D,MAAK;AAAA,QAAe,OAAO,IAAI,gBAAgB;AAAA,QAAI,aAAY;AAAA,QAC/D,MAAK;AAAA,QAAS,WAAU;AAAA,QAAU,KAAI;AAAA,QAAI,KAAI;AAAA,QAAK,MAAK;AAAA,QAAI,OAAM;AAAA,QAClE,SAAS,KAAK;AAAA,QAAoB,UAAU,KAAK;AAAA;AAAA,IAClD,CAAE,GAAQ,KACT,QAAQ,gBACR,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAW,MAAK;AAAA,QAAa,OAAM;AAAA,QAAO,SAAS,IAAI;AAAA,QAC5D,SAAS,KAAK;AAAA,QAAkB,UAAU,KAAK;AAAA;AAAA,IAChD,GAAE,aAAW,IACV,QAAQ,UAAU,UACrB,uBAAC,WAAM,OAAM,qBAAkB;AAAA,MAAC;AAAA;AAAA,QAC/B,MAAK;AAAA,QAAW,SAAO;AAAA,QAAC,UAAQ;AAAA;AAAA,IACjC,GAAE,aAAW,CAEf,IAEE,CAAC,OAAO,YAAY,OAAO,QAAQ,KAAM,OAAO,YAAY,QAAQ,gBAAgB,YAAY,uBAAC,WACnG,uBAAC,WAAM,OAAM,WAAQ,uBAAmB,uBAAC,YAAO,MAAK,UAAS,OAAM,UAAS,UAAU,KAAK,gBAC1F,sBAAI,MAAM,IAAI,EAAE,IAAI,UACpB,KAAK,SAAS,uBAAC,YAAO,OAAO,KAAK,MAAM,UAAU,OAAO,UAAU,GAAG,MAAM,KAAK,QAC/E,KAAK,IACP,CACA,CACF,CAAS,CACV,GACC,OAAO,QAAQ,KAAK,uBAAC,WACrB,uBAAC,WAAM,OAAM,SAAQ,OAAM,eAAY,eAErC,QAAQ,oBAAoB,OAAO,kBAAkB,WACrD,uBAAC,YAAO,MAAK,YAAW,OAAM,cAAa,UAAQ,QAAC,uBAAC,gBAAQ,QAAQ,gBAAiB,CAAS,IAE/F,uBAAC,YAAO,MAAK,YAAW,OAAM,UAAS,UAAU,KAAK,cACpD,sBAAI,MAAM,IAAI,EAAE,IAAI,UACpB,uBAAC,YAAO,OAAO,KAAK,MAAM,WAAW,IAAI,YAAY,QAAQ,oBAAoB,QAAQ,MAAM,CAAC,OAAO,KAAK,QAC1G,KAAK,IACP,CACA,CACF,CAEF,CACD,GACC,QAAQ,kBAAkB,uBAAC,WAC3B,uBAAC,YAAO,OAAM,YAAS,eAEvB,CACD,CACD,CACD;AAAA,EACD;AACD;",
  "names": ["preact", "index"]
}
