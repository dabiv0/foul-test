{
  "version": 3,
  "sources": ["../../../client/src/panel-teambuilder-team.tsx"],
  "sourcesContent": ["/**\r\n * Teambuilder team panel\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport { PS, PSRoom, type RoomOptions, type Team } from \"./client-main\";\r\nimport { PSPanelWrapper, PSRoomPanel } from \"./panels\";\r\nimport { toID, type ID } from \"./battle-dex\";\r\nimport { BattleLog } from \"./battle-log\";\r\nimport { TeamEditor } from \"./battle-team-editor\";\r\nimport { Net, PSLoginServer } from \"./client-connection\";\r\nimport { Teams } from \"./battle-teams\";\r\nimport { CopyableURLBox } from \"./panel-chat\";\r\n\r\nclass TeamRoom extends PSRoom {\r\n\t/** Doesn't _literally_ always exist, but does in basically all code\r\n\t * and constantly checking for its existence is legitimately annoying... */\r\n\tteam!: Team;\r\n\tforceReload = false;\r\n\toverride clientCommands = this.parseClientCommands({\r\n\t\t'validate'(target) {\r\n\t\t\tif (this.team.format.length <= 4) {\r\n\t\t\t\treturn this.errorReply(`You must select a format first.`);\r\n\t\t\t}\r\n\t\t\tthis.send(`/utm ${this.team.packedTeam}`);\r\n\t\t\tthis.send(`/vtm ${this.team.format}`);\r\n\t\t},\r\n\t});\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tconst team = PS.teams.byKey[this.id.slice(5)] || null;\r\n\t\tthis.team = team!;\r\n\t\tthis.title = `[Team] ${this.team?.name || 'Error'}`;\r\n\t\tif (team) this.setFormat(team.format);\r\n\t\tthis.load();\r\n\t}\r\n\tsetFormat(format: string) {\r\n\t\tconst team = this.team;\r\n\t\tteam.format = toID(format);\r\n\t}\r\n\tload() {\r\n\t\tPS.teams.loadTeam(this.team, true)?.then(() => {\r\n\t\t\tconst team = this.team;\r\n\t\t\tif (team.uploadedPackedTeam && team.uploadedPackedTeam !== team.packedTeam) {\r\n\t\t\t\tif (this.stripNicknames(team.packedTeam) === team.uploadedPackedTeam) {\r\n\t\t\t\t\t// Team matches but nicknames were stripped; treat as unmodified\r\n\t\t\t\t\tteam.uploadedPackedTeam = team.packedTeam;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.update(null);\r\n\t\t});\r\n\t}\r\n\tupload(isPrivate: boolean) {\r\n\t\tconst team = this.team;\r\n\t\tconst cmd = team.uploaded ? 'update' : 'save';\r\n\t\t// teamName, formatid, rawPrivacy, rawTeam\r\n\t\tconst buf = [];\r\n\t\tif (team.uploaded) {\r\n\t\t\tbuf.push(team.uploaded.teamid);\r\n\t\t} else if (team.teamid) {\r\n\t\t\treturn PS.alert(`This team is for a different account. Please log into the correct account to update it.`);\r\n\t\t}\r\n\t\tbuf.push(team.name, team.format, isPrivate ? 1 : 0);\r\n\t\tconst exported = team.packedTeam;\r\n\t\tif (!exported) return PS.alert(`Add a Pokemon to your team before uploading it.`);\r\n\t\tbuf.push(exported);\r\n\t\tPS.teams.uploading = team;\r\n\t\tPS.send(`/teams ${cmd} ${buf.join(', ')}`);\r\n\t\tteam.uploadedPackedTeam = exported;\r\n\t\tthis.update(null);\r\n\t}\r\n\tstripNicknames(packedTeam: string) {\r\n\t\tconst team = Teams.unpack(packedTeam);\r\n\t\tfor (const pokemon of team) {\r\n\t\t\tpokemon.name = '';\r\n\t\t}\r\n\t\treturn Teams.pack(team);\r\n\t}\r\n\tsave() {\r\n\t\tPS.teams.save();\r\n\t\tconst title = `[Team] ${this.team?.name || 'Team'}`;\r\n\t\tif (title !== this.title) {\r\n\t\t\tthis.title = title;\r\n\t\t\tPS.update();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type FormatResource = { url: string, resources: { resource_name: string, url: string }[] } | null;\r\nclass TeamPanel extends PSRoomPanel<TeamRoom> {\r\n\tstatic readonly id = 'team';\r\n\tstatic readonly routes = ['team-*'];\r\n\tstatic readonly Model = TeamRoom;\r\n\tstatic readonly title = 'Team';\r\n\r\n\tconstructor(props?: { room: TeamRoom }) {\r\n\t\tsuper(props);\r\n\t\tconst room = this.props.room;\r\n\t\tif (room.team) {\r\n\t\t\tTeamPanel.getFormatResources(room.team.format).then(() => {\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tstatic formatResources = {} as Record<string, FormatResource>;\r\n\r\n\tstatic getFormatResources(format: string): Promise<FormatResource> {\r\n\t\tif (format in this.formatResources) return Promise.resolve(this.formatResources[format]);\r\n\t\treturn Net('https://www.smogon.com/dex/api/formats/by-ps-name/' + format).get()\r\n\t\t\t.then(result => {\r\n\t\t\t\tthis.formatResources[format] = JSON.parse(result);\r\n\t\t\t\treturn this.formatResources[format];\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tthis.formatResources[format] = null;\r\n\t\t\t\treturn this.formatResources[format];\r\n\t\t\t});\r\n\t}\r\n\r\n\thandleRename = (ev: Event) => {\r\n\t\tconst textbox = ev.currentTarget as HTMLInputElement;\r\n\t\tconst room = this.props.room;\r\n\r\n\t\troom.team.name = textbox.value.trim();\r\n\t\troom.save();\r\n\t};\r\n\r\n\tuploadTeam = (ev: Event) => {\r\n\t\tconst room = this.props.room;\r\n\t\troom.upload(room.team.uploaded ? !!room.team.uploaded.private : PS.prefs.uploadprivacy);\r\n\t};\r\n\trestore = (ev: Event) => {\r\n\t\tconst room = this.props.room;\r\n\t\tconst team = room.team;\r\n\t\tif (!team.uploadedPackedTeam) {\r\n\t\t\t// should never happen\r\n\t\t\tPS.alert(`Must use on an uploaded team.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tteam.packedTeam = team.uploadedPackedTeam;\r\n\t\troom.forceReload = true;\r\n\t\troom.save();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tcompare = (ev: Event) => {\r\n\t\tconst team = this.props.room.team;\r\n\t\tif (!team.uploadedPackedTeam) {\r\n\t\t\t// should never happen\r\n\t\t\tPS.alert(`Must use on an uploaded team.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst uploadedTeam = Teams.export(Teams.unpack(team.uploadedPackedTeam));\r\n\t\tconst localTeam = Teams.export(Teams.unpack(team.packedTeam));\r\n\t\tPS.alert(BattleLog.html`|html|<table class=\"table\" style=\"width:100%;font-size:14px\"><tr><th>Local</th><th>Uploaded</th></tr><tr><td>${localTeam}</td><td>${uploadedTeam}</td></tr></table>`, { width: 720 });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\tchangePrivacyPref = (ev: Event) => {\r\n\t\tPS.prefs.uploadprivacy = !(ev.currentTarget as HTMLInputElement).checked;\r\n\t\tPS.prefs.save();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\thandleChangeFormat = (ev: Event) => {\r\n\t\tconst dropdown = ev.currentTarget as HTMLButtonElement;\r\n\t\tconst room = this.props.room;\r\n\r\n\t\troom.setFormat(dropdown.value);\r\n\t\troom.save();\r\n\t\tthis.forceUpdate();\r\n\t\tTeamPanel.getFormatResources(room.team.format).then(() => {\r\n\t\t\tthis.forceUpdate();\r\n\t\t});\r\n\t};\r\n\tsave = () => {\r\n\t\tthis.props.room.save();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\trenderResources() {\r\n\t\tconst { room } = this.props;\r\n\t\tconst team = room.team;\r\n\t\tconst info = TeamPanel.formatResources[team.format];\r\n\t\tconst formatName = BattleLog.formatName(team.format);\r\n\t\treturn (info && (info.resources.length || info.url)) ? (\r\n\t\t\t<details class=\"details\" open>\r\n\t\t\t\t<summary><strong>Teambuilding resources for {formatName}</strong></summary>\r\n\t\t\t\t<div style=\"margin-left:5px\"><ul>\r\n\t\t\t\t\t{info.resources.map(resource => (\r\n\t\t\t\t\t\t<li><p><a href={resource.url} target=\"_blank\">{resource.resource_name}</a></p></li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tFind {info.resources.length ? 'more ' : ''}\r\n\t\t\t\t\thelpful resources for {formatName} on <a href={info.url} target=\"_blank\">the Smogon Dex</a>.\r\n\t\t\t\t</p></div>\r\n\t\t\t</details>\r\n\t\t) : null;\r\n\t}\r\n\toverride componentDidUpdate() {\r\n\t\tconst room = this.props.room;\r\n\t\troom.load();\r\n\t}\r\n\toverride render() {\r\n\t\tconst { room } = this.props;\r\n\t\tconst team = room.team;\r\n\t\tif (!team || room.forceReload) {\r\n\t\t\tif (room.forceReload) {\r\n\t\t\t\troom.forceReload = false;\r\n\t\t\t\troom.update(null);\r\n\t\t\t}\r\n\t\t\treturn <PSPanelWrapper room={room}>\r\n\t\t\t\t<a class=\"button\" href=\"teambuilder\" data-target=\"replace\">\r\n\t\t\t\t\t<i class=\"fa fa-chevron-left\" aria-hidden></i> List\r\n\t\t\t\t</a>\r\n\t\t\t\t<p class=\"error\">\r\n\t\t\t\t\tTeam doesn't exist\r\n\t\t\t\t</p>\r\n\t\t\t</PSPanelWrapper>;\r\n\t\t}\r\n\r\n\t\tconst unsaved = team.uploaded && team.uploadedPackedTeam ? team.uploadedPackedTeam !== team.packedTeam : false;\r\n\t\treturn <PSPanelWrapper room={room} scrollable><div class=\"pad\">\r\n\t\t\t<a class=\"button\" href=\"teambuilder\" data-target=\"replace\">\r\n\t\t\t\t<i class=\"fa fa-chevron-left\" aria-hidden></i> Teams\r\n\t\t\t</a> {}\r\n\t\t\t{team.uploaded ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button class={`button${unsaved ? ' button-first' : ''}`} data-href={`teamstorage-${team.key}`}>\r\n\t\t\t\t\t\t<i class=\"fa fa-globe\"></i> Account {team.uploaded.private ? '' : \"(public)\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{unsaved && <button class=\"button button-last\" onClick={this.uploadTeam}>\r\n\t\t\t\t\t\t<strong>Upload changes</strong>\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t</>\r\n\t\t\t) : team.teamid ? (\r\n\t\t\t\t<button class=\"button\" data-href={`teamstorage-${team.key}`}>\r\n\t\t\t\t\t<i class=\"fa fa-plug\"></i> Disconnected (wrong account?)\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<button class=\"button\" data-href={`teamstorage-${team.key}`}>\r\n\t\t\t\t\t<i class=\"fa fa-laptop\"></i> Local\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<div style=\"float:right\"><button\r\n\t\t\t\tname=\"format\" value={team.format} data-selecttype=\"teambuilder\"\r\n\t\t\t\tclass=\"button\" data-href=\"/formatdropdown\" onChange={this.handleChangeFormat}\r\n\t\t\t>\r\n\t\t\t\t<i class=\"fa fa-folder-o\"></i> {BattleLog.formatName(team.format)} {}\r\n\t\t\t\t{team.format.length <= 4 && <em>(uncategorized)</em>} <i class=\"fa fa-caret-down\"></i>\r\n\t\t\t</button></div>\r\n\t\t\t<label class=\"label teamname\">\r\n\t\t\t\tTeam name:{}\r\n\t\t\t\t<input\r\n\t\t\t\t\tclass=\"textbox\" type=\"text\" value={team.name}\r\n\t\t\t\t\tonInput={this.handleRename} onChange={this.handleRename} onKeyUp={this.handleRename}\r\n\t\t\t\t/>\r\n\t\t\t</label>\r\n\t\t\t<TeamEditor\r\n\t\t\t\tteam={team} onChange={this.save} readOnly={!!team.teamid && !team.uploadedPackedTeam} resources={this.renderResources()}\r\n\t\t\t>\r\n\t\t\t\t{!!(team.packedTeam && team.format.length > 4) && <p>\r\n\t\t\t\t\t<button data-cmd=\"/validate\" class=\"button\"><i class=\"fa fa-check\"></i> Validate</button>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{!!(team.packedTeam || team.uploaded) && <p class=\"infobox\" style=\"padding: 5px 8px\">\r\n\t\t\t\t\t{team.uploadedPackedTeam && !team.uploaded ? <>\r\n\t\t\t\t\t\tUploading...\r\n\t\t\t\t\t</> : team.uploaded ? <>\r\n\t\t\t\t\t\t<small>Share URL:</small> {}\r\n\t\t\t\t\t\t<CopyableURLBox\r\n\t\t\t\t\t\t\turl={`https://psim.us/t/${team.uploaded.teamid}${team.uploaded.private ? '-' + team.uploaded.private : ''}`}\r\n\t\t\t\t\t\t/> {}\r\n\t\t\t\t\t\t{unsaved && <div style=\"padding-top:5px\">\r\n\t\t\t\t\t\t\t<button class=\"button\" onClick={this.uploadTeam}>\r\n\t\t\t\t\t\t\t\t<i class=\"fa fa-upload\"></i> <strong>Upload changes</strong>\r\n\t\t\t\t\t\t\t</button> {}\r\n\t\t\t\t\t\t\t<button class=\"button\" onClick={this.restore}>\r\n\t\t\t\t\t\t\t\tRevert to uploaded version\r\n\t\t\t\t\t\t\t</button> {}\r\n\t\t\t\t\t\t\t<button class=\"button\" onClick={this.compare}>\r\n\t\t\t\t\t\t\t\tCompare\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</> : !team.teamid ? <>\r\n\t\t\t\t\t\t<label class=\"checkbox inline\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname=\"teamprivacy\" checked={!PS.prefs.uploadprivacy}\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\" onChange={this.changePrivacyPref}\r\n\t\t\t\t\t\t\t/> Public\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<button class=\"button exportbutton\" onClick={this.uploadTeam}>\r\n\t\t\t\t\t\t\t<i class=\"fa fa-upload\"></i> Upload for\r\n\t\t\t\t\t\t\t{PS.prefs.uploadprivacy ? ' shareable URL' : ' shareable/searchable URL'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</> : <>\r\n\t\t\t\t\t\tThis is a disconnected team. This could be because you uploaded it\r\n\t\t\t\t\t\ton a different account, or because you deleted or un-uploaded it on\r\n\t\t\t\t\t\ta different computer. For safety, you can't edit this team. You can,\r\n\t\t\t\t\t\thowever, delete it, or make a copy (which will be editable).\r\n\t\t\t\t\t</>}\r\n\t\t\t\t</p>}\r\n\t\t\t</TeamEditor>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass ViewTeamPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'viewteam';\r\n\tstatic readonly routes = ['viewteam-*'];\r\n\tstatic readonly Model = TeamRoom;\r\n\tstatic readonly title = 'Loading...';\r\n\tteam: Team | null | undefined;\r\n\tteamData: {\r\n\t\tteam: string, private: string | null, ownerid: ID, format: ID, title: string, views: number,\r\n\t} | null = null;\r\n\toverride componentDidMount(): void {\r\n\t\tsuper.componentDidMount();\r\n\t\tconst roomid = this.props.room.id;\r\n\t\tconst [teamid, password] = roomid.slice(9).split('-');\r\n\t\tPSLoginServer.query('getteam', {\r\n\t\t\tteamid,\r\n\t\t\tpassword,\r\n\t\t\tfull: true,\r\n\t\t}).then(untypedData => {\r\n\t\t\tconst data = untypedData as ViewTeamPanel['teamData'];\r\n\t\t\tif (!data) {\r\n\t\t\t\tthis.team = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.team = {\r\n\t\t\t\tname: data.title,\r\n\t\t\t\tformat: data.format,\r\n\t\t\t\tfolder: '',\r\n\t\t\t\tpackedTeam: data.team,\r\n\t\t\t\ticonCache: null,\r\n\t\t\t\tkey: '',\r\n\t\t\t\tisBox: false,\r\n\t\t\t\tteamid: parseInt(teamid),\r\n\t\t\t};\r\n\t\t\tfor (const localTeam of PS.teams.list) {\r\n\t\t\t\tif (localTeam.teamid === this.team.teamid) {\r\n\t\t\t\t\tthis.team.key = localTeam.key;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.props.room.title = `[Team] ${this.team.name || 'Untitled team'}`;\r\n\t\t\tthis.teamData = data;\r\n\t\t\tPS.update();\r\n\t\t});\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst { room } = this.props;\r\n\t\tconst team = this.team;\r\n\t\tconst teamData = this.teamData!;\r\n\t\tif (!team) {\r\n\t\t\treturn <PSPanelWrapper room={room}>\r\n\t\t\t\t{team === null ? <p class=\"error\">\r\n\t\t\t\t\tTeam doesn't exist\r\n\t\t\t\t</p> : <p>\r\n\t\t\t\t\tLoading...\r\n\t\t\t\t</p>}\r\n\t\t\t</PSPanelWrapper>;\r\n\t\t}\r\n\r\n\t\treturn <PSPanelWrapper room={room} scrollable><div class=\"pad\">\r\n\t\t\t<h1>{team.name || \"Untitled team\"}</h1>\r\n\t\t\t<CopyableURLBox\r\n\t\t\t\turl={`https://psim.us/t/${team.teamid!}${teamData.private ? '-' + teamData.private : ''}`}\r\n\t\t\t/> {}\r\n\t\t\t<p>Uploaded by: <strong>{teamData.ownerid}</strong></p>\r\n\t\t\t<p>Format: <strong>{teamData.format}</strong></p>\r\n\t\t\t<p>Views: <strong>{teamData.views}</strong></p>\r\n\t\t\t{team.key && <p><a class=\"button\" href={`team-${team.key}`}>Edit</a></p>}\r\n\t\t\t<TeamEditor team={team} readOnly></TeamEditor>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\ntype TeamStorage = 'account' | 'public' | 'disconnected' | 'local';\r\nclass TeamStoragePanel extends PSRoomPanel {\r\n\tstatic readonly id = \"teamstorage\";\r\n\tstatic readonly routes = [\"teamstorage-*\"];\r\n\tstatic readonly location = \"semimodal-popup\";\r\n\tstatic readonly noURL = true;\r\n\r\n\tchooseOption = (ev: MouseEvent) => {\r\n\t\tconst storage = (ev.currentTarget as HTMLButtonElement).value as TeamStorage;\r\n\t\tconst room = this.props.room;\r\n\t\tconst team = this.team();\r\n\r\n\t\tif (storage === 'local' && team.uploaded) {\r\n\t\t\tPS.send(`/teams delete ${team.uploaded.teamid}`);\r\n\t\t\tteam.uploaded = undefined;\r\n\t\t\tteam.teamid = undefined;\r\n\t\t\tteam.uploadedPackedTeam = undefined;\r\n\t\t\tPS.teams.save();\r\n\t\t\t(room.getParent() as TeamRoom).update(null);\r\n\t\t} else if (storage === 'public' && team.uploaded?.private) {\r\n\t\t\tPS.send(`/teams setprivacy ${team.uploaded.teamid},no`);\r\n\t\t} else if (storage === 'account' && team.uploaded?.private === null) {\r\n\t\t\tPS.send(`/teams setprivacy ${team.uploaded.teamid},yes`);\r\n\t\t} else if (storage === 'public' && !team.teamid) {\r\n\t\t\t(room.getParent() as TeamRoom).upload(false);\r\n\t\t} else if (storage === 'account' && !team.teamid) {\r\n\t\t\t(room.getParent() as TeamRoom).upload(true);\r\n\t\t}\r\n\t\tev.stopImmediatePropagation();\r\n\t\tev.preventDefault();\r\n\t\tthis.close();\r\n\t};\r\n\tteam() {\r\n\t\tconst teamKey = this.props.room.id.slice(12);\r\n\t\tconst team = PS.teams.byKey[teamKey]!;\r\n\t\treturn team;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\r\n\t\tconst team = this.team();\r\n\t\tconst storage: TeamStorage = team.uploaded?.private ? (\r\n\t\t\t'account'\r\n\t\t) : team.uploaded ? (\r\n\t\t\t'public'\r\n\t\t) : team.teamid ? (\r\n\t\t\t'disconnected'\r\n\t\t) : (\r\n\t\t\t'local'\r\n\t\t);\r\n\r\n\t\tif (storage === 'disconnected') {\r\n\t\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t\t<div><button class=\"option cur\" data-cmd=\"/close\">\r\n\t\t\t\t\t<i class=\"fa fa-plug\"></i> <strong>Disconnected</strong><br />\r\n\t\t\t\t\tNot found in the Teams database. Maybe you uploaded it on a different account?\r\n\t\t\t\t</button></div>\r\n\t\t\t</div></PSPanelWrapper>;\r\n\t\t}\r\n\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t<div><button class={`option${storage === 'local' ? ' cur' : ''}`} onClick={this.chooseOption} value=\"local\">\r\n\t\t\t\t<i class=\"fa fa-laptop\"></i> <strong>Local</strong><br />\r\n\t\t\t\tStored in cookies on your computer. Warning: Your browser might delete these. Make sure to use backups.\r\n\t\t\t</button></div>\r\n\t\t\t<div><button class={`option${storage === 'account' ? ' cur' : ''}`} onClick={this.chooseOption} value=\"account\">\r\n\t\t\t\t<i class=\"fa fa-cloud\"></i> <strong>Account</strong><br />\r\n\t\t\t\tUploaded to the Teams database. You can share with the URL.\r\n\t\t\t</button></div>\r\n\t\t\t<div><button class={`option${storage === 'public' ? ' cur' : ''}`} onClick={this.chooseOption} value=\"public\">\r\n\t\t\t\t<i class=\"fa fa-globe\"></i> <strong>Account (public)</strong><br />\r\n\t\t\t\tUploaded to the Teams database publicly. Share with the URL or people can find it by searching.\r\n\t\t\t</button></div>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nPS.addRoomType(TeamPanel, TeamStoragePanel, ViewTeamPanel);\r\n"],
  "mappings": "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",
  "names": []
}
