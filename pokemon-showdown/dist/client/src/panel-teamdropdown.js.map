{
  "version": 3,
  "sources": ["../../../client/src/panel-teamdropdown.tsx"],
  "sourcesContent": ["/**\r\n * Team Selector Panel\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport { PS, type Team } from \"./client-main\";\r\nimport { PSIcon, PSPanelWrapper, PSRoomPanel } from \"./panels\";\r\nimport { Dex, toID, type ID } from \"./battle-dex\";\r\nimport { BattleNatures, BattleStatIDs, type StatNameExceptHP } from \"./battle-dex-data\";\r\nimport { Teams } from \"./battle-teams\";\r\n\r\nexport class PSTeambuilder {\r\n\tstatic exportPackedTeam(team: Team, newFormat?: boolean) {\r\n\t\tconst sets = Teams.unpack(team.packedTeam);\r\n\t\tconst dex = Dex.forFormat(team.format);\r\n\t\treturn Teams.export(sets, dex, newFormat);\r\n\t}\r\n\tstatic splitPrefix(buffer: string, delimiter: string, prefixOffset = 0): [string, string] {\r\n\t\tconst delimIndex = buffer.indexOf(delimiter);\r\n\t\tif (delimIndex < 0) return ['', buffer];\r\n\t\treturn [buffer.slice(prefixOffset, delimIndex), buffer.slice(delimIndex + delimiter.length)];\r\n\t}\r\n\tstatic splitLast(buffer: string, delimiter: string): [string, string] {\r\n\t\tconst delimIndex = buffer.lastIndexOf(delimiter);\r\n\t\tif (delimIndex < 0) return [buffer, ''];\r\n\t\treturn [buffer.slice(0, delimIndex), buffer.slice(delimIndex + delimiter.length)];\r\n\t}\r\n\tstatic parseExportedTeamLine(line: string, isFirstLine: boolean, set: Dex.PokemonSet) {\r\n\t\tif (isFirstLine || line.startsWith('[')) {\r\n\t\t\tlet item;\r\n\t\t\t[line, item] = line.split('@');\r\n\t\t\tline = line.trim();\r\n\t\t\titem = item?.trim();\r\n\t\t\tif (item) {\r\n\t\t\t\tset.item = item;\r\n\t\t\t\tif (toID(set.item) === 'noitem') set.item = '';\r\n\t\t\t}\r\n\t\t\tif (line.endsWith(' (M)')) {\r\n\t\t\t\tset.gender = 'M';\r\n\t\t\t\tline = line.slice(0, -4);\r\n\t\t\t}\r\n\t\t\tif (line.endsWith(' (F)')) {\r\n\t\t\t\tset.gender = 'F';\r\n\t\t\t\tline = line.slice(0, -4);\r\n\t\t\t}\r\n\t\t\tif (line.startsWith('[') && line.endsWith(']')) {\r\n\t\t\t\t// the ending `]` is necessary to establish this as ability\r\n\t\t\t\t// (rather than nickname starting with `[`)\r\n\t\t\t\tset.ability = line.slice(1, -1);\r\n\t\t\t\tif (toID(set.ability) === 'selectability') {\r\n\t\t\t\t\tset.ability = '';\r\n\t\t\t\t}\r\n\t\t\t} else if (line) {\r\n\t\t\t\tconst parenIndex = line.lastIndexOf(' (');\r\n\t\t\t\tif (line.endsWith(')') && parenIndex !== -1) {\r\n\t\t\t\t\tset.species = Dex.species.get(line.slice(parenIndex + 2, -1)).name;\r\n\t\t\t\t\tset.name = line.slice(0, parenIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tset.species = Dex.species.get(line).name;\r\n\t\t\t\t\tset.name = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (line.startsWith('Trait: ')) {\r\n\t\t\tset.ability = line.slice(7);\r\n\t\t} else if (line.startsWith('Ability: ')) {\r\n\t\t\tset.ability = line.slice(9);\r\n\t\t} else if (line.startsWith('Item: ')) {\r\n\t\t\tset.item = line.slice(6);\r\n\t\t} else if (line.startsWith('Nickname: ')) {\r\n\t\t\tset.name = line.slice(10);\r\n\t\t} else if (line.startsWith('Species: ')) {\r\n\t\t\tset.species = line.slice(9);\r\n\t\t} else if (line === 'Shiny: Yes' || line === 'Shiny') {\r\n\t\t\tset.shiny = true;\r\n\t\t} else if (line.startsWith('Level: ')) {\r\n\t\t\tset.level = +line.slice(7);\r\n\t\t} else if (line.startsWith('Happiness: ')) {\r\n\t\t\tset.happiness = +line.slice(11);\r\n\t\t} else if (line.startsWith('Pokeball: ')) {\r\n\t\t\tset.pokeball = line.slice(10);\r\n\t\t} else if (line.startsWith('Hidden Power: ')) {\r\n\t\t\tset.hpType = line.slice(14);\r\n\t\t} else if (line.startsWith('Dynamax Level: ')) {\r\n\t\t\tset.dynamaxLevel = +line.slice(15);\r\n\t\t} else if (line === 'Gigantamax: Yes' || line === 'Gigantamax') {\r\n\t\t\tset.gigantamax = true;\r\n\t\t} else if (line.startsWith('Tera Type: ')) {\r\n\t\t\tset.teraType = line.slice(11);\r\n\t\t} else if (line.startsWith('EVs: ')) {\r\n\t\t\tconst evLines = line.slice(5).split('(')[0].split('/');\r\n\t\t\tset.evs = { hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0 };\r\n\t\t\tlet plus = '', minus = '';\r\n\t\t\tfor (let evLine of evLines) {\r\n\t\t\t\tevLine = evLine.trim();\r\n\t\t\t\tconst spaceIndex = evLine.indexOf(' ');\r\n\t\t\t\tif (spaceIndex === -1) continue;\r\n\t\t\t\tconst statid = BattleStatIDs[evLine.slice(spaceIndex + 1)];\r\n\t\t\t\tif (!statid) continue;\r\n\t\t\t\tif (evLine.charAt(spaceIndex - 1) === '+') plus = statid;\r\n\t\t\t\tif (evLine.charAt(spaceIndex - 1) === '-') minus = statid;\r\n\t\t\t\tset.evs[statid] = parseInt(evLine.slice(0, spaceIndex), 10) || 0;\r\n\t\t\t}\r\n\t\t\tconst nature = this.getNature(plus as StatNameExceptHP, minus as StatNameExceptHP);\r\n\t\t\tif (nature !== 'Serious') {\r\n\t\t\t\tset.nature = nature as Dex.NatureName;\r\n\t\t\t}\r\n\t\t} else if (line.startsWith('IVs: ')) {\r\n\t\t\tconst ivLines = line.slice(5).split(' / ');\r\n\t\t\tset.ivs = { hp: 31, atk: 31, def: 31, spa: 31, spd: 31, spe: 31 };\r\n\t\t\tfor (let ivLine of ivLines) {\r\n\t\t\t\tivLine = ivLine.trim();\r\n\t\t\t\tconst spaceIndex = ivLine.indexOf(' ');\r\n\t\t\t\tif (spaceIndex === -1) continue;\r\n\t\t\t\tconst statid = BattleStatIDs[ivLine.slice(spaceIndex + 1)];\r\n\t\t\t\tif (!statid) continue;\r\n\t\t\t\tlet statval = parseInt(ivLine.slice(0, spaceIndex), 10);\r\n\t\t\t\tif (isNaN(statval)) statval = 31;\r\n\t\t\t\tset.ivs[statid] = statval;\r\n\t\t\t}\r\n\t\t} else if (/^[A-Za-z]+ (N|n)ature/.exec(line)) {\r\n\t\t\tlet natureIndex = line.indexOf(' Nature');\r\n\t\t\tif (natureIndex === -1) natureIndex = line.indexOf(' nature');\r\n\t\t\tif (natureIndex === -1) return;\r\n\t\t\tline = line.slice(0, natureIndex);\r\n\t\t\tif (line !== 'undefined') set.nature = line as Dex.NatureName;\r\n\t\t} else if (line.startsWith('-') || line.startsWith('~') || line.startsWith('Move:')) {\r\n\t\t\tif (line.startsWith('Move:')) line = line.slice(4);\r\n\t\t\tline = line.slice(line.charAt(1) === ' ' ? 2 : 1);\r\n\t\t\tif (line.startsWith('Hidden Power [')) {\r\n\t\t\t\tconst hpType = line.slice(14, -1) as Dex.TypeName;\r\n\t\t\t\tline = 'Hidden Power ' + hpType;\r\n\t\t\t\tset.hpType = hpType;\r\n\t\t\t}\r\n\t\t\tif (line === 'Frustration' && set.happiness === undefined) {\r\n\t\t\t\tset.happiness = 0;\r\n\t\t\t}\r\n\t\t\tset.moves.push(line);\r\n\t\t}\r\n\t}\r\n\tstatic getNature(plus: StatNameExceptHP | '', minus: StatNameExceptHP | '') {\r\n\t\tif (!plus || !minus) {\r\n\t\t\treturn 'Serious';\r\n\t\t}\r\n\t\tfor (const i in BattleNatures) {\r\n\t\t\tif (BattleNatures[i as 'Serious'].plus === plus && BattleNatures[i as 'Serious'].minus === minus) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 'Serious';\r\n\t}\r\n\tstatic importTeam(buffer: string): Dex.PokemonSet[] {\r\n\t\tconst lines = buffer.split(\"\\n\");\r\n\r\n\t\tconst sets: Dex.PokemonSet[] = [];\r\n\t\tlet curSet: Dex.PokemonSet | null = null;\r\n\r\n\t\twhile (lines.length && !lines[0]) lines.shift();\r\n\t\twhile (lines.length && !lines[lines.length - 1]) lines.pop();\r\n\r\n\t\tif (lines.length === 1 && lines[0].includes('|')) {\r\n\t\t\treturn Teams.unpack(lines[0]);\r\n\t\t}\r\n\t\tfor (let line of lines) {\r\n\t\t\tline = line.trim();\r\n\t\t\tif (line === '' || line === '---') {\r\n\t\t\t\tcurSet = null;\r\n\t\t\t} else if (line.startsWith('===')) {\r\n\t\t\t\t// team backup format; ignore\r\n\t\t\t} else if (line.includes('|')) {\r\n\t\t\t\t// packed format\r\n\t\t\t\tconst team = PS.teams.unpackLine(line);\r\n\t\t\t\tif (!team) continue;\r\n\t\t\t\treturn Teams.unpack(team.packedTeam);\r\n\t\t\t} else if (!curSet) {\r\n\t\t\t\tcurSet = {\r\n\t\t\t\t\tname: '', species: '', gender: '',\r\n\t\t\t\t\tmoves: [],\r\n\t\t\t\t};\r\n\t\t\t\tsets.push(curSet);\r\n\t\t\t\tthis.parseExportedTeamLine(line, true, curSet);\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseExportedTeamLine(line, false, curSet);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sets;\r\n\t}\r\n\tstatic importTeamBackup(buffer: string): Team[] {\r\n\t\tconst teams: Team[] = [];\r\n\t\tconst lines = buffer.split(\"\\n\");\r\n\r\n\t\tlet curTeam: Team | null = null;\r\n\t\tlet sets: Dex.PokemonSet[] | null = null;\r\n\r\n\t\tlet curSet: Dex.PokemonSet | null = null;\r\n\r\n\t\twhile (lines.length && !lines[0]) lines.shift();\r\n\t\twhile (lines.length && !lines[lines.length - 1]) lines.pop();\r\n\r\n\t\tfor (let line of lines) {\r\n\t\t\tline = line.trim();\r\n\t\t\tif (line === '' || line === '---') {\r\n\t\t\t\tcurSet = null;\r\n\t\t\t} else if (line.startsWith('===')) {\r\n\t\t\t\tif (curTeam) {\r\n\t\t\t\t\t// not the first team, store the previous team\r\n\t\t\t\t\tcurTeam.packedTeam = Teams.pack(sets);\r\n\t\t\t\t\tteams.push(curTeam);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurTeam = {\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\tformat: '' as ID,\r\n\t\t\t\t\tpackedTeam: '',\r\n\t\t\t\t\tfolder: '',\r\n\t\t\t\t\tkey: '',\r\n\t\t\t\t\ticonCache: '',\r\n\t\t\t\t\tisBox: false,\r\n\t\t\t\t};\r\n\t\t\t\tsets = [];\r\n\r\n\t\t\t\tline = line.slice(3, -3).trim();\r\n\t\t\t\t[curTeam.format, line] = this.splitPrefix(line, ']', 1) as [ID, string];\r\n\t\t\t\tif (!curTeam.format) curTeam.format = 'gen8' as ID;\r\n\t\t\t\telse if (!curTeam.format.startsWith('gen')) curTeam.format = `gen6${curTeam.format}` as ID;\r\n\r\n\t\t\t\t[curTeam.folder, curTeam.name] = this.splitPrefix(line, '/');\r\n\t\t\t} else if (line.includes('|')) {\r\n\t\t\t\tif (curTeam) {\r\n\t\t\t\t\t// not the first team, store the previous team\r\n\t\t\t\t\tcurTeam.packedTeam = Teams.pack(sets);\r\n\t\t\t\t\tteams.push(curTeam);\r\n\t\t\t\t}\r\n\t\t\t\tcurTeam = null;\r\n\t\t\t\tcurSet = null;\r\n\t\t\t\tconst team = PS.teams.unpackLine(line);\r\n\t\t\t\tif (team) teams.push(team);\r\n\t\t\t} else if (!curSet) {\r\n\t\t\t\tif (!sets) continue; // corruption\r\n\t\t\t\tcurSet = {\r\n\t\t\t\t\tname: '', species: '', gender: '',\r\n\t\t\t\t\tmoves: [],\r\n\t\t\t\t};\r\n\t\t\t\tsets.push(curSet);\r\n\t\t\t\tthis.parseExportedTeamLine(line, true, curSet);\r\n\t\t\t} else {\r\n\t\t\t\tthis.parseExportedTeamLine(line, false, curSet);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (curTeam) {\r\n\t\t\tcurTeam.packedTeam = Teams.pack(sets);\r\n\t\t\tteams.push(curTeam);\r\n\t\t}\r\n\t\treturn teams;\r\n\t}\r\n\r\n\tstatic draggedTeam: Team | null = null;\r\n\tstatic dragStart(ev: DragEvent) {\r\n\t\tconst href = (ev.currentTarget as HTMLAnchorElement)?.getAttribute('href');\r\n\t\tconst team = href ? PS.teams.byKey[href.slice(5)] : null;\r\n\t\tif (!team) return;\r\n\r\n\t\tconst dataTransfer = ev.dataTransfer;\r\n\t\tif (dataTransfer) {\r\n\t\t\tdataTransfer.effectAllowed = 'copyMove';\r\n\t\t\tdataTransfer.setData(\"text/plain\", \"[Team] \" + team.name);\r\n\t\t\tlet filename = team.name;\r\n\t\t\tif (team.format) filename = '[' + team.format + '] ' + filename;\r\n\t\t\tfilename = $.trim(filename).replace(/[\\\\/]+/g, '') + '.txt';\r\n\t\t\tconst urlprefix = \"data:text/plain;base64,\";\r\n\t\t\tconst contents = PSTeambuilder.exportPackedTeam(team).replace(/\\n/g, '\\r\\n');\r\n\t\t\tconst downloadurl = \"text/plain:\" + filename + \":\" + urlprefix + encodeURIComponent(window.btoa(unescape(encodeURIComponent(contents))));\r\n\t\t\tconsole.log(downloadurl);\r\n\t\t\tdataTransfer.setData(\"DownloadURL\", downloadurl);\r\n\t\t}\r\n\r\n\t\tPS.dragging = { type: 'team', team, folder: null };\r\n\t\t// app.draggingRoom = this.id;\r\n\t\t// app.draggingLoc = parseInt(e.currentTarget.dataset.value, 10);\r\n\t\t// var elOffset = $(e.currentTarget).offset();\r\n\t\t// app.draggingOffsetX = e.originalEvent.pageX - elOffset.left;\r\n\t\t// app.draggingOffsetY = e.originalEvent.pageY - elOffset.top;\r\n\t\t// this.finalOffset = null;\r\n\t\t// setTimeout(function () {\r\n\t\t// \t$(e.currentTarget).parent().addClass('dragging');\r\n\t\t// }, 0);\r\n\t}\r\n}\r\n\r\nexport function TeamBox(props: { team: Team | null, noLink?: boolean, button?: boolean }) {\r\n\tconst team = props.team;\r\n\tlet contents;\r\n\tif (team) {\r\n\t\tteam.iconCache ||= team.packedTeam ? (\r\n\t\t\tTeams.unpackSpeciesOnly(team.packedTeam).map(\r\n\t\t\t\t// can't use <PSIcon>, weird interaction with iconCache\r\n\t\t\t\t// don't try this at home; I'm a trained professional\r\n\t\t\t\tpokemon => PSIcon({ pokemon })\r\n\t\t\t)\r\n\t\t) : (\r\n\t\t\t<em>(empty {team.isBox ? 'box' : 'team'})</em>\r\n\t\t);\r\n\t\tlet format = team.format as string;\r\n\t\tif (format.startsWith(`gen${Dex.gen}`)) format = format.slice(4);\r\n\t\tformat = (format ? `[${format}] ` : ``) + (team.folder ? `${team.folder}/` : ``);\r\n\t\tcontents = [\r\n\t\t\t<strong>{team.isBox && <i class=\"fa fa-archive\"></i>} {format && <span>{format}</span>}{team.name}</strong>,\r\n\t\t\t<small>{team.iconCache}</small>,\r\n\t\t];\r\n\t} else {\r\n\t\tcontents = [\r\n\t\t\t<em>Select a team</em>,\r\n\t\t];\r\n\t}\r\n\tconst className = `team${team?.isBox ? ' pc-box' : ''}`;\r\n\tif (props.button) {\r\n\t\treturn <button class={className} value={team ? team.key : ''}>\r\n\t\t\t{contents}\r\n\t\t</button>;\r\n\t}\r\n\tif (props.noLink) {\r\n\t\treturn <div class={className}>\r\n\t\t\t{contents}\r\n\t\t</div>;\r\n\t}\r\n\treturn <a href={`team-${team ? team.key : ''}`} class={className} draggable onDragStart={PSTeambuilder.dragStart}>\r\n\t\t{contents}\r\n\t</a>;\r\n}\r\n\r\n/**\r\n * Team selector popup\r\n */\r\n\r\nclass TeamDropdownPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'teamdropdown';\r\n\tstatic readonly routes = ['teamdropdown'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\tgen = '';\r\n\tformat: string | null = null;\r\n\tgetTeams() {\r\n\t\tif (!this.format && !this.gen) return PS.teams.list;\r\n\t\treturn PS.teams.list.filter(team => {\r\n\t\t\tif (this.gen && !team.format.startsWith(this.gen)) return false;\r\n\t\t\tif (this.format && team.format !== this.format) return false;\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\tsetFormat = (ev: MouseEvent) => {\r\n\t\tconst target = ev.currentTarget as HTMLButtonElement;\r\n\t\tthis.format = (target.name === 'format' && target.value) || '';\r\n\t\tthis.gen = (target.name === 'gen' && target.value) || '';\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tclick = (e: MouseEvent) => {\r\n\t\tlet curTarget = e.target as HTMLElement | null;\r\n\t\tlet target;\r\n\t\twhile (curTarget && curTarget !== e.currentTarget) {\r\n\t\t\tif (curTarget.tagName === 'BUTTON') {\r\n\t\t\t\ttarget = curTarget as HTMLButtonElement;\r\n\t\t\t}\r\n\t\t\tcurTarget = curTarget.parentElement;\r\n\t\t}\r\n\t\tif (!target) return;\r\n\r\n\t\tPS.teams.loadTeam(PS.teams.byKey[target.value], true);\r\n\t\tthis.chooseParentValue(target.value);\r\n\t};\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tif (!room.parentElem) {\r\n\t\t\treturn <PSPanelWrapper room={room}>\r\n\t\t\t\t<p>Error: You tried to open a team selector, but you have nothing to select a team for.</p>\r\n\t\t\t</PSPanelWrapper>;\r\n\t\t}\r\n\t\tconst baseFormat = room.parentElem.getAttribute('data-format') || Dex.modid;\r\n\t\tlet isFirstLoad = this.format === null;\r\n\t\tif (isFirstLoad) {\r\n\t\t\tthis.format = baseFormat;\r\n\t\t}\r\n\t\tlet teams = this.getTeams();\r\n\t\tif (!teams.length && this.format && isFirstLoad) {\r\n\t\t\tthis.gen = this.format.slice(0, 4);\r\n\t\t\tthis.format = '';\r\n\t\t\tteams = this.getTeams();\r\n\t\t}\r\n\t\tif (!teams.length && this.gen && isFirstLoad) {\r\n\t\t\tthis.gen = '';\r\n\t\t\tteams = this.getTeams();\r\n\t\t}\r\n\r\n\t\tlet availableWidth = document.body.offsetWidth;\r\n\t\tlet width = 307;\r\n\t\tif (availableWidth > 636) width = 613;\r\n\t\tif (availableWidth > 945) width = 919;\r\n\r\n\t\tlet teamBuckets: { [folder: string]: Team[] } = {};\r\n\t\tfor (const team of teams) {\r\n\t\t\tconst list = teamBuckets[team.folder] || (teamBuckets[team.folder] = []);\r\n\t\t\tlist.push(team);\r\n\t\t}\r\n\r\n\t\tlet teamList = [];\r\n\r\n\t\tconst baseGen = baseFormat.slice(0, 4);\r\n\t\tlet genList: string[] = [];\r\n\t\tfor (const team of PS.teams.list) {\r\n\t\t\tconst gen = team.format.slice(0, 4);\r\n\t\t\tif (gen && !genList.includes(gen)) genList.push(gen);\r\n\t\t}\r\n\t\tconst hasOtherGens = genList.length > 1 || genList[0] !== baseGen;\r\n\r\n\t\tteamList.push(<p>\r\n\t\t\t{baseFormat.length > 4 && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclass={'button' + (baseFormat === this.format ? ' disabled' : '')}\r\n\t\t\t\t\tonClick={this.setFormat} name=\"format\" value={baseFormat}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i class=\"fa fa-folder-o\" aria-hidden></i> [{baseFormat.slice(0, 4)}] {baseFormat.slice(4)}\r\n\t\t\t\t</button>\r\n\t\t\t)} {}\r\n\t\t\t<button\r\n\t\t\t\tclass={'button' + (baseGen === this.format ? ' disabled' : '')} onClick={this.setFormat} name=\"format\" value={baseGen}\r\n\t\t\t>\r\n\t\t\t\t<i class=\"fa fa-folder-o\" aria-hidden></i> [{baseGen}] <em>(uncategorized)</em>\r\n\t\t\t</button> {}\r\n\t\t\t<button\r\n\t\t\t\tclass={'button' + (baseGen === this.gen ? ' disabled' : '')} onClick={this.setFormat} name=\"gen\" value={baseGen}\r\n\t\t\t>\r\n\t\t\t\t<i class=\"fa fa-folder-o\" aria-hidden></i> [{baseGen}] <em>(all)</em>\r\n\t\t\t</button> {}\r\n\t\t\t{hasOtherGens && !this.gen && (\r\n\t\t\t\t<button class=\"button\" onClick={this.setFormat} name=\"gen\" value={baseGen}>Other gens</button>\r\n\t\t\t)}\r\n\t\t</p>);\r\n\r\n\t\tif (hasOtherGens && this.gen) {\r\n\t\t\tteamList.push(<h2>Other gens</h2>);\r\n\t\t\tteamList.push(<p>{genList.sort().map(gen => [\r\n\t\t\t\t<button class={'button' + (gen === this.gen ? ' disabled' : '')} onClick={this.setFormat} name=\"gen\" value={gen}>\r\n\t\t\t\t\t<i class=\"fa fa-folder-o\" aria-hidden></i> [{gen}] <em>(all)</em>\r\n\t\t\t\t</button>,\r\n\t\t\t\t\" \",\r\n\t\t\t])}</p>);\r\n\t\t}\r\n\r\n\t\tlet isEmpty = true;\r\n\t\tfor (let folder in teamBuckets) {\r\n\t\t\tif (folder && (this.gen || this.format)) {\r\n\t\t\t\tteamList.push(<h2>\r\n\t\t\t\t\t<i class=\"fa fa-folder-open\" aria-hidden></i> {folder} + {}\r\n\t\t\t\t\t<i class=\"fa fa-folder-open-o\" aria-hidden></i> {this.format || this.gen}\r\n\t\t\t\t</h2>);\r\n\t\t\t} else if (folder) {\r\n\t\t\t\tteamList.push(<h2>\r\n\t\t\t\t\t<i class=\"fa fa-folder-open\" aria-hidden></i> {folder}\r\n\t\t\t\t</h2>);\r\n\t\t\t} else if (this.gen || this.format) {\r\n\t\t\t\tteamList.push(<h2>\r\n\t\t\t\t\t<i class=\"fa fa-folder-open-o\" aria-hidden></i> {this.format || this.gen}\r\n\t\t\t\t</h2>);\r\n\t\t\t} else {\r\n\t\t\t\tteamList.push(<h2>\r\n\t\t\t\t\t<i class=\"fa fa-folder-open-o\" aria-hidden></i> Teams not in any folders\r\n\t\t\t\t</h2>);\r\n\t\t\t}\r\n\t\t\tteamList.push(<ul class=\"teamdropdown\" onClick={this.click}>\r\n\t\t\t\t{teamBuckets[folder].map(team => <li key={team.key} style={{ display: 'inline-block' }}>\r\n\t\t\t\t\t<TeamBox team={team} button />\r\n\t\t\t\t</li>)}\r\n\t\t\t</ul>);\r\n\t\t\tisEmpty = false;\r\n\t\t}\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={width}><div class=\"pad\">\r\n\t\t\t{teamList}\r\n\t\t\t{isEmpty && <p><em>No teams found</em></p>}\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nexport interface FormatData {\r\n\tid: ID;\r\n\tname: string;\r\n\tteam?: 'preset' | null;\r\n\tsection: string;\r\n\tcolumn: number;\r\n\tsearchShow?: boolean;\r\n\tchallengeShow?: boolean;\r\n\ttournamentShow?: boolean;\r\n\trated: boolean;\r\n\tteambuilderLevel?: number | null;\r\n\tteambuilderFormat?: ID;\r\n\tbattleFormat?: string;\r\n\tisTeambuilderFormat: boolean;\r\n\teffectType: 'Format';\r\n}\r\n\r\ndeclare const BattleFormats: { [id: string]: FormatData };\r\n\r\nexport type SelectType = 'teambuilder' | 'challenge' | 'search' | 'tournament';\r\nclass FormatDropdownPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'formatdropdown';\r\n\tstatic readonly routes = ['formatdropdown'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\tgen = '' as ID;\r\n\tformat: string | null = null;\r\n\tsearch = '';\r\n\tclick = (e: MouseEvent) => {\r\n\t\tlet curTarget = e.target as HTMLElement | null;\r\n\t\tlet target;\r\n\t\tif (curTarget?.tagName === 'I') return;\r\n\t\twhile (curTarget && curTarget !== e.currentTarget) {\r\n\t\t\tif (curTarget.tagName === 'BUTTON') {\r\n\t\t\t\ttarget = curTarget as HTMLButtonElement;\r\n\t\t\t}\r\n\t\t\tcurTarget = curTarget.parentElement;\r\n\t\t}\r\n\t\tif (!target) return;\r\n\r\n\t\tthis.chooseParentValue(target.value);\r\n\t};\r\n\tupdateSearch = (ev: Event) => {\r\n\t\tthis.search = (ev.currentTarget as HTMLInputElement).value;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\ttoggleGen = (ev: Event) => {\r\n\t\tconst target = ev.currentTarget as HTMLButtonElement;\r\n\t\tthis.gen = this.gen === target.value ? '' as ID : target.value as ID;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tif (!room.parentElem) {\r\n\t\t\treturn <PSPanelWrapper room={room}>\r\n\t\t\t\t<p>Error: You tried to open a format selector, but you have nothing to select a format for.</p>\r\n\t\t\t</PSPanelWrapper>;\r\n\t\t}\r\n\r\n\t\tlet formatsLoaded = !!window.BattleFormats;\r\n\t\tif (formatsLoaded) {\r\n\t\t\tformatsLoaded = false;\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t\tfor (let i in window.BattleFormats) {\r\n\t\t\t\tformatsLoaded = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst curGen = (gen: string) => this.gen === gen ? ' cur' : '';\r\n\t\tconst searchBar = <div style=\"margin-bottom: 0.5em\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"search\" name=\"search\" placeholder=\"Search formats\" class=\"textbox autofocus\" autocomplete=\"off\"\r\n\t\t\t\tonInput={this.updateSearch} onChange={this.updateSearch}\r\n\t\t\t/> {}\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen9\" class={`button button-first${curGen('gen9')}`}>Gen 9</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen8\" class={`button button-middle${curGen('gen8')}`}>8</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen7\" class={`button button-middle${curGen('gen7')}`}>7</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen6\" class={`button button-middle${curGen('gen6')}`}>6</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen5\" class={`button button-middle${curGen('gen5')}`}>5</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen4\" class={`button button-middle${curGen('gen4')}`}>4</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen3\" class={`button button-middle${curGen('gen3')}`}>3</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen2\" class={`button button-middle${curGen('gen2')}`}>2</button>\r\n\t\t\t<button onClick={this.toggleGen} value=\"gen1\" class={`button button-last${curGen('gen1')}`}>1</button>\r\n\t\t</div>;\r\n\t\tif (!formatsLoaded) {\r\n\t\t\treturn <PSPanelWrapper room={room}><div class=\"pad\">\r\n\t\t\t\t{searchBar}\r\n\t\t\t\t<p>Loading...</p>\r\n\t\t\t</div></PSPanelWrapper>;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * 'challenge' hides search-only formats, and 'search' hides challenge-only\r\n\t\t * formats. 'teambuilder' shows teambuilder formats (removing parentheses\r\n\t\t * from format names).\r\n\t\t */\r\n\t\tconst selectType: SelectType = (\r\n\t\t\troom.parentElem.getAttribute('data-selecttype') as any || 'challenge'\r\n\t\t);\r\n\t\tconst curFormat = toID((room.parentElem as HTMLButtonElement).value);\r\n\t\tconst formats = Object.values(BattleFormats).filter(format => {\r\n\t\t\tif (selectType === 'challenge' && format.challengeShow === false) return false;\r\n\t\t\tif (selectType === 'search' && format.searchShow === false) return false;\r\n\t\t\tif (selectType === 'tournament' && format.tournamentShow === false) return false;\r\n\t\t\tif (selectType === 'teambuilder' && format.team) return false;\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tlet curSection = '';\r\n\t\tlet curColumnNum = 0;\r\n\t\tlet curColumn: ({ id: ID, name: string, section: string } | { id: null, section: string })[] = [];\r\n\t\tconst columns = [curColumn];\r\n\t\tconst searchID = toID(this.search);\r\n\t\tfor (const format of formats) {\r\n\t\t\tif (searchID && !toID(format.name).includes(searchID)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (this.gen && !format.id.startsWith(this.gen)) continue;\r\n\r\n\t\t\tif (format.column !== curColumnNum) {\r\n\t\t\t\tif (curColumn.length) {\r\n\t\t\t\t\tcurColumn = [];\r\n\t\t\t\t\tcolumns.push(curColumn);\r\n\t\t\t\t}\r\n\t\t\t\tcurColumnNum = format.column;\r\n\t\t\t}\r\n\t\t\tif (format.section !== curSection) {\r\n\t\t\t\tcurSection = format.section;\r\n\t\t\t\tif (curSection) {\r\n\t\t\t\t\tcurColumn.push({ id: null, section: curSection });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurColumn.push(format);\r\n\t\t}\r\n\t\tif (this.gen && selectType === 'teambuilder') {\r\n\t\t\tcolumns[0].unshift({\r\n\t\t\t\tid: this.gen,\r\n\t\t\t\tname: `[Gen ${this.gen.slice(3)}]`,\r\n\t\t\t\tsection: 'No Format',\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst width = Math.max(columns.length, 2.1) * 225 + 30;\r\n\t\tconst noResults = curColumn.length === 0;\r\n\t\tconst starredPrefs = PS.prefs.starredformats || {};\r\n\t\t// reverse because the newest starred format should be the default\r\n\t\tconst starred = Object.keys(starredPrefs).filter(id => starredPrefs[id] === true).reverse();\r\n\t\tlet starredDone = false;\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={width}><div class=\"pad\">\r\n\t\t\t{searchBar}\r\n\t\t\t{columns.map(column => (\r\n\t\t\t\t<ul class=\"options\" onClick={this.click}>\r\n\t\t\t\t\t{!starredDone && starred?.map((id, i) => {\r\n\t\t\t\t\t\tif (this.gen && !id.startsWith(this.gen)) return null;\r\n\t\t\t\t\t\tlet format = BattleFormats[id] as FormatData | undefined;\r\n\t\t\t\t\t\tif (/^gen[1-9]$/.test(id)) {\r\n\t\t\t\t\t\t\tformat ||= {\r\n\t\t\t\t\t\t\t\tid: id as ID,\r\n\t\t\t\t\t\t\t\tname: `[Gen ${id.slice(3)}]`,\r\n\t\t\t\t\t\t\t\tsection: 'No Format',\r\n\t\t\t\t\t\t\t\tchallengeShow: false,\r\n\t\t\t\t\t\t\t\tsearchShow: false,\r\n\t\t\t\t\t\t\t} as any;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!format) return null;\r\n\t\t\t\t\t\tif (i === starred.length - 1) starredDone = true;\r\n\t\t\t\t\t\tif (selectType === 'challenge' && format.challengeShow === false) return null;\r\n\t\t\t\t\t\tif (selectType === 'search' && format.searchShow === false) return null;\r\n\t\t\t\t\t\tif (selectType === 'teambuilder' && format.team) return null;\r\n\t\t\t\t\t\treturn <li><button value={format.name} class={`option${curFormat === format.id ? ' cur' : ''}`}>\r\n\t\t\t\t\t\t\t{format.name.replace('[Gen 8 ', '[').replace('[Gen 9] ', '').replace('[Gen 7 ', '[')}\r\n\t\t\t\t\t\t\t{format.section === 'No Format' && <em> (uncategorized)</em>}\r\n\t\t\t\t\t\t\t<i class=\"star fa fa-star cur\" data-cmd={`/unstar ${format.id}`}></i>\r\n\t\t\t\t\t\t</button></li>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{column.map(format => {\r\n\t\t\t\t\t\t// do not include starred formats\r\n\t\t\t\t\t\tif (starred.includes(format.id || '')) return '';\r\n\t\t\t\t\t\tif (format.id) {\r\n\t\t\t\t\t\t\treturn <li><button\r\n\t\t\t\t\t\t\t\tvalue={format.name}\r\n\t\t\t\t\t\t\t\tclass={`option${curFormat === format.id ? ' cur' : ''}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{format.name.replace('[Gen 8 ', '[').replace('[Gen 9] ', '').replace('[Gen 7 ', '[')}\r\n\t\t\t\t\t\t\t\t{format.section === 'No Format' && <em> (uncategorized)</em>}\r\n\t\t\t\t\t\t\t\t<i class=\"star fa fa-star-o\" data-cmd={`/star ${format.id}`}></i>\r\n\t\t\t\t\t\t\t</button></li>;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn <li><h3>{format.section}</h3></li>;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t))}\r\n\t\t\t{noResults && <p>\r\n\t\t\t\t<em>No formats{!!searchID && ` matching \"${searchID}\"`} found</em>\r\n\t\t\t</p>}\r\n\t\t\t<div style=\"float: left\"></div>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nPS.addRoomType(TeamDropdownPanel, FormatDropdownPanel);\r\n"],
  "mappings": "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",
  "names": []
}
