{
  "version": 3,
  "sources": ["../../../client/src/client-core.ts"],
  "sourcesContent": ["/**\r\n * Client core\r\n *\r\n * No dependencies.\r\n * Does three unrelated things:\r\n * 1. sets up polyfills where necessary\r\n * 2. sets up PS's model base classes\r\n * 3. sets up the model and view for PS's backgrounds\r\n *\r\n * The background is mostly here so the new background can be loaded ASAP.\r\n *\r\n * @author Guangcong Luo <guancongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nimport { Config, PS } from \"./client-main\";\r\ndeclare const ColorThief: any;\r\n\r\n/**********************************************************************\r\n * PS Models\r\n *********************************************************************/\r\n// PS's model classes are defined here\r\n\r\nconst PSURL = `${document.location.protocol !== 'http:' ? 'https:' : ''}//${Config.routes.client}/`;\r\n\r\nexport class PSSubscription<T = any> {\r\n\tobservable: PSModel<T> | PSStreamModel<T>;\r\n\tlistener: (value: T) => void;\r\n\tconstructor(observable: PSModel<T> | PSStreamModel<T>, listener: (value: T) => void) {\r\n\t\tthis.observable = observable;\r\n\t\tthis.listener = listener;\r\n\t}\r\n\tunsubscribe() {\r\n\t\tconst index = this.observable.subscriptions.indexOf(this as any);\r\n\t\tif (index >= 0) this.observable.subscriptions.splice(index, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * PS Models roughly implement the Observable spec. By default,\r\n * PSModel notifies listeners when the model is updated. With a\r\n * value, PSModel can also stream data out.\r\n *\r\n * Note that unlike React's usual paradigm, PS Models are not\r\n * immutable.\r\n */\r\nexport class PSModel<T = null> {\r\n\tsubscriptions: PSSubscription<T>[] = [];\r\n\tsubscribe(listener: (value: T) => void) {\r\n\t\tconst subscription = new PSSubscription<T>(this, listener);\r\n\t\tthis.subscriptions.push(subscription);\r\n\t\treturn subscription;\r\n\t}\r\n\tsubscribeAndRun(listener: (value: T) => void, value?: T) {\r\n\t\tconst subscription = this.subscribe(listener);\r\n\t\tsubscription.listener(value!);\r\n\t\treturn subscription;\r\n\t}\r\n\tupdate(this: PSModel): void;\r\n\tupdate(value: T): void;\r\n\tupdate(value?: T) {\r\n\t\tfor (const subscription of this.subscriptions) {\r\n\t\t\tsubscription.listener(value!);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @see PSModel\r\n *\r\n * The main difference is that StreamModel keeps a backlog,\r\n * so events generated before something subscribes are not\r\n * lost. Nullish values are not kept in the backlog.\r\n */\r\nexport class PSStreamModel<T = string> {\r\n\tsubscriptions: PSSubscription<T>[] = [];\r\n\tbacklog: NonNullable<T>[] | null = [];\r\n\tsubscribe(listener: (value: T) => void) {\r\n\t\tconst subscription: PSSubscription<T> = new PSSubscription<T>(this, listener);\r\n\t\tthis.subscriptions.push(subscription);\r\n\t\tif (this.backlog) {\r\n\t\t\tfor (const update of this.backlog) {\r\n\t\t\t\tsubscription.listener(update);\r\n\t\t\t}\r\n\t\t\tthis.backlog = null;\r\n\t\t}\r\n\t\treturn subscription;\r\n\t}\r\n\tsubscribeAndRun(listener: (value: T) => void, value: T = null!) {\r\n\t\tconst subscription = this.subscribe(listener);\r\n\t\tsubscription.listener(value);\r\n\t\treturn subscription;\r\n\t}\r\n\tupdate(value: T) {\r\n\t\tif (!this.subscriptions.length && value !== null && value !== undefined) {\r\n\t\t\t// save updates for later\r\n\t\t\t(this.backlog ||= []).push(value);\r\n\t\t}\r\n\t\tfor (const subscription of this.subscriptions) {\r\n\t\t\tsubscription.listener(value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// type JSONObject = {[k: string]: JSONValue};\r\n// type JSONArray = JSONValue[];\r\n// type JSONValue = number | string | boolean | null | JSONObject | JSONArray;\r\n\r\n/**********************************************************************\r\n * Background Model\r\n *********************************************************************/\r\n\r\n/**\r\n * PS background model. Separate from PSPrefs because unlike prefs,\r\n * backgrounds can be set separately per server, instead of being\r\n * shared among all servers.\r\n *\r\n * Streams the current URL\r\n */\r\nexport const PSBackground = new class extends PSStreamModel<string | null> {\r\n\tid = '';\r\n\tcurId = '';\r\n\tattrib: { url: string, title: string, artist: string } | null = null;\r\n\tchangeCount = 0;\r\n\tmenuColors: string[] | null = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\ttry {\r\n\t\t\tlet bg = localStorage.getItem('showdown_bg')?.split('\\n') || [''];\r\n\t\t\tif (bg.length === 1) {\r\n\t\t\t\t// id\r\n\t\t\t\tthis.load('', bg[0]);\r\n\t\t\t} else if (bg.length === 2) {\r\n\t\t\t\t// url, id\r\n\t\t\t\tthis.load(bg[0], bg[1]);\r\n\t\t\t} else if (bg.length >= 7) {\r\n\t\t\t\t// url, id, menuColors\r\n\t\t\t\tthis.load(bg[0], bg[1], bg.slice(2));\r\n\t\t\t}\r\n\t\t} catch {}\r\n\t}\r\n\tsave(bgUrl: string) {\r\n\t\tif (this.id !== 'custom') {\r\n\t\t\tlocalStorage.setItem('showdown_bg', this.id);\r\n\t\t} else if (this.menuColors) {\r\n\t\t\tlocalStorage.setItem('showdown_bg', bgUrl + '\\n' + this.id + '\\n' + this.menuColors.join('\\n'));\r\n\t\t} else {\r\n\t\t\tlocalStorage.setItem('showdown_bg', bgUrl + '\\n' + this.id);\r\n\t\t}\r\n\t}\r\n\tset(bgUrl: string, bgid: string) {\r\n\t\tthis.load(bgUrl, bgid);\r\n\t\tthis.save(bgUrl);\r\n\t}\r\n\r\n\tload(bgUrl: string, bgid: string, menuColors: string[] | null = null) {\r\n\t\t// id\r\n\t\tthis.id = bgid;\r\n\r\n\t\t// curid\r\n\t\tif (!bgid) {\r\n\t\t\tif (location.host === 'smogtours.psim.us') {\r\n\t\t\t\tbgid = 'shaymin';\r\n\t\t\t} else {\r\n\t\t\t\tconst bgs = ['horizon', 'ocean', 'waterfall', 'shaymin', 'charizards'];\r\n\t\t\t\tbgid = bgs[Math.floor(Math.random() * 5)];\r\n\t\t\t\t// if someone clicked the random button, try to roll a different bg than before\r\n\t\t\t\tif (bgid === this.curId) bgid = bgs[Math.floor(Math.random() * 5)];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.curId = bgid;\r\n\r\n\t\tif (!bgUrl) {\r\n\t\t\tbgUrl = (bgid === 'solidblue' ? '#344b6c' : PSURL + 'fx/client-bg-' + bgid + '.jpg');\r\n\t\t}\r\n\r\n\t\t// April Fool's 2016 - Digimon theme\r\n\t\t// bgid = 'digimon';\r\n\t\t// bgUrl = PSURL + 'sprites/afd/digimonbg.jpg';\r\n\r\n\t\tthis.changeCount++;\r\n\r\n\t\t// menuColors, attrib\r\n\t\tlet attrib = null;\r\n\t\tswitch (bgid) {\r\n\t\tcase 'horizon':\r\n\t\t\tmenuColors = [\r\n\t\t\t\t\"318.87640449438203,35.177865612648226%\",\r\n\t\t\t\t\"216,46.2962962962963%\",\r\n\t\t\t\t\"221.25,32.25806451612904%\",\r\n\t\t\t\t\"197.8021978021978,52.60115606936417%\",\r\n\t\t\t\t\"232.00000000000003,19.480519480519483%\",\r\n\t\t\t\t\"228.38709677419354,60.7843137254902%\",\r\n\t\t\t];\r\n\t\t\tattrib = {\r\n\t\t\t\turl: 'https://vtas.deviantart.com/art/Pokemon-Horizon-312267168',\r\n\t\t\t\ttitle: 'Horizon',\r\n\t\t\t\tartist: 'Vivian Zou',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'ocean':\r\n\t\t\tmenuColors = [\r\n\t\t\t\t\"82.8169014084507,34.63414634146342%\",\r\n\t\t\t\t\"216.16438356164383,29.55465587044534%\",\r\n\t\t\t\t\"212.92682926829266,59.42028985507245%\",\r\n\t\t\t\t\"209.18918918918916,57.51295336787566%\",\r\n\t\t\t\t\"199.2857142857143,48.275862068965495%\",\r\n\t\t\t\t\"213.11999999999998,55.06607929515419%\",\r\n\t\t\t];\r\n\t\t\tattrib = {\r\n\t\t\t\turl: 'https://quanyails.deviantart.com/art/Sunrise-Ocean-402667154',\r\n\t\t\t\ttitle: 'Sunrise Ocean',\r\n\t\t\t\tartist: 'Quanyails',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'waterfall':\r\n\t\t\tmenuColors = [\r\n\t\t\t\t\"119.31034482758622,37.66233766233767%\",\r\n\t\t\t\t\"184.36363636363635,23.012552301255226%\",\r\n\t\t\t\t\"108.92307692307692,37.14285714285714%\",\r\n\t\t\t\t\"70.34482758620689,20.567375886524818%\",\r\n\t\t\t\t\"98.39999999999998,36.76470588235296%\",\r\n\t\t\t\t\"140,38.18181818181818%\",\r\n\t\t\t];\r\n\t\t\tattrib = {\r\n\t\t\t\turl: 'https://x.com/Yilxaevum',\r\n\t\t\t\ttitle: 'Irie',\r\n\t\t\t\tartist: 'Samuel Teo',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'shaymin':\r\n\t\t\tmenuColors = [\r\n\t\t\t\t\"39.000000000000064,21.7391304347826%\",\r\n\t\t\t\t\"170.00000000000003,2.380952380952378%\",\r\n\t\t\t\t\"157.5,11.88118811881188%\",\r\n\t\t\t\t\"174.78260869565216,12.041884816753928%\",\r\n\t\t\t\t\"185.00000000000003,12.76595744680851%\",\r\n\t\t\t\t\"20,5.660377358490567%\",\r\n\t\t\t];\r\n\t\t\tattrib = {\r\n\t\t\t\turl: 'http://cargocollective.com/bluep',\r\n\t\t\t\ttitle: 'Shaymin',\r\n\t\t\t\tartist: 'Daniel Kong',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'charizards':\r\n\t\t\tmenuColors = [\r\n\t\t\t\t\"37.159090909090914,74.57627118644066%\",\r\n\t\t\t\t\"10.874999999999998,70.79646017699115%\",\r\n\t\t\t\t\"179.51612903225808,52.10084033613446%\",\r\n\t\t\t\t\"20.833333333333336,36.73469387755102%\",\r\n\t\t\t\t\"192.3076923076923,80.41237113402063%\",\r\n\t\t\t\t\"210,29.629629629629633%\",\r\n\t\t\t];\r\n\t\t\tattrib = {\r\n\t\t\t\turl: 'https://lit.link/en/seiryuuden',\r\n\t\t\t\ttitle: 'Charizards',\r\n\t\t\t\tartist: 'Jessica Valencia',\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase 'digimon':\r\n\t\t\tmenuColors = [\r\n\t\t\t\t\"170.45454545454544,27.500000000000004%\",\r\n\t\t\t\t\"84.70588235294119,13.821138211382115%\",\r\n\t\t\t\t\"112.50000000000001,7.8431372549019605%\",\r\n\t\t\t\t\"217.82608695652175,54.761904761904766%\",\r\n\t\t\t\t\"0,1.6949152542372816%\",\r\n\t\t\t\t\"\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tif (!menuColors && bgUrl.startsWith('#')) {\r\n\t\t\tconst r = parseInt(bgUrl.slice(1, 3), 16) / 255;\r\n\t\t\tconst g = parseInt(bgUrl.slice(3, 5), 16) / 255;\r\n\t\t\tconst b = parseInt(bgUrl.slice(5, 7), 16) / 255;\r\n\t\t\tconst hs = this.getHueSat(r, g, b);\r\n\t\t\tmenuColors = [hs, hs, hs, hs, hs, hs];\r\n\t\t}\r\n\t\tthis.attrib = attrib;\r\n\t\tthis.menuColors = menuColors;\r\n\t\tif (!menuColors) {\r\n\t\t\tthis.extractMenuColors(bgUrl);\r\n\t\t}\r\n\t\tthis.update(bgUrl);\r\n\t}\r\n\textractMenuColors(bgUrl: string) {\r\n\t\tconst changeCount = this.changeCount;\r\n\t\t// We need the image object to load it on a canvas to detect the main color.\r\n\t\tconst img = new Image();\r\n\t\timg.onload = () => {\r\n\t\t\tif (changeCount !== PSBackground.changeCount) return;\r\n\t\t\tif (window.ColorThief) {\r\n\t\t\t\tthis.extractMenuColorsFromImg(img, bgUrl);\r\n\t\t\t} else {\r\n\t\t\t\tPS.libsLoaded.then(() => {\r\n\t\t\t\t\tif (changeCount !== PSBackground.changeCount) return;\r\n\t\t\t\t\tthis.extractMenuColorsFromImg(img, bgUrl);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\timg.src = bgUrl;\r\n\t}\r\n\textractMenuColorsFromImg(img: HTMLImageElement, bgUrl: string) {\r\n\t\t// in case ColorThief throws from canvas,\r\n\t\t// or localStorage throws\r\n\t\ttry {\r\n\t\t\tconst colorThief = new ColorThief();\r\n\t\t\tconst colors = colorThief.getPalette(img, 5);\r\n\r\n\t\t\tlet menuColors = [];\r\n\t\t\tif (!colors) {\r\n\t\t\t\tmenuColors = ['0, 0%', '0, 0%', '0, 0%', '0, 0%', '0, 0%'];\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\t\t\tconst color = colors[i];\r\n\t\t\t\t\tconst hs = PSBackground.getHueSat(color[0] / 255, color[1] / 255, color[2] / 255);\r\n\t\t\t\t\tmenuColors.unshift(hs);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.menuColors = menuColors;\r\n\t\t\tthis.update(null);\r\n\t\t\tPSBackground.save(bgUrl);\r\n\t\t} catch {}\r\n\t}\r\n\tgetHueSat(r: number, g: number, b: number) {\r\n\t\tconst max = Math.max(r, g, b);\r\n\t\tconst min = Math.min(r, g, b);\r\n\t\tif (max === min) {\r\n\t\t\treturn `0,0%`;\r\n\t\t}\r\n\t\tconst l = (max + min) / 2;\r\n\t\tconst d = max - min;\r\n\t\tconst s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t\tlet h = 0;\r\n\t\tswitch (max) {\r\n\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t}\r\n\t\th /= 6;\r\n\t\treturn `${h * 360},${s * 100}%`;\r\n\t}\r\n};\r\n\r\n/**********************************************************************\r\n * Core Views\r\n *********************************************************************/\r\n\r\nPSBackground.subscribe(bgUrl => {\r\n\tif (!PSBackground.curId) {\r\n\t\tdocument.body.style.background = '';\r\n\t\tdocument.body.style.backgroundSize = '';\r\n\t\tconst buttonStyleElem = document.getElementById('mainmenubuttoncolors');\r\n\t\tif (buttonStyleElem) buttonStyleElem.textContent = ``;\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (bgUrl !== null) {\r\n\t\tlet background;\r\n\t\tif (bgUrl.startsWith('#')) {\r\n\t\t\tbackground = bgUrl;\r\n\t\t} else if (PSBackground.curId !== 'custom') {\r\n\t\t\tbackground = `#546bac url(${bgUrl}) no-repeat left center fixed`;\r\n\t\t} else {\r\n\t\t\tbackground = `#546bac url(${bgUrl}) no-repeat center center fixed`;\r\n\t\t}\r\n\t\tdocument.body.style.background = background;\r\n\t\tdocument.body.style.backgroundSize = 'cover';\r\n\t}\r\n\r\n\t// main menu button colors\r\n\tlet cssBuf = ``;\r\n\tlet n = 0;\r\n\tif (PSBackground.menuColors) {\r\n\t\tfor (const hs of PSBackground.menuColors) {\r\n\t\t\tn++;\r\n\t\t\tcssBuf += `body .button.mainmenu${n} { background: linear-gradient(to bottom,  hsl(${hs},72%),  hsl(${hs},52%)); border-color: hsl(${hs},40%); }\\n`;\r\n\t\t\tcssBuf += `body .button.mainmenu${n}:hover { background: linear-gradient(to bottom,  hsl(${hs},62%),  hsl(${hs},42%)); border-color: hsl(${hs},21%); }\\n`;\r\n\t\t\tcssBuf += `body .button.mainmenu${n}:active { background: linear-gradient(to bottom,  hsl(${hs},42%),  hsl(${hs},58%)); border-color: hsl(${hs},21%); }\\n`;\r\n\t\t}\r\n\t}\r\n\tlet buttonStyleElem = document.getElementById('mainmenubuttoncolors');\r\n\tif (!buttonStyleElem) {\r\n\t\tif (cssBuf) {\r\n\t\t\t// Create a <style> element the correct way\r\n\t\t\t// Direct construction like `new HTMLStyleElement()` throws an error,\r\n\t\t\t// so we use document.createElement instead\r\n\t\t\tbuttonStyleElem = document.createElement(\"style\");\r\n\t\t\tbuttonStyleElem.id = 'mainmenubuttoncolors';\r\n\t\t\tbuttonStyleElem.textContent = cssBuf;\r\n\t\t\tdocument.head.appendChild(buttonStyleElem);\r\n\t\t}\r\n\t} else {\r\n\t\tbuttonStyleElem.textContent = cssBuf;\r\n\t}\r\n});\r\n// '<a href=\"https://vtas.deviantart.com/art/Pokemon-Horizon-312267168\" target=\"_blank\" class=\"subtle\">\"Horizon\" <small>background by Vivian Zou</small></a>';\r\n// if (attrib) attrib = '<small style=\"display:block;padding-bottom:4px\">' + attrib + '</small>';\r\n"],
  "mappings": "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",
  "names": ["buttonStyleElem"]
}
