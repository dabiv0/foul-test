{
  "version": 3,
  "sources": ["../../../client/src/panel-page.tsx"],
  "sourcesContent": ["/**\r\n * Page Panel\r\n *\r\n * Panel for static content and server-rendered HTML.\r\n *\r\n * @author Adam Tran <aviettran@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport { PS, PSRoom, type RoomOptions } from \"./client-main\";\r\nimport { PSPanelWrapper, PSRoomPanel } from \"./panels\";\r\nimport { BattleLog } from \"./battle-log\";\r\nimport type { Args } from \"./battle-text-parser\";\r\n\r\nexport function SanitizedHTML(props: { children: string }) {\r\n\treturn <div dangerouslySetInnerHTML={{ __html: BattleLog.sanitizeHTML(props.children) }} />;\r\n}\r\n\r\nclass PageRoom extends PSRoom {\r\n\toverride readonly classType: string = 'html';\r\n\treadonly page?: string = this.id.split(\"-\")[1];\r\n\toverride readonly canConnect = true;\r\n\r\n\tloading = true;\r\n\thtmlData?: string;\r\n\r\n\tsetHTMLData = (htmlData?: string) => {\r\n\t\tthis.loading = false;\r\n\t\tthis.htmlData = htmlData;\r\n\t\tthis.update(null);\r\n\t};\r\n\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tthis.connect();\r\n\t\tthis.title = this.id.split('-')[1];\r\n\t}\r\n\toverride connect() {\r\n\t\tif (!this.connected && !PagePanel.clientRooms.hasOwnProperty(this.id.split('-')[1])) {\r\n\t\t\tPS.send(`/join ${this.id}`);\r\n\t\t\tthis.connected = true;\r\n\t\t\tthis.connectWhenLoggedIn = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction PageLadderHelp() {\r\n\treturn <div class=\"ladder pad\">\r\n\t\t<p>\r\n\t\t\t<button class=\"button\" data-href=\"/ladder\" data-target=\"replace\">\r\n\t\t\t\t<i class=\"fa fa-chevron-left\" aria-hidden></i> Format List\r\n\t\t\t</button>\r\n\t\t</p>\r\n\t\t<h3>How the ladder works</h3>\r\n\t\t<p>\r\n\t\t\tOur ladder displays three ratings: Elo, GXE, and Glicko-1.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Elo</strong> is the main ladder rating. It's a pretty\r\n\t\t\tnormal ladder rating: goes up when you win and down when you\r\n\t\t\tlose.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>GXE</strong> (Glicko X-Act Estimate) is an estimate of\r\n\t\t\tyour win chance against an average ladder player.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>Glicko-1</strong> is {}\r\n\t\t\t<a href=\"https://en.wikipedia.org/wiki/Glicko_rating_system\">another rating system</a>.\r\n\t\t\tIt has rating and deviation values.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\t<strong>COIL</strong> (Converging Order Invariant Ladder) is\r\n\t\t\tused for suspect tests. The more games you play, the closer\r\n\t\t\tit will get to your GXE &times; 4000. How fast it reaches\r\n\t\t\tGXE &times; 4000 depends on {}\r\n\t\t\t<a href=\"https://www.smogon.com/forums/threads/reintroducing-coil.3747719/\" target=\"_blank\">a custom B value</a> {}\r\n\t\t\twhich is different for each suspect test.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\tNote that win/loss should not be used to estimate skill, since\r\n\t\t\twho you play against is much more important than how many times\r\n\t\t\tyou win or lose. Our other stats like Elo and GXE are much better\r\n\t\t\tfor estimating skill.\r\n\t\t</p>\r\n\t</div>;\r\n}\r\n\r\nclass PagePanel extends PSRoomPanel<PageRoom> {\r\n\tstatic readonly id = 'html';\r\n\tstatic readonly routes = ['view-*'];\r\n\tstatic readonly Model = PageRoom;\r\n\tstatic clientRooms: { [key: string]: JSX.Element } = { 'ladderhelp': <PageLadderHelp /> };\r\n\r\n\t/**\r\n\t * @return true to prevent line from being sent to server\r\n\t */\r\n\toverride receiveLine(args: Args) {\r\n\t\tconst { room } = this.props;\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'title':\r\n\t\t\troom.title = args[1];\r\n\t\t\tPS.update();\r\n\t\t\treturn true;\r\n\t\tcase 'tempnotify': {\r\n\t\t\tconst [, id, title, body] = args;\r\n\t\t\troom.notify({ title, body, id });\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcase 'tempnotifyoff': {\r\n\t\t\tconst [, id] = args;\r\n\t\t\troom.dismissNotification(id);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcase 'selectorhtml':\r\n\t\t\tconst pageHTMLContainer = this.base!.querySelector('.page-html-container');\r\n\t\t\tconst selectedElement = pageHTMLContainer?.querySelector(args[1]);\r\n\t\t\tif (!selectedElement) return;\r\n\t\t\tselectedElement.innerHTML = BattleLog.sanitizeHTML(args.slice(2).join('|'));\r\n\t\t\troom.subtleNotify();\r\n\t\t\treturn true;\r\n\t\tcase 'noinit':\r\n\t\t\tif (args[1] === 'namerequired') {\r\n\t\t\t\troom.setHTMLData(args[2]);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase 'pagehtml':\r\n\t\t\troom.setHTMLData(args[1]);\r\n\t\t\troom.subtleNotify();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\toverride render() {\r\n\t\tconst { room } = this.props;\r\n\t\tlet renderPage;\r\n\t\tif (room.page !== undefined && PagePanel.clientRooms[room.page]) {\r\n\t\t\trenderPage = PagePanel.clientRooms[room.page];\r\n\t\t} else {\r\n\t\t\tif (room.loading) {\r\n\t\t\t\trenderPage = <p>Loading...</p>;\r\n\t\t\t} else {\r\n\t\t\t\trenderPage = <div class=\"page-html-container\">\r\n\t\t\t\t\t<SanitizedHTML>{room.htmlData || ''}</SanitizedHTML>\r\n\t\t\t\t</div>;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <PSPanelWrapper room={room} scrollable>\r\n\t\t\t{renderPage}\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nPS.addRoomType(PagePanel);\r\n"],
  "mappings": "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",
  "names": []
}
