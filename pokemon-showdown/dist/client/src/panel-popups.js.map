{
  "version": 3,
  "sources": ["../../../client/src/panel-popups.tsx"],
  "sourcesContent": ["import preact from \"../js/lib/preact\";\r\nimport { toID, toRoomid, toUserid, Dex } from \"./battle-dex\";\r\nimport type { ID } from \"./battle-dex-data\";\r\nimport { BattleLog } from \"./battle-log\";\r\nimport { PSLoginServer } from \"./client-connection\";\r\nimport { PSBackground } from \"./client-core\";\r\nimport {\r\n\tPS, PSRoom, Config, type RoomOptions, type PSLoginState, type RoomID, type TimestampOptions,\r\n} from \"./client-main\";\r\nimport { type BattleRoom } from \"./panel-battle\";\r\nimport { ChatUserList, type ChatRoom } from \"./panel-chat\";\r\nimport { PSRoomPanel, PSPanelWrapper, PSView } from \"./panels\";\r\nimport { PSHeader } from \"./panel-topbar\";\r\n\r\n/**\r\n * User popup\r\n */\r\n\r\nexport class UserRoom extends PSRoom {\r\n\toverride readonly classType = 'user';\r\n\tuserid!: ID;\r\n\tname!: string;\r\n\tisSelf!: boolean;\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tconst userid = (this.id.split('-')[1] || '') as ID;\r\n\t\tthis.setName(options.args?.username as string || userid);\r\n\t}\r\n\tsetName(name: string) {\r\n\t\tthis.name = name;\r\n\t\tthis.userid = toID(name);\r\n\t\tthis.isSelf = (this.userid === PS.user.userid);\r\n\t\tif (/[a-zA-Z0-9]/.test(this.name.charAt(0))) this.name = ' ' + this.name;\r\n\t\tthis.update(null);\r\n\t\tif (this.userid) PS.send(`/cmd userdetails ${this.userid}`);\r\n\t}\r\n}\r\n\r\nclass UserPanel extends PSRoomPanel<UserRoom> {\r\n\tstatic readonly id = 'user';\r\n\tstatic readonly routes = ['user-*', 'viewuser-*', 'users'];\r\n\tstatic readonly Model = UserRoom;\r\n\tstatic readonly location = 'popup';\r\n\r\n\trenderUser() {\r\n\t\tconst room = this.props.room;\r\n\t\tif (!room.userid) return null;\r\n\t\tconst user = PS.mainmenu.userdetailsCache[room.userid] || {\r\n\t\t\tuserid: room.userid, name: room.name.slice(1), avatar: '[loading]',\r\n\t\t};\r\n\t\tif (!user.avatar) {\r\n\t\t\t// offline; server doesn't know the actual username\r\n\t\t\tuser.name = room.name;\r\n\t\t}\r\n\t\tconst hideInteraction = room.id.startsWith('viewuser-');\r\n\r\n\t\tconst group = PS.server.getGroup(room.name);\r\n\t\tlet groupName: preact.ComponentChild = group.name || null;\r\n\t\tif (group.type === 'punishment') {\r\n\t\t\tgroupName = <span style=\"color:#777777\">{groupName}</span>;\r\n\t\t}\r\n\r\n\t\tconst globalGroup = PS.server.getGroup(user.group);\r\n\t\tlet globalGroupName: preact.ComponentChild = globalGroup.name && `Global ${globalGroup.name}` || null;\r\n\t\tif (globalGroup.type === 'punishment') {\r\n\t\t\tglobalGroupName = <span style=\"color:#777777\">{globalGroupName}</span>;\r\n\t\t}\r\n\t\tif (globalGroup.name === group.name) groupName = null;\r\n\r\n\t\tlet roomsList: preact.ComponentChild = null;\r\n\t\tif (user.rooms) {\r\n\t\t\tlet battlebuf = [];\r\n\t\t\tlet chatbuf = [];\r\n\t\t\tlet privatebuf = [];\r\n\t\t\tfor (let roomid in user.rooms) {\r\n\t\t\t\tif (roomid === 'global') continue;\r\n\t\t\t\tconst curRoom = user.rooms[roomid];\r\n\t\t\t\tlet roomrank: preact.ComponentChild = null;\r\n\t\t\t\tif (!/[A-Za-z0-9]/.test(roomid.charAt(0))) {\r\n\t\t\t\t\troomrank = <small style=\"color: #888; font-size: 100%\">{roomid.charAt(0)}</small>;\r\n\t\t\t\t}\r\n\t\t\t\troomid = toRoomid(roomid);\r\n\r\n\t\t\t\tif (roomid.substr(0, 7) === 'battle-') {\r\n\t\t\t\t\tconst p1 = curRoom.p1!.substr(1);\r\n\t\t\t\t\tconst p2 = curRoom.p2!.substr(1);\r\n\t\t\t\t\tconst ownBattle = (PS.user.userid === toUserid(p1) || PS.user.userid === toUserid(p2));\r\n\t\t\t\t\tconst roomLink = <a\r\n\t\t\t\t\t\thref={`/${roomid}`} class={'ilink' + (ownBattle || roomid in PS.rooms ? ' yours' : '')}\r\n\t\t\t\t\t\ttitle={`${p1 || '?'} v. ${p2 || '?'}`}\r\n\t\t\t\t\t>{roomrank}{roomid.substr(7)}</a>;\r\n\t\t\t\t\tif (curRoom.isPrivate) {\r\n\t\t\t\t\t\tif (privatebuf.length) privatebuf.push(', ');\r\n\t\t\t\t\t\tprivatebuf.push(roomLink);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (battlebuf.length) battlebuf.push(', ');\r\n\t\t\t\t\t\tbattlebuf.push(roomLink);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst roomLink = <a href={`/${roomid}`} class={'ilink' + (roomid in PS.rooms ? ' yours' : '')}>\r\n\t\t\t\t\t\t{roomrank}{roomid}\r\n\t\t\t\t\t</a>;\r\n\t\t\t\t\tif (curRoom.isPrivate) {\r\n\t\t\t\t\t\tif (privatebuf.length) privatebuf.push(\", \");\r\n\t\t\t\t\t\tprivatebuf.push(roomLink);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (chatbuf.length) chatbuf.push(', ');\r\n\t\t\t\t\t\tchatbuf.push(roomLink);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (battlebuf.length) battlebuf.unshift(<br />, <em>Battles:</em>, \" \");\r\n\t\t\tif (chatbuf.length) chatbuf.unshift(<br />, <em>Chatrooms:</em>, \" \");\r\n\t\t\tif (privatebuf.length) privatebuf.unshift(<br />, <em>Private rooms:</em>, \" \");\r\n\t\t\tif (battlebuf.length || chatbuf.length || privatebuf.length) {\r\n\t\t\t\troomsList = <small class=\"rooms\">{battlebuf}{chatbuf}{privatebuf}</small>;\r\n\t\t\t}\r\n\t\t} else if (user.rooms === false) {\r\n\t\t\troomsList = <strong class=\"offline\">OFFLINE</strong>;\r\n\t\t}\r\n\r\n\t\tconst isSelf = user.userid === PS.user.userid;\r\n\t\tlet away = false;\r\n\t\tlet status = null;\r\n\t\tif (user.status) {\r\n\t\t\taway = user.status.startsWith('!');\r\n\t\t\tstatus = away ? user.status.slice(1) : user.status;\r\n\t\t}\r\n\r\n\t\tconst buttonbar = [];\r\n\t\tif (!hideInteraction) {\r\n\t\t\tbuttonbar.push(isSelf ? (\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button class=\"button\" disabled>Challenge</button> {}\r\n\t\t\t\t\t<button class=\"button\" data-href=\"dm-\">Chat Self</button>\r\n\t\t\t\t</p>\r\n\t\t\t) : !PS.user.named ? (\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button class=\"button\" disabled>Challenge</button> {}\r\n\t\t\t\t\t<button class=\"button\" disabled>Chat</button> {}\r\n\t\t\t\t\t<button class=\"button\" disabled>{'\\u2026'}</button>\r\n\t\t\t\t</p>\r\n\t\t\t) : (\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button class=\"button\" data-href={`challenge-${user.userid}`}>Challenge</button> {}\r\n\t\t\t\t\t<button class=\"button\" data-href={`dm-${user.userid}`}>Chat</button> {}\r\n\t\t\t\t\t<button class=\"button\" data-href={`useroptions-${user.userid}-${room.parentRoomid || ''}`}>{'\\u2026'}</button>\r\n\t\t\t\t</p>\r\n\t\t\t));\r\n\t\t\tif (isSelf) {\r\n\t\t\t\tbuttonbar.push(\r\n\t\t\t\t\t<hr />,\r\n\t\t\t\t\t<p class=\"buttonbar\" style=\"text-align: right\">\r\n\t\t\t\t\t\t<button class=\"button\" data-href=\"login\"><i class=\"fa fa-pencil\" aria-hidden></i> Change name</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" data-cmd=\"/logout\"><i class=\"fa fa-power-off\" aria-hidden></i> Log out</button>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst avatar = user.avatar !== '[loading]' ? Dex.resolveAvatar(`${user.avatar || 'unknown'}`) : null;\r\n\t\treturn [<div class=\"userdetails\">\r\n\t\t\t{avatar && (room.isSelf ? (\r\n\t\t\t\t<img src={avatar} class=\"trainersprite yours\" data-href=\"avatars\" />\r\n\t\t\t) : (\r\n\t\t\t\t<img src={avatar} class=\"trainersprite\" />\r\n\t\t\t))}\r\n\t\t\t<strong><a\r\n\t\t\t\thref={`//${Config.routes.users}/${user.userid}`} target=\"_blank\"\r\n\t\t\t\tstyle={`color: ${away ? '#888888' : BattleLog.usernameColor(user.userid)}`}\r\n\t\t\t>\r\n\t\t\t\t{user.name}\r\n\t\t\t</a></strong><br />\r\n\t\t\t{status && <div class=\"userstatus\">{status}</div>}\r\n\t\t\t{groupName && <div class=\"usergroup roomgroup\">{groupName}</div>}\r\n\t\t\t{globalGroupName && <div class=\"usergroup globalgroup\">{globalGroupName}</div>}\r\n\t\t\t{user.customgroup && <div class=\"usergroup globalgroup\">{user.customgroup}</div>}\r\n\t\t\t{!hideInteraction && roomsList}\r\n\t\t</div>, buttonbar];\r\n\t}\r\n\r\n\tlookup = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tconst room = this.props.room;\r\n\t\tconst username = this.base!.querySelector<HTMLInputElement>('input[name=username]')?.value;\r\n\t\troom.setName(username || '');\r\n\t};\r\n\tmaybeReset = (ev: Event) => {\r\n\t\tconst room = this.props.room;\r\n\t\tconst username = this.base!.querySelector<HTMLInputElement>('input[name=username]')?.value;\r\n\t\tif (toID(username) !== room.userid) {\r\n\t\t\troom.setName('');\r\n\t\t}\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst showLookup = room.id === 'users';\r\n\r\n\t\treturn <PSPanelWrapper room={room}><div class=\"pad\">\r\n\t\t\t{showLookup && <form onSubmit={this.lookup} style={{ minWidth: '278px' }}>\r\n\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\tUsername: {}\r\n\t\t\t\t\t<input type=\"search\" name=\"username\" class=\"textbox autofocus\" onInput={this.maybeReset} onChange={this.maybeReset} />\r\n\t\t\t\t</label>\r\n\t\t\t\t{!room.userid && <p class=\"buttonbar\">\r\n\t\t\t\t\t<button type=\"submit\" class=\"button\"><strong>Look up</strong></button> {}\r\n\t\t\t\t\t<button name=\"closeRoom\" class=\"button\">Close</button>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{!!room.userid && <hr />}\r\n\t\t\t</form>}\r\n\r\n\t\t\t{this.renderUser()}\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass UserOptionsPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'useroptions';\r\n\tstatic readonly routes = ['useroptions-*'];\r\n\tstatic readonly location = 'popup';\r\n\tstatic readonly noURL = true;\r\n\tdeclare state: {\r\n\t\tshowMuteInput?: boolean,\r\n\t\tshowBanInput?: boolean,\r\n\t\tshowLockInput?: boolean,\r\n\t\tshowConfirm?: boolean,\r\n\t\trequestSent?: boolean,\r\n\t\tdata?: Record<string, string>,\r\n\t};\r\n\tgetTargets() {\r\n\t\tconst [, targetUser, targetRoomid] = this.props.room.id.split('-');\r\n\t\tlet targetRoom = (PS.rooms[targetRoomid] || null) as ChatRoom | null;\r\n\t\tif (targetRoom?.type !== 'chat') targetRoom = targetRoom?.getParent() as ChatRoom;\r\n\t\tif (targetRoom?.type !== 'chat') targetRoom = targetRoom?.getParent() as ChatRoom;\r\n\t\tif (targetRoom?.type !== 'chat') targetRoom = null;\r\n\t\treturn { targetUser: targetUser as ID, targetRoomid: targetRoomid as RoomID, targetRoom };\r\n\t}\r\n\r\n\thandleMute = (ev: Event) => {\r\n\t\tthis.setState({ showMuteInput: true, showBanInput: false, showLockInput: false });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\thandleBan = (ev: Event) => {\r\n\t\tthis.setState({ showBanInput: true, showMuteInput: false, showLockInput: false });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\thandleLock = (ev: Event) => {\r\n\t\tthis.setState({ showLockInput: true, showMuteInput: false, showBanInput: false });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\thandleCancel = (ev: Event) => {\r\n\t\tthis.setState({ showBanInput: false, showMuteInput: false, showLockInput: false, showConfirm: false });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\thandleConfirm = (ev: Event) => {\r\n\t\tconst data = this.state.data;\r\n\t\tif (!data) return;\r\n\t\tconst { targetUser, targetRoom } = this.getTargets();\r\n\r\n\t\tlet cmd = '';\r\n\t\tif (data.action === \"Mute\") {\r\n\t\t\tcmd += data.duration === \"1 hour\" ? \"/hourmute \" : \"/mute \";\r\n\t\t} else if (data.action === \"Ban\") {\r\n\t\t\tcmd += data.duration === \"1 week\" ? \"/weekban \" : \"/ban \";\r\n\t\t} else if (data.action === \"Lock\") {\r\n\t\t\tcmd += data.duration === \"1 week\" ? \"/weeklock \" : \"/lock \";\r\n\t\t} else if (data.action === \"Namelock\") {\r\n\t\t\tcmd += \"/namelock \";\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcmd += `${targetUser} ${data.reason ? ',' + data.reason : ''}`;\r\n\t\ttargetRoom?.send(cmd);\r\n\t\tthis.close();\r\n\t};\r\n\r\n\thandleAddFriend = (ev: Event) => {\r\n\t\tconst { targetUser, targetRoom } = this.getTargets();\r\n\t\ttargetRoom?.send(`/friend add ${targetUser}`);\r\n\t\tthis.setState({ requestSent: true });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\thandleIgnore = () => {\r\n\t\tconst { targetUser, targetRoom } = this.getTargets();\r\n\t\ttargetRoom?.send(`/ignore ${targetUser}`);\r\n\t\tthis.close();\r\n\t};\r\n\r\n\thandleUnignore = () => {\r\n\t\tconst { targetUser, targetRoom } = this.getTargets();\r\n\t\ttargetRoom?.send(`/unignore ${targetUser}`);\r\n\t\tthis.close();\r\n\t};\r\n\r\n\tmuteUser = (ev: Event) => {\r\n\t\tthis.setState({ showMuteInput: false });\r\n\t\tconst hrMute = (ev.currentTarget as HTMLButtonElement).value === \"1hr\";\r\n\t\tconst reason = this.base?.querySelector<HTMLInputElement>(\"input[name=mutereason]\")?.value;\r\n\t\tconst data = {\r\n\t\t\taction: 'Mute',\r\n\t\t\treason,\r\n\t\t\tduration: hrMute ? \"1 hour\" : \"7 minutes\",\r\n\t\t};\r\n\t\tthis.setState({ data, showConfirm: true });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\tbanUser = (ev: Event) => {\r\n\t\tthis.setState({ showBanInput: false });\r\n\t\tconst weekBan = (ev.currentTarget as HTMLButtonElement).value === \"1wk\";\r\n\t\tconst reason = this.base?.querySelector<HTMLInputElement>(\"input[name=banreason]\")?.value;\r\n\t\tconst data = {\r\n\t\t\taction: 'Ban',\r\n\t\t\treason,\r\n\t\t\tduration: weekBan ? \"1 week\" : \"2 days\",\r\n\t\t};\r\n\t\tthis.setState({ data, showConfirm: true });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\tlockUser = (ev: Event) => {\r\n\t\tthis.setState({ showLockInput: false });\r\n\t\tconst weekLock = (ev.currentTarget as HTMLButtonElement).value === \"1wk\";\r\n\t\tconst isNamelock = (ev.currentTarget as HTMLButtonElement).value === \"nmlk\";\r\n\t\tconst reason = this.base?.querySelector<HTMLInputElement>(\"input[name=lockreason]\")?.value;\r\n\t\tconst data = {\r\n\t\t\taction: isNamelock ? 'Namelock' : 'Lock',\r\n\t\t\treason,\r\n\t\t\tduration: weekLock ? \"1 week\" : \"2 days\",\r\n\t\t};\r\n\t\tthis.setState({ data, showConfirm: true });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\tisIgnoringUser = (userid: string) => {\r\n\t\tconst ignoring = PS.prefs.ignore || {};\r\n\t\tif (ignoring[userid] === 1) return true;\r\n\t\treturn false;\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst banPerms = [\"@\", \"#\", \"~\"];\r\n\t\tconst mutePerms = [\"%\", ...banPerms];\r\n\t\tconst { targetUser, targetRoom } = this.getTargets();\r\n\t\tconst userRoomGroup = targetRoom?.users[PS.user.userid].charAt(0) || '';\r\n\t\tconst canMute = mutePerms.includes(userRoomGroup);\r\n\t\tconst canBan = banPerms.includes(userRoomGroup);\r\n\t\tconst canLock = mutePerms.includes(PS.user.group);\r\n\t\tconst isVisible = (actionName: string) => {\r\n\t\t\tif (actionName === 'mute') {\r\n\t\t\t\treturn canMute && !this.state.showLockInput && !this.state.showBanInput && !this.state.showConfirm;\r\n\t\t\t}\r\n\t\t\tif (actionName === 'ban') {\r\n\t\t\t\treturn canBan && !this.state.showLockInput && !this.state.showMuteInput && !this.state.showConfirm;\r\n\t\t\t}\r\n\t\t\tif (actionName === 'lock') {\r\n\t\t\t\treturn canLock && !this.state.showBanInput && !this.state.showMuteInput && !this.state.showConfirm;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t<p>\r\n\t\t\t\t{this.isIgnoringUser(targetUser) ? (\r\n\t\t\t\t\t<button onClick={this.handleUnignore} class=\"button\">\r\n\t\t\t\t\t\tUnignore\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button onClick={this.handleIgnore} class=\"button\">\r\n\t\t\t\t\t\tIgnore\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<button data-href={`view-help-request-report-user-${targetUser}`} class=\"button\">\r\n\t\t\t\t\tReport\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t{this.state.requestSent ? (\r\n\t\t\t\t\t<button class=\"button disabled\">\r\n\t\t\t\t\t\tSent request\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button onClick={this.handleAddFriend} class=\"button\">\r\n\t\t\t\t\t\tAdd friend\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</p>\r\n\t\t\t{(canMute || canBan || canLock) && <hr />}\r\n\t\t\t{this.state.showConfirm && <p>\r\n\t\t\t\t<small>\r\n\t\t\t\t\t{this.state.data?.action} <b>{targetUser}</b> {}\r\n\t\t\t\t\t{!this.state.data?.action.endsWith('ock') ? <>from <b>{targetRoom?.title}</b></> : ''} for {this.state.data?.duration}?\r\n\t\t\t\t</small>\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button class=\"button\" onClick={this.handleConfirm}>\r\n\t\t\t\t\t\t<i class=\"fa fa-confirm\" aria-hidden></i> Confirm\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t<button class=\"button\" onClick={this.handleCancel}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t</p>}\r\n\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t{isVisible('mute') && (this.state.showMuteInput ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\t\tReason: {}\r\n\t\t\t\t\t\t\t<input name=\"mutereason\" class=\"textbox autofocus\" placeholder=\"Mute reason (optional)\" />\r\n\t\t\t\t\t\t</label> {} <br />\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.muteUser} value=\"7min\">For 7 Mins</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.muteUser} value=\"1hr\">For 1 Hour</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.handleCancel}> Cancel</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button class=\"button\" onClick={this.handleMute}>\r\n\t\t\t\t\t\t<i class=\"fa fa-hourglass-half\" aria-hidden></i> Mute\r\n\t\t\t\t\t</button>\r\n\t\t\t\t))} {}\r\n\t\t\t\t{isVisible('ban') && (this.state.showBanInput ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\t\tReason: {}\r\n\t\t\t\t\t\t\t<input name=\"banreason\" class=\"textbox autofocus\" placeholder=\"Ban reason (optional)\" />\r\n\t\t\t\t\t\t</label><br />\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.banUser} value=\"2d\">For 2 Days</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.banUser} value=\"1wk\">For 1 Week</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.handleCancel}>Cancel</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button class=\"button\" onClick={this.handleBan}>\r\n\t\t\t\t\t\t<i class=\"fa fa-gavel\" aria-hidden></i> Ban\r\n\t\t\t\t\t</button>\r\n\t\t\t\t))} {}\r\n\t\t\t\t{isVisible('lock') && (this.state.showLockInput ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\t\tReason: {}\r\n\t\t\t\t\t\t\t<input name=\"lockreason\" class=\"textbox autofocus\" placeholder=\"Lock reason (optional)\" />\r\n\t\t\t\t\t\t</label><br />\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.lockUser} value=\"2d\">For 2 Days</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.lockUser} value=\"1wk\">For 1 Week</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.lockUser} value=\"nmlk\">Namelock</button> {}\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.handleCancel}>Cancel</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button class=\"button\" onClick={this.handleLock}>\r\n\t\t\t\t\t\t<i class=\"fa fa-lock\" aria-hidden></i> Lock/Namelock\r\n\t\t\t\t\t</button>\r\n\t\t\t\t))}\r\n\t\t\t</p>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass UserListPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'userlist';\r\n\tstatic readonly routes = ['userlist'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst parentRoom = room.getParent() as ChatRoom;\r\n\t\tif (parentRoom.type !== 'chat' && parentRoom.type !== 'battle') {\r\n\t\t\tthrow new Error(`UserListPanel: ${room.id} is not a chat room`);\r\n\t\t}\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t<ChatUserList room={parentRoom} static />\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass VolumePanel extends PSRoomPanel {\r\n\tstatic readonly id = 'volume';\r\n\tstatic readonly routes = ['volume'];\r\n\tstatic readonly location = 'popup';\r\n\r\n\tsetVolume = (e: Event) => {\r\n\t\tconst slider = e.currentTarget as HTMLInputElement;\r\n\t\tPS.prefs.set(slider.name as 'effectvolume', Number(slider.value));\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tsetMute = (e: Event) => {\r\n\t\tconst checkbox = e.currentTarget as HTMLInputElement;\r\n\t\tPS.prefs.set('mute', !!checkbox.checked);\r\n\t\tPS.update();\r\n\t};\r\n\toverride componentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t\tthis.subscriptions.push(PS.prefs.subscribe(() => {\r\n\t\t\tthis.forceUpdate();\r\n\t\t}));\r\n\t}\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\treturn <PSPanelWrapper room={room}><div class=\"pad\">\r\n\t\t\t<h3>Volume</h3>\r\n\t\t\t<p class=\"volume\">\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tEffects: <span class=\"value\">{!PS.prefs.mute && PS.prefs.effectvolume ? `${PS.prefs.effectvolume}%` : `-`}</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t{PS.prefs.mute ?\r\n\t\t\t\t\t<em>(muted)</em> :\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\" min=\"0\" max=\"100\" step=\"1\" name=\"effectvolume\" value={PS.prefs.effectvolume}\r\n\t\t\t\t\t\tonChange={this.setVolume} onInput={this.setVolume} onKeyUp={this.setVolume}\r\n\t\t\t\t\t/>}\r\n\t\t\t</p>\r\n\t\t\t<p class=\"volume\">\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tMusic: <span class=\"value\">{!PS.prefs.mute && PS.prefs.musicvolume ? `${PS.prefs.musicvolume}%` : `-`}</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t{PS.prefs.mute ?\r\n\t\t\t\t\t<em>(muted)</em> :\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\" min=\"0\" max=\"100\" step=\"1\" name=\"musicvolume\" value={PS.prefs.musicvolume}\r\n\t\t\t\t\t\tonChange={this.setVolume} onInput={this.setVolume} onKeyUp={this.setVolume}\r\n\t\t\t\t\t/>}\r\n\t\t\t</p>\r\n\t\t\t<p class=\"volume\">\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tNotifications: {}\r\n\t\t\t\t\t<span class=\"value\">{!PS.prefs.mute && PS.prefs.notifvolume ? `${PS.prefs.notifvolume}%` : `-`}</span>\r\n\t\t\t\t</label>\r\n\t\t\t\t{PS.prefs.mute ?\r\n\t\t\t\t\t<em>(muted)</em> :\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"range\" min=\"0\" max=\"100\" step=\"1\" name=\"notifvolume\" value={PS.prefs.notifvolume}\r\n\t\t\t\t\t\tonChange={this.setVolume} onInput={this.setVolume} onKeyUp={this.setVolume}\r\n\t\t\t\t\t/>}\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input type=\"checkbox\" name=\"mute\" checked={PS.prefs.mute} onChange={this.setMute} /> Mute all\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass OptionsPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'options';\r\n\tstatic readonly routes = ['options'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tdeclare state: { showStatusInput?: boolean, showStatusUpdated?: boolean };\r\n\r\n\toverride componentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t\tthis.subscribeTo(PS.user);\r\n\t}\r\n\tsetTheme = (e: Event) => {\r\n\t\tconst theme = (e.currentTarget as HTMLSelectElement).value as 'light' | 'dark' | 'system';\r\n\t\tPS.prefs.set('theme', theme);\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tsetLayout = (e: Event) => {\r\n\t\tconst layout = (e.currentTarget as HTMLSelectElement).value;\r\n\t\tswitch (layout) {\r\n\t\tcase '':\r\n\t\t\tPS.prefs.set('onepanel', null);\r\n\t\t\tPS.rightPanel ||= PS.rooms['rooms'] || null;\r\n\t\t\tbreak;\r\n\t\tcase 'onepanel':\r\n\t\t\tPS.prefs.set('onepanel', true);\r\n\t\t\tbreak;\r\n\t\tcase 'vertical':\r\n\t\t\tPS.prefs.set('onepanel', 'vertical');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tPS.update();\r\n\t};\r\n\tsetChatroomTimestamp = (ev: Event) => {\r\n\t\tconst timestamp = (ev.currentTarget as HTMLSelectElement).value as TimestampOptions;\r\n\t\tPS.prefs.set('timestamps', { ...PS.prefs.timestamps, chatrooms: timestamp || undefined });\r\n\t};\r\n\tsetPMsTimestamp = (ev: Event) => {\r\n\t\tconst timestamp = (ev.currentTarget as HTMLSelectElement).value as TimestampOptions;\r\n\t\tPS.prefs.set('timestamps', { ...PS.prefs.timestamps, pms: timestamp || undefined });\r\n\t};\r\n\r\n\thandleShowStatusInput = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tthis.setState({ showStatusInput: !this.state.showStatusInput });\r\n\t};\r\n\r\n\thandleOnChange = (ev: Event) => {\r\n\t\tlet elem = ev.currentTarget as HTMLInputElement;\r\n\t\tlet setting = elem.name;\r\n\t\tlet value = elem.checked;\r\n\t\tswitch (setting) {\r\n\t\tcase 'blockPMs': {\r\n\t\t\tPS.prefs.set(\"blockPMs\", value);\r\n\t\t\tPS.send(value ? '/blockpms' : '/unblockpms');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'blockChallenges': {\r\n\t\t\tPS.prefs.set(\"blockChallenges\", value);\r\n\t\t\tPS.send(value ? '/blockchallenges' : '/unblockchallenges');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'bwgfx': {\r\n\t\t\tPS.prefs.set('bwgfx', value);\r\n\t\t\tDex.loadSpriteData(value || PS.prefs.noanim ? 'bw' : 'xy');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'language': {\r\n\t\t\tPS.prefs.set(setting, elem.value);\r\n\t\t\tPS.send(`/language ${elem.value}`);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'tournaments': {\r\n\t\t\tPS.prefs.set(setting, !elem.value ? null : elem.value as 'hide' | 'notify');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'refreshprompt':\r\n\t\tcase 'noanim':\r\n\t\tcase 'nopastgens':\r\n\t\tcase 'noselfhighlight':\r\n\t\tcase 'leavePopupRoom':\r\n\t\tcase 'inchatpm':\r\n\t\t\tPS.prefs.set(setting, value);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\teditStatus = (ev: Event) => {\r\n\t\tconst statusInput = this.base!.querySelector<HTMLInputElement>('input[name=statustext]');\r\n\t\tPS.send(statusInput?.value?.length ? `/status ${statusInput.value}` : `/clearstatus`);\r\n\t\tthis.setState({ showStatusUpdated: true, showStatusInput: false });\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\treturn <PSPanelWrapper room={room}><div class=\"pad\">\r\n\t\t\t<p>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclass=\"trainersprite yours\" width=\"40\" height=\"40\" style={{ verticalAlign: 'middle' }}\r\n\t\t\t\t\tsrc={Dex.resolveAvatar(`${PS.user.avatar}`)} data-href=\"avatars\"\r\n\t\t\t\t/> {}\r\n\t\t\t\t<strong>{PS.user.name}</strong>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<button class=\"button\" data-href=\"avatars\"> Avatar...</button>\r\n\t\t\t</p>\r\n\r\n\t\t\t{this.state.showStatusInput ? (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<input name=\"statustext\" />\r\n\t\t\t\t\t<button class=\"button\" onClick={this.editStatus}><i class=\"fa fa-pencil\" aria-hidden></i></button>\r\n\t\t\t\t</p>\r\n\t\t\t) : (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<button class=\"button\" onClick={this.handleShowStatusInput} disabled={this.state.showStatusUpdated}>\r\n\t\t\t\t\t\t{this.state.showStatusUpdated ? 'Status Updated' : 'Status...'}</button>\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\r\n\t\t\t{PS.user.named && (PS.user.registered?.userid === PS.user.userid ?\r\n\t\t\t\t<button className=\"button\" data-href=\"changepassword\">Password...</button> :\r\n\t\t\t\t<button className=\"button\" data-href=\"register\">Register</button>)}\r\n\r\n\t\t\t<hr />\r\n\t\t\t<h3>Graphics</h3>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">Theme: <select name=\"theme\" class=\"button\" onChange={this.setTheme}>\r\n\t\t\t\t\t<option value=\"light\" selected={PS.prefs.theme === 'light'}>Light</option>\r\n\t\t\t\t\t<option value=\"dark\" selected={PS.prefs.theme === 'dark'}>Dark</option>\r\n\t\t\t\t\t<option value=\"system\" selected={PS.prefs.theme === 'system'}>Match system theme</option>\r\n\t\t\t\t</select></label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">Layout: <select name=\"layout\" class=\"button\" onChange={this.setLayout}>\r\n\t\t\t\t\t<option value=\"\" selected={!PS.prefs.onepanel}>Two panels (if wide enough)</option>\r\n\t\t\t\t\t<option value=\"onepanel\" selected={PS.prefs.onepanel === true}>Single panel</option>\r\n\t\t\t\t\t<option value=\"vertical\" selected={PS.prefs.onepanel === 'vertical'}>Vertical tabs</option>\r\n\t\t\t\t</select></label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tBackground: <button class=\"button\" data-href=\"changebackground\">\r\n\t\t\t\t\t\tChange Background\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"> <input\r\n\t\t\t\t\tname=\"noanim\" checked={PS.prefs.noanim || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Disable animations</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"bwgfx\" checked={PS.prefs.bwgfx || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/>  Use 2D sprites instead of 3D models</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"nopastgens\" checked={PS.prefs.nopastgens || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Use modern sprites for past generations</label>\r\n\t\t\t</p>\r\n\t\t\t<hr />\r\n\t\t\t<h3>Chat</h3>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"blockPMs\" checked={PS.prefs.blockPMs || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Block PMs</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"blockChallenges\" checked={PS.prefs.blockChallenges || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Block challenges</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"inchatpm\" checked={PS.prefs.inchatpm || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Show PMs in chatrooms</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"noselfhighlight\" checked={PS.prefs.noselfhighlight || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Do not highlight when your name is said in chat</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"leavePopupRoom\" checked={PS.prefs.leavePopupRoom || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Confirm before leaving a room</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\"><input\r\n\t\t\t\t\tname=\"refreshprompt\" checked={PS.prefs.refreshprompt || false} type=\"checkbox\" onChange={this.handleOnChange}\r\n\t\t\t\t/> Confirm before refreshing</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tLanguage: {}\r\n\t\t\t\t\t<select name=\"language\" onChange={this.handleOnChange} class=\"button\">\r\n\t\t\t\t\t\t<option value=\"german\" selected={PS.prefs.language === \"german\"}>Deutsch</option>\r\n\t\t\t\t\t\t<option value=\"english\" selected={PS.prefs.language === \"english\"}>English</option>\r\n\t\t\t\t\t\t<option value=\"spanish\" selected={PS.prefs.language === \"spanish\"}>Espa\u00F1ol</option>\r\n\t\t\t\t\t\t<option value=\"french\" selected={PS.prefs.language === \"french\"}>Fran\u00E7ais</option>\r\n\t\t\t\t\t\t<option value=\"italian\" selected={PS.prefs.language === \"italian\"}>Italiano</option>\r\n\t\t\t\t\t\t<option value=\"dutch\" selected={PS.prefs.language === \"dutch\"}>Nederlands</option>\r\n\t\t\t\t\t\t<option value=\"portuguese\" selected={PS.prefs.language === \"portuguese\"}>Portugu\u00EAs</option>\r\n\t\t\t\t\t\t<option value=\"turkish\" selected={PS.prefs.language === \"turkish\"}>T\u00FCrk\u00E7e</option>\r\n\t\t\t\t\t\t<option value=\"hindi\" selected={PS.prefs.language === \"hindi\"}>\u0939\u093F\u0902\u0926\u0940</option>\r\n\t\t\t\t\t\t<option value=\"japanese\" selected={PS.prefs.language === \"japanese\"}>\u65E5\u672C\u8A9E</option>\r\n\t\t\t\t\t\t<option value=\"simplifiedchinese\" selected={PS.prefs.language === \"simplifiedchinese\"}>\u7B80\u4F53\u4E2D\u6587</option>\r\n\t\t\t\t\t\t<option value=\"traditionalchinese\" selected={PS.prefs.language === \"traditionalchinese\"}>\u4E2D\u6587</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tTournaments: <select name=\"tournaments\" class=\"button\" onChange={this.handleOnChange}>\r\n\t\t\t\t\t\t<option value=\"\" selected={!PS.prefs.tournaments}>Notify when joined</option>\r\n\t\t\t\t\t\t<option value=\"notify\" selected={PS.prefs.tournaments === \"notify\"}>Always notify</option>\r\n\t\t\t\t\t\t<option value=\"hide\" selected={PS.prefs.tournaments === \"hide\"}>Hide</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">Timestamps: <select name=\"layout\" class=\"button\" onChange={this.setChatroomTimestamp}>\r\n\t\t\t\t\t<option value=\"\" selected={!PS.prefs.timestamps.chatrooms}>Off</option>\r\n\t\t\t\t\t<option value=\"minutes\" selected={PS.prefs.timestamps.chatrooms === \"minutes\"}>[HH:MM]</option>\r\n\t\t\t\t\t<option value=\"seconds\" selected={PS.prefs.timestamps.chatrooms === \"seconds\"}>[HH:MM:SS]</option>\r\n\t\t\t\t</select></label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">Timestamps in DMs: <select name=\"layout\" class=\"button\" onChange={this.setPMsTimestamp}>\r\n\t\t\t\t\t<option value=\"\" selected={!PS.prefs.timestamps.pms}>Off</option>\r\n\t\t\t\t\t<option value=\"minutes\" selected={PS.prefs.timestamps.pms === \"minutes\"}>[HH:MM]</option>\r\n\t\t\t\t\t<option value=\"seconds\" selected={PS.prefs.timestamps.pms === \"seconds\"}>[HH:MM:SS]</option>\r\n\t\t\t\t</select></label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"optlabel\">\r\n\t\t\t\t\tChat preferences: {}\r\n\t\t\t\t\t<button class=\"button\" data-href=\"chatformatting\">Text formatting...</button>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<hr />\r\n\t\t\t{PS.user.named ? <p class=\"buttonbar\" style=\"text-align: right\">\r\n\t\t\t\t<button class=\"button\" data-href=\"login\"><i class=\"fa fa-pencil\" aria-hidden></i> Change name</button> {}\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/logout\"><i class=\"fa fa-power-off\" aria-hidden></i> Log out</button>\r\n\t\t\t</p> : <p class=\"buttonbar\" style=\"text-align: right\">\r\n\t\t\t\t<button class=\"button\" data-href=\"login\"><i class=\"fa fa-pencil\" aria-hidden></i> Choose name</button>\r\n\t\t\t</p> }\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass GooglePasswordBox extends preact.Component<{ name: string }> {\r\n\toverride componentDidMount() {\r\n\t\twindow.gapiCallback = (response: any) => {\r\n\t\t\tPS.user.changeNameWithPassword(this.props.name, response.credential, { needsGoogle: true });\r\n\t\t};\r\n\r\n\t\tPS.user.gapiLoaded = true;\r\n\t\tconst script = document.createElement('script');\r\n\t\tscript.async = true;\r\n\t\tscript.src = 'https://accounts.google.com/gsi/client';\r\n\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t}\r\n\toverride render() {\r\n\t\treturn <div class=\"google-password-box\">\r\n\t\t\t<div\r\n\t\t\t\tid=\"g_id_onload\" data-client_id=\"912270888098-jjnre816lsuhc5clj3vbcn4o2q7p4qvk.apps.googleusercontent.com\"\r\n\t\t\t\tdata-context=\"signin\" data-ux_mode=\"popup\" data-callback=\"gapiCallback\" data-auto_prompt=\"false\"\r\n\t\t\t></div>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"g_id_signin\" data-type=\"standard\" data-shape=\"pill\" data-theme=\"filled_blue\" data-text=\"continue_with\"\r\n\t\t\t\tdata-size=\"large\" data-logo_alignment=\"left\" data-auto_select=\"true\" data-itp_support=\"true\"\r\n\t\t\t\tstyle=\"width:fit-content;margin:0 auto\"\r\n\t\t\t>[loading Google log-in button]</div>\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nclass LoginPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'login';\r\n\tstatic readonly routes = ['login'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tdeclare state: { passwordShown?: boolean };\r\n\r\n\toverride componentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t\tthis.subscriptions.push(PS.user.subscribe(args => {\r\n\t\t\tif (args) {\r\n\t\t\t\tif (args.success) {\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.props.room.args = args;\r\n\t\t\t\tsetTimeout(() => this.focus(), 1);\r\n\t\t\t}\r\n\t\t\tthis.forceUpdate();\r\n\t\t}));\r\n\t}\r\n\tgetUsername() {\r\n\t\tconst loginName = PS.user.loggingIn || this.props.room.args?.name as string;\r\n\t\tif (loginName) return loginName;\r\n\r\n\t\tconst input = this.base?.querySelector<HTMLInputElement>('input[name=username]');\r\n\t\tif (input && !input.disabled) {\r\n\t\t\treturn input.value;\r\n\t\t}\r\n\t\treturn PS.user.named ? PS.user.name : '';\r\n\t}\r\n\thandleSubmit = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tconst passwordBox = this.base!.querySelector<HTMLInputElement>('input[name=password]');\r\n\t\tif (passwordBox) {\r\n\t\t\tPS.user.changeNameWithPassword(this.getUsername(), passwordBox.value);\r\n\t\t} else {\r\n\t\t\tPS.user.changeName(this.getUsername());\r\n\t\t}\r\n\t};\r\n\tupdate = () => {\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\toverride focus() {\r\n\t\tconst passwordBox = this.base!.querySelector<HTMLInputElement>('input[name=password]');\r\n\t\tconst usernameBox = this.base!.querySelector<HTMLInputElement>('input[name=username]');\r\n\t\t(passwordBox || usernameBox)?.select();\r\n\t}\r\n\treset = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tthis.props.room.args = null;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\thandleShowPassword = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tthis.setState({ passwordShown: !this.state.passwordShown });\r\n\t};\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst loginState = room.args as PSLoginState;\r\n\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t<h3>Log in</h3>\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t{loginState?.error && <p class=\"error\">{loginState.error}</p>}\r\n\t\t\t\t<p><label class=\"label\">\r\n\t\t\t\t\tUsername: <small class=\"preview\" style={`color:${BattleLog.usernameColor(toID(this.getUsername()))}`}>(color)</small>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclass=\"textbox\" type=\"text\" name=\"username\"\r\n\t\t\t\t\t\tonInput={this.update} onChange={this.update} autocomplete=\"username\"\r\n\t\t\t\t\t\tvalue={this.getUsername()} disabled={!!PS.user.loggingIn || !!loginState?.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label></p>\r\n\t\t\t\t{PS.user.named && !loginState && <p>\r\n\t\t\t\t\t<small>(Others will be able to see your name change. To change name privately, use \"Log out\")</small>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{loginState?.needsPassword && <p>\r\n\t\t\t\t\t<i class=\"fa fa-level-up fa-rotate-90\" aria-hidden></i> <strong>if you registered this name:</strong>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tPassword: {}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclass=\"textbox\" type={this.state.passwordShown ? 'text' : 'password'} name=\"password\"\r\n\t\t\t\t\t\t\tautocomplete=\"current-password\" style=\"width:173px\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\" onClick={this.handleShowPassword} aria-label=\"Show password\"\r\n\t\t\t\t\t\t\tclass=\"button\" style=\"float:right;margin:-21px 0 10px;padding: 2px 6px\"\r\n\t\t\t\t\t\t><i class=\"fa fa-eye\" aria-hidden></i></button>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>}\r\n\t\t\t\t{loginState?.needsGoogle && <>\r\n\t\t\t\t\t<p><i class=\"fa fa-level-up fa-rotate-90\" aria-hidden></i> <strong>if you registered this name:</strong></p>\r\n\t\t\t\t\t<p><GooglePasswordBox name={this.getUsername()} /></p>\r\n\t\t\t\t</>}\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t{PS.user.loggingIn ? (\r\n\t\t\t\t\t\t<button disabled class=\"cur\">Logging in...</button>\r\n\t\t\t\t\t) : loginState?.needsPassword ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button type=\"submit\" class=\"button\"><strong>Log in</strong></button> {}\r\n\t\t\t\t\t\t\t<button type=\"button\" onClick={this.reset} class=\"button\">Cancel</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : loginState?.needsGoogle ? (\r\n\t\t\t\t\t\t<button type=\"button\" onClick={this.reset} class=\"button\">Cancel</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<button type=\"submit\" class=\"button\"><strong>Choose name</strong></button> {}\r\n\t\t\t\t\t\t\t<button type=\"button\" name=\"closeRoom\" class=\"button\">Cancel</button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)} {}\r\n\t\t\t\t</p>\r\n\t\t\t\t{loginState?.name && <div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<i class=\"fa fa-level-up fa-rotate-90\" aria-hidden></i> <strong>if not:</strong>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p style={{ maxWidth: '210px', margin: '0 auto' }}>\r\n\t\t\t\t\t\tThis is someone else's account. Sorry.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t\t<button class=\"button\" onClick={this.reset}>Try another name</button>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>}\r\n\t\t\t</form>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass AvatarsPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'avatars';\r\n\tstatic readonly routes = ['avatars'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\r\n\t\tconst avatars: [number, string][] = [];\r\n\t\tfor (let i = 1; i <= 293; i++) {\r\n\t\t\tif (i === 162 || i === 168) continue;\r\n\t\t\tavatars.push([i, window.BattleAvatarNumbers?.[i] || `${i}`]);\r\n\t\t}\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={1210}><div class=\"pad\">\r\n\t\t\t<label class=\"optlabel\"><strong>Choose an avatar or </strong>\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/close\"> Cancel</button>\r\n\t\t\t</label>\r\n\t\t\t<div class=\"avatarlist\">\r\n\t\t\t\t{avatars.map(([i, avatar]) => (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdata-cmd={`/closeand /avatar ${avatar}`} title={`/avatar ${avatar}`}\r\n\t\t\t\t\t\tclass={`option pixelated${avatar === PS.user.avatar ? ' cur' : ''}`}\r\n\t\t\t\t\t\tstyle={`background-position: -${((i - 1) % 16) * 80 + 1}px -${Math.floor((i - 1) / 16) * 80 + 1}px`}\r\n\t\t\t\t\t></button>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div style=\"clear:left\"></div>\r\n\t\t\t<p><button class=\"button\" data-cmd=\"/close\">Cancel</button></p>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass BattleForfeitPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'forfeit';\r\n\tstatic readonly routes = ['forfeitbattle'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst battleRoom = room.getParent() as BattleRoom;\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={480}><div class=\"pad\">\r\n\t\t\t<p>Forfeiting makes you lose the battle. Are you sure?</p>\r\n\t\t\t<p>\r\n\t\t\t\t<button data-cmd=\"/closeand /inopener /closeand /forfeit\" class=\"button\"><strong>Forfeit and close</strong></button> {}\r\n\t\t\t\t<button data-cmd=\"/closeand /inopener /forfeit\" class=\"button\">Just forfeit</button> {}\r\n\t\t\t\t{!battleRoom.battle.rated && <button type=\"button\" data-href=\"replaceplayer\" class=\"button\">\r\n\t\t\t\t\tReplace player\r\n\t\t\t\t</button>} {}\r\n\t\t\t\t<button type=\"button\" data-cmd=\"/close\" class=\"button\">\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass ReplacePlayerPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'replaceplayer';\r\n\tstatic readonly routes = ['replaceplayer'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\thandleReplacePlayer = (ev: Event) => {\r\n\t\tconst room = this.props.room;\r\n\t\tconst battleRoom = room.getParent()?.getParent() as BattleRoom;\r\n\t\tconst newPlayer = this.base?.querySelector<HTMLInputElement>(\"input[name=newplayer]\")?.value;\r\n\t\tif (!newPlayer?.length) return battleRoom.add(\"|error|Enter player's name\");\r\n\t\tif (battleRoom.battle.ended) return battleRoom.add(\"|error|Cannot replace player, battle has already ended.\");\r\n\t\tlet playerSlot = battleRoom.battle.p1.id === PS.user.userid ? \"p1\" : \"p2\";\r\n\t\tbattleRoom.send('/leavebattle');\r\n\t\tbattleRoom.send(`/addplayer ${newPlayer}, ${playerSlot}`);\r\n\t\tthis.close();\r\n\t\tev.preventDefault();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={480}><div class=\"pad\">\r\n\t\t\t<form onSubmit={this.handleReplacePlayer}>\r\n\t\t\t\t<p>Replacement player's name:</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<input name=\"newplayer\" class=\"textbox autofocus\" />\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<button type=\"submit\" class=\"button\">\r\n\t\t\t\t\t\t<strong>Replace</strong>\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t<button type=\"button\" data-cmd=\"/close\" class=\"button\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</p>\r\n\t\t\t</form>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass ChangePasswordPanel extends PSRoomPanel {\r\n\tstatic readonly id = \"changepassword\";\r\n\tstatic readonly routes = [\"changepassword\"];\r\n\tstatic readonly location = \"semimodal-popup\";\r\n\tstatic readonly noURL = true;\r\n\r\n\tdeclare state: { errorMsg: string };\r\n\r\n\thandleChangePassword = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tlet oldpassword = this.base?.querySelector<HTMLInputElement>('input[name=oldpassword]')?.value;\r\n\t\tlet password = this.base?.querySelector<HTMLInputElement>('input[name=password]')?.value;\r\n\t\tlet cpassword = this.base?.querySelector<HTMLInputElement>('input[name=cpassword]')?.value;\r\n\t\tif (!oldpassword?.length ||\r\n\t\t\t!password?.length ||\r\n\t\t\t!cpassword?.length) return this.setState({ errorMsg: \"All fields are required\" });\r\n\t\tif (password !== cpassword) return this.setState({ errorMsg: 'Passwords do not match' });\r\n\t\tPSLoginServer.query(\"changepassword\", {\r\n\t\t\toldpassword,\r\n\t\t\tpassword,\r\n\t\t\tcpassword,\r\n\t\t}).then(data => {\r\n\t\t\tif (data?.actionerror) return this.setState({ errorMsg: data?.actionerror });\r\n\t\t\tPS.alert(\"Your password was successfully changed!\");\r\n\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.error(err);\r\n\t\t\tthis.setState({ errorMsg: err.message });\r\n\t\t});\r\n\r\n\t\tthis.setState({ errorMsg: '' });\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t<form onSubmit={this.handleChangePassword}>\r\n\t\t\t\t{ !!this.state.errorMsg?.length && <p>\r\n\t\t\t\t\t<b class=\"message-error\"> {this.state.errorMsg}</b>\r\n\t\t\t\t</p> }\r\n\t\t\t\t<p>Change your password:</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tUsername: {}\r\n\t\t\t\t\t\t<input name=\"username\" value={PS.user.name} readOnly={true} autocomplete=\"username\" class=\"textbox disabled\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tOld password: {}\r\n\t\t\t\t\t\t<input name=\"oldpassword\" type=\"password\" autocomplete=\"current-password\" class=\"textbox autofocus\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tNew password: {}\r\n\t\t\t\t\t\t<input name=\"password\" type=\"password\" autocomplete=\"new-password\" class=\"textbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tNew password (confirm): {}\r\n\t\t\t\t\t\t<input name=\"cpassword\" type=\"password\" autocomplete=\"new-password\" class=\"textbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button type=\"submit\" class=\"button\">\r\n\t\t\t\t\t\t<strong>Change password</strong>\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t<button type=\"button\" data-cmd=\"/close\" class=\"button\">Cancel</button>\r\n\t\t\t\t</p>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass RegisterPanel extends PSRoomPanel {\r\n\tstatic readonly id = \"register\";\r\n\tstatic readonly routes = [\"register\"];\r\n\tstatic readonly location = \"semimodal-popup\";\r\n\tstatic readonly noURL = true;\r\n\tstatic readonly rightPopup = true;\r\n\r\n\tdeclare state: { errorMsg: string };\r\n\r\n\thandleRegisterUser = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tlet captcha = this.base?.querySelector<HTMLInputElement>('input[name=captcha]')?.value;\r\n\t\tlet password = this.base?.querySelector<HTMLInputElement>('input[name=password]')?.value;\r\n\t\tlet cpassword = this.base?.querySelector<HTMLInputElement>('input[name=cpassword]')?.value;\r\n\t\tif (!captcha?.length ||\r\n\t\t\t!password?.length ||\r\n\t\t\t!cpassword?.length) return this.setState({ errorMsg: \"All fields are required\" });\r\n\t\tif (password !== cpassword) return this.setState({ errorMsg: 'Passwords do not match' });\r\n\t\tPSLoginServer.query(\"register\", {\r\n\t\t\tcaptcha,\r\n\t\t\tpassword,\r\n\t\t\tcpassword,\r\n\t\t\tusername: PS.user.name,\r\n\t\t\tchallstr: PS.user.challstr,\r\n\t\t}).then(data => {\r\n\t\t\tif (data?.actionerror) this.setState({ errorMsg: data?.actionerror });\r\n\t\t\tif (data?.curuser?.loggedin) {\r\n\t\t\t\tlet name = data.curuser.username;\r\n\t\t\t\tPS.user.registered = { name, userid: toID(name) };\r\n\t\t\t\tif (data?.assertion) PS.user.handleAssertion(name, data?.assertion);\r\n\t\t\t\tthis.close();\r\n\t\t\t\tPS.alert(\"You have been successfully registered.\");\r\n\t\t\t}\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.error(err);\r\n\t\t\tthis.setState({ errorMsg: err.message });\r\n\t\t});\r\n\r\n\t\tthis.setState({ errorMsg: '' });\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={280}><div class=\"pad\">\r\n\t\t\t<form onSubmit={this.handleRegisterUser}>\r\n\t\t\t\t{ !!this.state.errorMsg?.length && <p>\r\n\t\t\t\t\t<b class=\"message-error\"> {this.state.errorMsg}</b>\r\n\t\t\t\t</p> }\r\n\t\t\t\t<p>Register your account:</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tUsername: {}\r\n\t\t\t\t\t\t<input name=\"name\" value={PS.user.name} readOnly={true} autocomplete=\"username\" class=\"textbox disabled\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tPassword: {}\r\n\t\t\t\t\t\t<input name=\"password\" type=\"password\" autocomplete=\"new-password\" class=\"textbox autofocus\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tPassword (confirm): {}\r\n\t\t\t\t\t\t<input name=\"cpassword\" type=\"password\" autocomplete=\"new-password\" class=\"textbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\"><img\r\n\t\t\t\t\t\tsrc=\"https://play.pokemonshowdown.com/sprites/gen5ani/pikachu.gif\"\r\n\t\t\t\t\t\talt=\"An Electric-type mouse that is the mascot of the Pok&eacute;mon franchise.\"\r\n\t\t\t\t\t/></label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"label\">\r\n\t\t\t\t\t\tWhat is this pokemon? {}\r\n\t\t\t\t\t\t<input name=\"captcha\" class=\"textbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button type=\"submit\" class=\"button\"><strong>Register</strong></button> {}\r\n\t\t\t\t\t<button type=\"button\" data-cmd=\"/close\" class=\"button\">Cancel</button>\r\n\t\t\t\t</p>\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass BackgroundListPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'changebackground';\r\n\tstatic readonly routes = ['changebackground'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\tdeclare state: { status?: string };\r\n\r\n\tsetBg = (ev: Event) => {\r\n\t\tlet curtarget = ev.currentTarget as HTMLButtonElement;\r\n\t\tlet bg = curtarget.value;\r\n\t\tPSBackground.set('', bg);\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\r\n\tuploadBg = (ev: Event) => {\r\n\t\tthis.setState({ status: undefined });\r\n\t\tconst input = this.base?.querySelector<HTMLInputElement>('input[name=bgfile]');\r\n\t\tif (!input?.files?.[0]) return;\r\n\r\n\t\tconst file = input.files[0];\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.onload = () => {\r\n\t\t\tconst base64Image = reader.result as string;\r\n\t\t\tPSBackground.set(base64Image, 'custom');\r\n\t\t\tthis.forceUpdate();\r\n\t\t};\r\n\r\n\t\treader.onerror = () => {\r\n\t\t\tthis.setState({ status: \"Failed to load background image.\" });\r\n\t\t};\r\n\t\treader.readAsDataURL(file);\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst option = (val: string) => val === PSBackground.id ? 'option cur' : 'option';\r\n\t\treturn <PSPanelWrapper room={room} width={480}><div class=\"pad\">\r\n\t\t\t<p><strong>Default</strong></p>\r\n\t\t\t<div class=\"bglist\">\r\n\t\t\t\t<button onClick={this.setBg} value=\"\" class={option('')}>\r\n\t\t\t\t\t<strong\r\n\t\t\t\t\t\tstyle=\"\r\n\t\t\t\t\t\tbackground: #888888;\r\n\t\t\t\t\t\tcolor: white;\r\n\t\t\t\t\t\tpadding: 16px 18px;\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\tfont-size: 12pt;\r\n\t\t\t\t\t\"\r\n\t\t\t\t\t>Random</strong>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div style=\"clear: left\"></div>\r\n\t\t\t<p><strong>Official</strong></p>\r\n\t\t\t<div class=\"bglist\">\r\n\t\t\t\t<button onClick={this.setBg} value=\"charizards\" class={option('charizards')}>\r\n\t\t\t\t\t<span class=\"bg\" style=\"background-position: 0 -0px\"></span>{}\r\n\t\t\t\t\tCharizards\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={this.setBg} value=\"horizon\" class={option('horizon')}>\r\n\t\t\t\t\t<span class=\"bg\" style=\"background-position: 0 -90px\"></span>{}\r\n\t\t\t\t\tHorizon\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={this.setBg} value=\"waterfall\" class={option('waterfall')}>\r\n\t\t\t\t\t<span class=\"bg\" style=\"background-position: 0 -180px\"></span>{}\r\n\t\t\t\t\tWaterfall\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={this.setBg} value=\"ocean\" class={option('ocean')}>\r\n\t\t\t\t\t<span class=\"bg\" style=\"background-position: 0 -270px\"></span>{}\r\n\t\t\t\t\tOcean\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={this.setBg} value=\"shaymin\" class={option('shaymin')}>\r\n\t\t\t\t\t<span class=\"bg\" style=\"background-position: 0 -360px\"></span>{}\r\n\t\t\t\t\tShaymin\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={this.setBg} value=\"solidblue\" class={option('solidblue')}>\r\n\t\t\t\t\t<span class=\"bg\" style=\"background: #344b6c\"></span>{}\r\n\t\t\t\t\tSolid blue\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div style=\"clear: left\"></div>\r\n\t\t\t<p><strong>Custom</strong></p>\r\n\t\t\t<p>\r\n\t\t\t\tUpload:\r\n\t\t\t</p>\r\n\t\t\t<p><input type=\"file\" accept=\"image/*\" name=\"bgfile\" onChange={this.uploadBg} /></p>\r\n\t\t\t{!!this.state.status && <p class=\"error\">{this.state.status}</p>}\r\n\t\t\t<p>\r\n\t\t\t\t<button data-cmd=\"/close\" class=\"button\"><strong>Done</strong></button>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass ChatFormattingPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'chatformatting';\r\n\tstatic readonly routes = ['chatformatting'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\thandleOnChange = (ev: Event) => {\r\n\t\tconst setting = \"hide\" + (ev.currentTarget as HTMLInputElement).name;\r\n\t\tconst value = (ev.currentTarget as HTMLInputElement).checked;\r\n\t\tlet curPref = PS.prefs.chatformatting;\r\n\t\tcurPref[setting] = value;\r\n\t\tPS.prefs.set(\"chatformatting\", curPref);\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t};\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst ctrl = PSView.isMac ? 'Cmd' : 'Ctrl';\r\n\t\treturn <PSPanelWrapper room={room} width={480}><div class=\"pad\">\r\n\t\t\t<p>Usable formatting:</p>\r\n\t\t\t<p>**<strong>bold</strong>** (<kbd>{ctrl}</kbd>+<kbd>B</kbd>)</p>\r\n\t\t\t<p>__<em>italics</em>__ (<kbd>{ctrl}</kbd>+<kbd>I</kbd>)</p>\r\n\t\t\t<p>``<code>code formatting</code>`` (<kbd>Ctrl</kbd>+<kbd>`</kbd>)</p>\r\n\t\t\t<p>~~<s>strikethrough</s>~~</p>\r\n\t\t\t<p>^^<sup>superscript</sup>^^</p>\r\n\t\t\t<p>\\\\<sub>subscript</sub>\\\\</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"greentext\"\r\n\t\t\t\t\t\tchecked={PS.prefs.chatformatting.hidegreentext}\r\n\t\t\t\t\t/> Suppress <span class=\"greentext\">&gt;greentext</span>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"me\"\r\n\t\t\t\t\t\tchecked={PS.prefs.chatformatting.hideme}\r\n\r\n\t\t\t\t\t/> Suppress <code>/me</code> <em>action formatting</em>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"spoiler\"\r\n\t\t\t\t\t\tchecked={PS.prefs.chatformatting.hidespoiler}\r\n\t\t\t\t\t/> Auto-show spoilers: <span class=\"spoiler\">these things</span>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"links\"\r\n\t\t\t\t\t\tchecked={PS.prefs.chatformatting.hidelinks}\r\n\t\t\t\t\t/> Make [[clickable links]] unclickable\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"interstice\"\r\n\t\t\t\t\t\tchecked={PS.prefs.chatformatting.hideinterstice}\r\n\t\t\t\t\t/> Don't warn for untrusted links\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p><button data-cmd=\"/close\" class=\"button\">Done</button></p>\r\n\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass LeaveRoomPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'confirmleaveroom';\r\n\tstatic readonly routes = ['confirmleaveroom'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst parentRoomid = room.parentRoomid!;\r\n\r\n\t\treturn <PSPanelWrapper room={room} width={480}><div class=\"pad\">\r\n\t\t\t<p>Close <code>{parentRoomid || \"ERROR\"}</code>?</p>\r\n\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t<button data-cmd={`/closeand /close ${parentRoomid}`} class=\"button autofocus\">\r\n\t\t\t\t\t<strong>Close Room</strong>\r\n\t\t\t\t</button> {}\r\n\t\t\t\t<button data-cmd=\"/close\" class=\"button\">\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</p>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\nclass BattleOptionsPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'battleoptions';\r\n\tstatic readonly routes = ['battleoptions'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\thandleHardcoreMode = (ev: Event) => {\r\n\t\tconst mode = (ev.currentTarget as HTMLInputElement).checked;\r\n\t\tconst room = this.getBattleRoom();\r\n\t\tif (!room) return this.close();\r\n\r\n\t\troom.battle.setHardcoreMode(mode);\r\n\t\tif (mode) {\r\n\t\t\troom.add(`||Hardcore mode ON: Information not available in-game is now hidden.`);\r\n\t\t} else {\r\n\t\t\troom.add(`||Hardcore mode OFF: Information not available in-game is now shown.`);\r\n\t\t}\r\n\t\troom.update(null);\r\n\t};\r\n\thandleIgnoreSpectators = (ev: Event | boolean) => {\r\n\t\tconst value = typeof ev === \"object\" ?\r\n\t\t\t(ev.currentTarget as HTMLInputElement).checked :\r\n\t\t\tev;\r\n\t\tconst room = this.getBattleRoom();\r\n\t\tif (!room) return this.close();\r\n\r\n\t\troom.battle.ignoreSpects = value;\r\n\t\troom.add(`||Spectators ${room.battle.ignoreSpects ? '' : 'no longer '}ignored.`);\r\n\t\tconst chats = document.querySelectorAll<HTMLElement>('.battle-log .chat');\r\n\t\tconst displaySetting = room.battle.ignoreSpects ? 'none' : '';\r\n\t\tfor (const chat of chats) {\r\n\t\t\tconst small = chat.querySelector('small');\r\n\t\t\tif (!small) continue;\r\n\t\t\tconst text = small.innerText;\r\n\t\t\tconst isPlayerChat = text.includes('\\u2606') || text.includes('\\u2605');\r\n\t\t\tif (!isPlayerChat) {\r\n\t\t\t\tchat.style.display = displaySetting;\r\n\t\t\t}\r\n\t\t}\r\n\t\troom.battle.scene.log.updateScroll();\r\n\t};\r\n\thandleIgnoreOpponent = (ev: Event | boolean) => {\r\n\t\tconst value = typeof ev === \"object\" ?\r\n\t\t\t(ev.currentTarget as HTMLInputElement).checked :\r\n\t\t\tev;\r\n\t\tconst room = this.getBattleRoom();\r\n\t\tif (!room) return this.close();\r\n\r\n\t\troom.battle.ignoreOpponent = value;\r\n\t\troom.battle.resetToCurrentTurn();\r\n\t};\r\n\thandleIgnoreNicks = (ev: Event | boolean) => {\r\n\t\tconst value = typeof ev === \"object\" ?\r\n\t\t\t(ev.currentTarget as HTMLInputElement).checked :\r\n\t\t\tev;\r\n\t\tconst room = this.getBattleRoom();\r\n\t\tif (!room) return this.close();\r\n\r\n\t\troom.battle.ignoreNicks = value;\r\n\t\troom.battle.resetToCurrentTurn();\r\n\t};\r\n\thandleAllSettings = (ev: Event) => {\r\n\t\tconst setting = (ev.currentTarget as HTMLInputElement).name;\r\n\t\tconst value = (ev.currentTarget as HTMLInputElement).checked;\r\n\t\tconst room = this.getBattleRoom();\r\n\r\n\t\tswitch (setting) {\r\n\t\tcase 'autotimer': {\r\n\t\t\tPS.prefs.set('autotimer', value);\r\n\t\t\tif (value) {\r\n\t\t\t\troom?.send('/timer on');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'ignoreopp': {\r\n\t\t\tPS.prefs.set('ignoreopp', value);\r\n\t\t\tthis.handleIgnoreOpponent(value);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'ignorespects': {\r\n\t\t\tPS.prefs.set('ignorespects', value);\r\n\t\t\tthis.handleIgnoreSpectators(value);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'ignorenicks': {\r\n\t\t\tPS.prefs.set('ignorenicks', value);\r\n\t\t\tthis.handleIgnoreNicks(value);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rightpanel': {\r\n\t\t\tPS.prefs.set('rightpanelbattles', value);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'disallowspectators': {\r\n\t\t\tPS.prefs.set('disallowspectators', value);\r\n\t\t\tPS.mainmenu.disallowSpectators = value;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\t};\r\n\tgetBattleRoom() {\r\n\t\tconst battleRoom = this.props.room.getParent() as BattleRoom | null;\r\n\t\treturn battleRoom?.battle ? battleRoom : null;\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst battleRoom = this.getBattleRoom();\r\n\t\tconst isPlayer = !!battleRoom?.battle.myPokemon;\r\n\t\tconst canOfferTie = battleRoom && ((battleRoom.battle.turn >= 100 && isPlayer) || PS.user.group === '~');\r\n\t\treturn <PSPanelWrapper room={room} width={380}><div class=\"pad\">\r\n\t\t\t{battleRoom && <>\r\n\t\t\t\t<p><strong>In this battle</strong></p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={battleRoom.battle.hardcoreMode}\r\n\t\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleHardcoreMode}\r\n\t\t\t\t\t\t/> Hardcore mode (hide info not shown in-game)\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={battleRoom.battle.ignoreSpects}\r\n\t\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleIgnoreSpectators}\r\n\t\t\t\t\t\t/> Ignore spectators\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={battleRoom.battle.ignoreOpponent}\r\n\t\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleIgnoreOpponent}\r\n\t\t\t\t\t\t/> Ignore opponent\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tchecked={battleRoom.battle?.ignoreNicks}\r\n\t\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleIgnoreNicks}\r\n\t\t\t\t\t\t/> Ignore nicknames\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t</>}\r\n\t\t\t<p><strong>All battles</strong></p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"disallowspectators\" checked={PS.prefs.disallowspectators || false}\r\n\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleAllSettings}\r\n\t\t\t\t\t/> <abbr title=\"You can still invite spectators by giving them the URL or using the /invite command\">Invite only (hide from Battles list)</abbr>\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"ignorenicks\" checked={PS.prefs.ignorenicks || false}\r\n\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleAllSettings}\r\n\t\t\t\t\t/> Ignore Pok&eacute;mon nicknames\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"ignorespects\" checked={PS.prefs.ignorespects || false}\r\n\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleAllSettings}\r\n\t\t\t\t\t/> Ignore spectators\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"ignoreopp\" checked={PS.prefs.ignoreopp || false}\r\n\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleAllSettings}\r\n\t\t\t\t\t/> Ignore opponent\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"autotimer\" checked={PS.prefs.autotimer || false}\r\n\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleAllSettings}\r\n\t\t\t\t\t/> Automatically start timer\r\n\t\t\t\t</label>\r\n\t\t\t</p>\r\n\t\t\t{!PS.prefs.onepanel && document.body.offsetWidth >= 800 && <p>\r\n\t\t\t\t<label class=\"checkbox\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"rightpanel\" checked={PS.prefs.rightpanelbattles || false}\r\n\t\t\t\t\t\ttype=\"checkbox\" onChange={this.handleAllSettings}\r\n\t\t\t\t\t/> Open new battles in the right-side panel\r\n\t\t\t\t</label>\r\n\t\t\t</p>}\r\n\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t<button data-cmd=\"/close\" class=\"button\">Done</button> {}\r\n\t\t\t\t{battleRoom && <button data-cmd=\"/closeand /inopener /offertie\" class=\"button\" disabled={!canOfferTie}>\r\n\t\t\t\t\tOffer Tie\r\n\t\t\t\t</button>}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass PopupRoom extends PSRoom {\r\n\treturnValue: unknown = this.args?.cancelValue;\r\n\toverride destroy() {\r\n\t\t(this.args?.callback as any)?.(this.returnValue);\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\nclass PopupPanel extends PSRoomPanel<PopupRoom> {\r\n\tstatic readonly id = 'popup';\r\n\tstatic readonly routes = ['popup-*'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\tstatic readonly Model = PopupRoom;\r\n\r\n\thandleSubmit = (ev: Event) => {\r\n\t\tev.preventDefault();\r\n\t\tev.stopImmediatePropagation();\r\n\t\tconst room = this.props.room;\r\n\t\troom.returnValue = room.args?.okValue;\r\n\t\tconst textbox = this.base!.querySelector<HTMLInputElement>('input[name=value]');\r\n\t\tif (textbox) {\r\n\t\t\troom.returnValue = textbox.value;\r\n\t\t}\r\n\t\tthis.close();\r\n\t};\r\n\toverride componentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t\tconst textbox = this.base!.querySelector<HTMLInputElement>('input[name=value]');\r\n\t\tif (!textbox) return;\r\n\t\ttextbox.value = this.props.room.args?.value as string || '';\r\n\t}\r\n\tparseMessage(message: string) {\r\n\t\tif (message.startsWith('|html|')) {\r\n\t\t\treturn BattleLog.sanitizeHTML(message.slice(6));\r\n\t\t}\r\n\t\treturn BattleLog.parseMessage(message);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room;\r\n\t\tconst okButton = room.args?.okButton as string || 'OK';\r\n\t\tconst cancelButton = room.args?.cancelButton as string | undefined;\r\n\t\tconst otherButtons = room.args?.otherButtons as preact.ComponentChildren;\r\n\t\tconst value = room.args?.value as string | undefined;\r\n\t\tconst type = (room.args?.type || (typeof value === 'string' ? 'text' : null)) as string | null;\r\n\t\tconst message = room.args?.message;\r\n\t\treturn <PSPanelWrapper room={room} width={room.args?.width as number || 480}>\r\n\t\t\t<form class=\"pad\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t{message && <p\r\n\t\t\t\t\tstyle=\"white-space:pre-wrap;word-wrap:break-word\"\r\n\t\t\t\t\tdangerouslySetInnerHTML={{ __html: this.parseMessage(message as string || '') }}\r\n\t\t\t\t></p>}\r\n\t\t\t\t{!!type && <p><input name=\"value\" type={type} class=\"textbox autofocus\" style=\"width:100%;box-sizing:border-box\" /></p>}\r\n\t\t\t\t<p class=\"buttonbar\">\r\n\t\t\t\t\t<button class={`button${!type ? ' autofocus' : ''}`} type=\"submit\" style=\"min-width:50px\">\r\n\t\t\t\t\t\t<strong>{okButton}</strong>\r\n\t\t\t\t\t</button> {}\r\n\t\t\t\t\t{otherButtons} {}\r\n\t\t\t\t\t{!!cancelButton && <button class=\"button\" data-cmd=\"/close\" type=\"button\">\r\n\t\t\t\t\t\t{cancelButton}\r\n\t\t\t\t\t</button>}\r\n\t\t\t\t</p>\r\n\t\t\t</form>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nclass RoomTabListPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'roomtablist';\r\n\tstatic readonly routes = ['roomtablist'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\tstartingLayout = PS.prefs.onepanel;\r\n\thandleLayoutChange = (ev: Event) => {\r\n\t\tconst checkbox = ev.currentTarget as HTMLInputElement;\r\n\t\tPS.prefs.onepanel = checkbox.checked ? 'vertical' : this.startingLayout;\r\n\t\tPS.update();\r\n\t};\r\n\toverride render() {\r\n\t\tconst verticalTabs = PS.prefs.onepanel === 'vertical';\r\n\t\treturn <PSPanelWrapper room={this.props.room}><div class=\"tablist\">\r\n\t\t\t<ul>\r\n\t\t\t\t{PS.leftRoomList.map(roomid => PSHeader.renderRoomTab(roomid, true))}\r\n\t\t\t</ul>\r\n\t\t\t<ul>\r\n\t\t\t\t{PS.rightRoomList.map(roomid => PSHeader.renderRoomTab(roomid, true))}\r\n\t\t\t</ul>\r\n\t\t\t<div class=\"pad\"><label class=\"checkbox\"><input\r\n\t\t\t\ttype=\"checkbox\" checked={verticalTabs} onChange={this.handleLayoutChange}\r\n\t\t\t/> Try vertical tabs</label></div>\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n}\r\nclass BattleTimerPanel extends PSRoomPanel {\r\n\tstatic readonly id = 'battletimer';\r\n\tstatic readonly routes = ['battletimer'];\r\n\tstatic readonly location = 'semimodal-popup';\r\n\tstatic readonly noURL = true;\r\n\r\n\toverride render() {\r\n\t\tconst room = this.props.room.getParent() as BattleRoom;\r\n\t\treturn <PSPanelWrapper room={this.props.room}><div class=\"pad\">\r\n\t\t\t{room.battle.kickingInactive ? (\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/closeand /inopener /timer stop\">Stop Timer</button>\r\n\t\t\t) : (\r\n\t\t\t\t<button class=\"button\" data-cmd=\"/closeand /inopener /timer start\">Start Timer</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t</PSPanelWrapper>;\r\n\t}\r\n}\r\n\r\nPS.addRoomType(\r\n\tUserPanel,\r\n\tUserOptionsPanel,\r\n\tUserListPanel,\r\n\tVolumePanel,\r\n\tOptionsPanel,\r\n\tLoginPanel,\r\n\tAvatarsPanel,\r\n\tChangePasswordPanel,\r\n\tRegisterPanel,\r\n\tBattleForfeitPanel,\r\n\tReplacePlayerPanel,\r\n\tBackgroundListPanel,\r\n\tLeaveRoomPanel,\r\n\tChatFormattingPanel,\r\n\tPopupPanel,\r\n\tRoomTabListPanel,\r\n\tBattleOptionsPanel,\r\n\tBattleTimerPanel\r\n);\r\n"],
  "mappings": "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",
  "names": ["preact"]
}
