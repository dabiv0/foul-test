{
  "version": 3,
  "sources": ["../../../../data/mods/ccapm2024/abilities.ts"],
  "sourcesContent": ["export const Abilities: import('../../../sim/dex-abilities').ModdedAbilityDataTable = {\r\n\tabsorber: {\r\n\t\tname: \"Absorber\",\r\n\t\trating: 3,\r\n\t\tshortDesc: \"This Pokemon heals 3/16 max HP after being targeted by a NVE/immune move.\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0)\r\n\t\t\t\tthis.heal(target.baseMaxhp * 0.18);\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (this.dex.types.isName(type)) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp * 0.18);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tantimatter: {\r\n\t\tonEffectiveness(typeMod) {\r\n\t\t\treturn typeMod * -1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Antimatter\",\r\n\t\tshortDesc: \"This Pokemon's defending effectiveness is reversed.\",\r\n\t},\r\n\tasymmetry: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Asymmetry');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\ttarget.addVolatile('asymmetry');\r\n\t\t\t\tconst createArray = (x: number) => Array.from({ length: x }, (_, i) => i);\r\n\t\t\t\tconst pokemonArray = createArray(pokemon.moves.length);\r\n\t\t\t\tconst targetArray = createArray(target.moves.length);\r\n\r\n\t\t\t\tconst pickNum1 = this.sample(pokemonArray);\r\n\t\t\t\tpokemonArray.splice(pokemonArray.indexOf(pickNum1), 1);\r\n\t\t\t\tlet pickNum2;\r\n\t\t\t\tif (pokemonArray.length === 0) pickNum2 = -1;\r\n\t\t\t\telse pickNum2 = this.sample(pokemonArray);\r\n\r\n\t\t\t\tconst pickNum3 = this.sample(targetArray);\r\n\t\t\t\ttargetArray.splice(targetArray.indexOf(pickNum3), 1);\r\n\t\t\t\tlet pickNum4;\r\n\t\t\t\tif (targetArray.length === 0) pickNum4 = -1;\r\n\t\t\t\telse pickNum4 = this.sample(targetArray);\r\n\r\n\t\t\t\tconst pokemonMove1 = this.dex.moves.get(pokemon.moves[pickNum1]);\r\n\t\t\t\tconst realPokemonMove1 = {\r\n\t\t\t\t\tmove: pokemonMove1.name,\r\n\t\t\t\t\tid: pokemonMove1.id,\r\n\t\t\t\t\tpp: pokemonMove1.pp * 1.6,\r\n\t\t\t\t\tmaxpp: pokemonMove1.pp * 1.6,\r\n\t\t\t\t\ttarget: pokemonMove1.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t\tvirtual: true,\r\n\t\t\t\t};\r\n\t\t\t\tconst targetMove1 = this.dex.moves.get(target.moves[pickNum3]);\r\n\t\t\t\tconst realTargetMove1 = {\r\n\t\t\t\t\tmove: targetMove1.name,\r\n\t\t\t\t\tid: targetMove1.id,\r\n\t\t\t\t\tpp: targetMove1.pp * 1.6,\r\n\t\t\t\t\tmaxpp: targetMove1.pp * 1.6,\r\n\t\t\t\t\ttarget: targetMove1.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t\tvirtual: true,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tpokemon.moveSlots[pickNum1] = realTargetMove1;\r\n\t\t\t\tpokemon.baseMoveSlots[pickNum1] = realTargetMove1;\r\n\t\t\t\ttarget.moveSlots[pickNum3] = realPokemonMove1;\r\n\t\t\t\ttarget.baseMoveSlots[pickNum3] = realPokemonMove1;\r\n\r\n\t\t\t\tif (pickNum2 === -1 || pickNum4 === -1) return;\r\n\t\t\t\tconst pokemonMove2 = this.dex.moves.get(pokemon.moves[pickNum2]);\r\n\t\t\t\tconst realPokemonMove2 = {\r\n\t\t\t\t\tmove: pokemonMove2.name,\r\n\t\t\t\t\tid: pokemonMove2.id,\r\n\t\t\t\t\tpp: pokemonMove2.pp * 1.6,\r\n\t\t\t\t\tmaxpp: pokemonMove2.pp * 1.6,\r\n\t\t\t\t\ttarget: pokemonMove2.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t\tvirtual: true,\r\n\t\t\t\t};\r\n\t\t\t\tconst targetMove2 = this.dex.moves.get(target.moves[pickNum4]);\r\n\t\t\t\tconst realTargetMove2 = {\r\n\t\t\t\t\tmove: targetMove2.name,\r\n\t\t\t\t\tid: targetMove2.id,\r\n\t\t\t\t\tpp: targetMove2.pp * 1.6,\r\n\t\t\t\t\tmaxpp: targetMove2.pp * 1.6,\r\n\t\t\t\t\ttarget: targetMove2.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t\tvirtual: true,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tpokemon.moveSlots[pickNum2] = realTargetMove2;\r\n\t\t\t\tpokemon.baseMoveSlots[pickNum2] = realTargetMove2;\r\n\t\t\t\ttarget.moveSlots[pickNum4] = realPokemonMove2;\r\n\t\t\t\ttarget.baseMoveSlots[pickNum4] = realPokemonMove2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tnoCopy: true,\r\n\t\t\tonBeforeMovePriority: 6,\r\n\t\t\tonBeforeMove(pokemon, target, move) {\r\n\t\t\t\tif (pokemon.moveSlots.filter(m => m.id === move.id).length === 0) {\r\n\t\t\t\t\tconst newMove = this.dex.moves.get(move);\r\n\t\t\t\t\tthis.actions.useMove(newMove, pokemon);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Asymmetry\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon randomly swaps two of its moves with the opponent's.\",\r\n\t},\r\n\tbackatya: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.damage(target.getUndynamaxedHP(damage * 2), source, target);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Back at Ya!\",\r\n\t\tshortDesc: \"This Pokemon deals double damage to the opponent when damaged by a move.\",\r\n\t},\r\n\tbadpacing: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tpokemon.addVolatile('badpacing');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(target) {\r\n\t\t\t\tthis.add('-start', target, 'ability: Bad Pacing');\r\n\t\t\t\tthis.effectState.badpacing = 1;\r\n\t\t\t},\r\n\t\t\tonRestart() {\r\n\t\t\t\tthis.effectState.badpacing++;\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\treturn this.chainModify(1 - 0.05 * this.effectState.badpacing);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 5,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\treturn this.chainModify(1 - 0.05 * this.effectState.badpacing);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\treturn this.chainModify(1 - 0.05 * this.effectState.badpacing);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 5,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\treturn this.chainModify(1 - 0.05 * this.effectState.badpacing);\r\n\t\t\t},\r\n\t\t\tonModifySpePriority: 5,\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\treturn this.chainModify(1 - 0.05 * this.effectState.badpacing);\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bad Pacing\",\r\n\t\tshortDesc: \"This Pokemon's non-HP stats are reduced by 5% each turn.\",\r\n\t},\r\n\tbathroombreak: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Bathroom Break');\r\n\t\t\t\ttarget.switchFlag = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.type === 'Water') target.switchFlag = true;\r\n\t\t},\r\n\t\tname: \"Bathroom Break\",\r\n\t\tshortDesc: \"This Pokemon switches out when using or hit by a Water move.\",\r\n\t},\r\n\tbigstick: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.adjacentFoes().length === 0) return;\r\n\t\t\tconst branchpoke = this.dex.getActiveMove('branchpoke');\r\n\t\t\tthis.actions.useMove(branchpoke, pokemon);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"big stick\",\r\n\t\tshortDesc: \"This Pokemon uses Branch Poke at the end of each turn.\",\r\n\t},\r\n\tbloodsucking: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tif (!activated) {\r\n\t\t\t\tactivated = true;\r\n\t\t\t\tpokemon.addVolatile('bloodsucking');\r\n\t\t\t\tconst leechlife = this.dex.getActiveMove('leechlife');\r\n\t\t\t\tthis.actions.useMove(leechlife, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Bloodsucking\",\r\n\t\tshortDesc: \"On switchin, this Pokemon uses a 20 BP Bug move and heals equal to the damage dealt.\",\r\n\t},\r\n\tbraceforimpact: {\r\n\t\tname: \"Brace for Impact\",\r\n\t\tshortDesc: \"This Pokemon takes half damage from attacks when switching in.\",\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (!target.activeTurns) {\r\n\t\t\t\tthis.debug('Brace For Impact weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tbrokenwand: {\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.category === 'Special') {\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.category === 'Special') {\r\n\t\t\t\tmove.recoil = [1, 3];\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Broken Wand\",\r\n\t\tshortDesc: \"This Pokemon's special moves have 1.3x more power but 33% recoil.\",\r\n\t},\r\n\tcapricious: {\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\tthis.attrLastMove('[anim] Fickle Beam All Out');\r\n\t\t\t\tthis.add('-activate', pokemon, 'move: Fickle Beam');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Capricious\",\r\n\t\tshortDesc: \"This Pokemon's attacks have a 30% chance of dealing double damage.\",\r\n\t},\r\n\tclinch: {\r\n\t\tonBeforeTurn(pokemon) {\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tif (side.hasAlly(pokemon)) continue;\r\n\t\t\t\tside.addSideCondition('clinch', pokemon);\r\n\t\t\t\tconst data = side.getSideConditionData('clinch');\r\n\t\t\t\tif (!data.sources) {\r\n\t\t\t\t\tdata.sources = [];\r\n\t\t\t\t}\r\n\t\t\t\tdata.sources.push(pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBeforeMove(source, target, move) {\r\n\t\t\tif (move.volatileStatus === \"twoturnmove\") {\r\n\t\t\t\tdelete move.volatileStatus;\r\n\t\t\t\tmove.accuracy = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(source, target) {\r\n\t\t\ttarget.side.removeSideCondition('clinch');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\t\tconst move = this.queue.willMove(pokemon.foes()[0]);\r\n\t\t\t\tconst moveName = move && move.moveid ? this.dex.getActiveMove(move.moveid.toString()) : \"\";\r\n\t\t\t\tif (!moveName || !moveName.flags['charge']) return;\r\n\t\t\t\tdelete moveName.onTryMove;\r\n\t\t\t\tthis.debug('Clinch start');\r\n\t\t\t\tlet alreadyAdded = false;\r\n\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t\tfor (const source of this.effectState.sources) {\r\n\t\t\t\t\tif (!source.isAdjacent(pokemon) || !this.queue.cancelMove(source) || !source.hp) continue;\r\n\t\t\t\t\tif (!alreadyAdded) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon.foes()[0], 'ability: Clinch');\r\n\t\t\t\t\t\talreadyAdded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.runMove(moveName, source, source.getLocOf(pokemon));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Clinch\",\r\n\t\tshortDesc: \"This Pokemon's charge moves fully charge and hit a target switching out.\",\r\n\t},\r\n\tcolorwheel: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'ability: Color Wheel');\r\n\t\t\tconst types = ['Bug', 'Dark', 'Dragon', 'Electric', 'Fairy', 'Fighting',\r\n\t\t\t\t'Fire', 'Flying', 'Ghost', 'Grass', 'Ground', 'Ice',\r\n\t\t\t\t'Normal', 'Poison', 'Psychic', 'Rock', 'Steel', 'Water'];\r\n\t\t\tconst newType1 = types[(types.indexOf(pokemon.types[0]) + 1) % 18];\r\n\t\t\tlet newTypes = [newType1];\r\n\t\t\tif (pokemon.types.length > 1) {\r\n\t\t\t\tconst newType2 = types[(types.indexOf(pokemon.types[1]) + 1) % 18];\r\n\t\t\t\tnewTypes = [newType1, newType2];\r\n\t\t\t}\r\n\t\t\tif (pokemon.setType(newTypes)) this.add('-start', pokemon, 'typechange', newTypes.join('/'));\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Color Wheel\",\r\n\t\tshortDesc: \"This Pokemon changes type(s) to the next one(s) alphabetically at the end of each turn.\",\r\n\t},\r\n\tcomeback: {\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (pokemon.activeMoveActions <= 1) return this.chainModify(1.3);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Comeback\",\r\n\t\tshortDesc: \"For the first turn after this Pokemon is active, its attacks have 1.3x power.\",\r\n\t},\r\n\tcontagious: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.status && !source.status && this.checkMoveMakesContact(move, source, target, true)) {\r\n\t\t\t\tsource.setStatus(target.status);\r\n\t\t\t\ttarget.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Contagious\",\r\n\t\tshortDesc: \"This Pokemon's non-volatile statuses transfer to Pokemon making contact with it.\",\r\n\t},\r\n\tcountermeasures: {\r\n\t\t// coded in scripts/actions/secondaries\r\n\t\tflags: {},\r\n\t\tname: \"Countermeasures\",\r\n\t\tshortDesc: \"When an attacker's secondary activates, it loses HP equal to 100 - secondary chance.\",\r\n\t},\r\n\tcrumble: {\r\n\t\tonFaint(pokemon) {\r\n\t\t\tconst side = pokemon.side.foe;\r\n\t\t\tconst stealthrock = side.sideConditions['stealthrock'];\r\n\t\t\tif (!stealthrock) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Crumble');\r\n\t\t\t\tside.addSideCondition('stealthrock', pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Crumble\",\r\n\t\tshortDesc: \"This Pokemon sets Stealth Rock upon fainting.\",\r\n\t},\r\n\tdewdrop: {\r\n\t\tonBasePowerPriority: 15,\r\n\t\tonBasePower(basePower, user, target, move) {\r\n\t\t\tif (move && ['Grass', 'Water', 'Fairy'].includes(move.type)) {\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Dewdrop\",\r\n\t\tshortDesc: \"This Pokemon's Grass/Water/Fairy moves have 1.2x power.\",\r\n\t},\r\n\tdiceroller: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!move.flags['bullet']) return;\r\n\t\t\tconst stats: BoostID[] = [];\r\n\t\t\tlet stat: BoostID;\r\n\t\t\tfor (stat in target.boosts) {\r\n\t\t\t\tif (source.boosts[stat] < 6) {\r\n\t\t\t\t\tif (stat === 'evasion') continue;\r\n\t\t\t\t\tstats.push(stat);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (stats.length) {\r\n\t\t\t\tlet randomStat = this.sample(stats);\r\n\t\t\t\tconst boost: SparseBoostsTable = {};\r\n\t\t\t\tboost[randomStat] = 1;\r\n\t\t\t\trandomStat = this.sample(stats);\r\n\t\t\t\tboost[randomStat] = 1;\r\n\t\t\t\tthis.boost(boost, source, source);\r\n\t\t\t} else return;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Dice Roller\",\r\n\t\tshortDesc: \"This Pokemon boosts random stats (not eva) by 1 twice after using a bullet move.\",\r\n\t},\r\n\tdiseased: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon);\r\n\t\t},\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\t// Despite not being a secondary, Shield Dust / Covert Cloak block Toxic Chain's effect\r\n\t\t\tif (target.hasAbility('shielddust') || target.hasItem('covertcloak')) return;\r\n\r\n\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\ttarget.trySetStatus('psn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Diseased\",\r\n\t\tshortDesc: \"This Pokemon's moves have a 30% chance to poison, but it loses 1/8 max HP every turn.\",\r\n\t},\r\n\tdrawfour: {\r\n\t\tshortDesc: \"After knocking out target, if user knows less than 12 moves, it learns target's moves.\",\r\n\t\tonSourceAfterFaint(length, source, target, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tfor (const moveSlot of source.moveSlots) {\r\n\t\t\t\t\tif (moveSlot === null) return;\r\n\t\t\t\t\tif (target.moveSlots.length < 12) {\r\n\t\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\t\tif (target.moveSlots.length < 0) return false;\r\n\t\t\t\t\t\ttarget.moveSlots[target.moveSlots.length] = moveSlot;\r\n\t\t\t\t\t\ttarget.baseMoveSlots[target.moveSlots.length - 1] = moveSlot;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Draw Four\",\r\n\t},\r\n\telectromagneticmanipulation: {\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.adjacentFoes().length === 0) return;\r\n\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\tif (!target || target.types[0] === 'Electric') return;\r\n\t\t\ttarget.addVolatile('electromagneticmanipulation');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tconst types = pokemon.types.length === 2 ? ['Electric', pokemon.types[1]] : ['Electric'];\r\n\t\t\t\tpokemon.setType(types);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'));\r\n\t\t\t},\r\n\t\t\tonUpdate(pokemon) {\r\n\t\t\t\tif (pokemon.adjacentFoes().length === 0) pokemon.removeVolatile('electromagneticmanipulation');\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\t\t\tif (!target.hasAbility('electromagneticmanipulation')) pokemon.removeVolatile('electromagneticmanipulation');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tconst types = pokemon.baseSpecies.types;\r\n\t\t\t\tconsole.log(types);\r\n\t\t\t\tpokemon.setType(types);\r\n\t\t\t\tthis.add('-start', pokemon, 'typechange', types.join('/'));\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Electromagnetic Manipulation\",\r\n\t\tshortDesc: \"While this Pokemon is active, the foe's primary type is Electric.\",\r\n\t},\r\n\texhaust: {\r\n\t\tonFoeSwitchOut(pokemon) {\r\n\t\t\tif (!pokemon.lastMoveUsed) return;\r\n\t\t\tconst moveUsed = pokemon.lastMoveUsed;\r\n\t\t\tconst moveIndex = pokemon.moves.indexOf(moveUsed.id);\r\n\t\t\tif (moveIndex === -1) return;\r\n\t\t\tconsole.log(pokemon.moveSlots[moveIndex]);\r\n\t\t\tpokemon.moveSlots[moveIndex].pp -= 5;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Exhaust\",\r\n\t\tshortDesc: \"While this Pokemon is active, opponents switching out lose 5 PP on the last move they used.\",\r\n\t},\r\n\tfirstclassticket: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.type === 'Flying') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"First-Class Ticket\",\r\n\t\tshortDesc: \"This Pokemon's Flying-type moves heal it for 1/4 max HP.\",\r\n\t},\r\n\tfumigation: {\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tconst poisongas = this.dex.getActiveMove('poisongas');\r\n\t\t\tthis.actions.useMove(poisongas, target);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Fumigation\",\r\n\t\tshortDesc: \"When this Pokemon is damaged by a move, it uses Poison Gas against the attacker.\",\r\n\t},\r\n\tgangster: {\r\n\t\tonFractionalPriorityPriority: -1,\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.type === 'Dark' || move.type === 'Fighting') {\r\n\t\t\t\treturn 0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Gangster\",\r\n\t\tshortDesc: \"This Pokemon's Dark/Fighting moves go first in its priority bracket.\",\r\n\t},\r\n\thibernation: {\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status === 'slp') this.boost({ def: 1, spd: 1 });\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Hibernation\",\r\n\t\tshortDesc: \"This Pokemon's Def/SpD are raised by 1 each turn while asleep.\",\r\n\t},\r\n\tironfistening: {\r\n\t\tonStart(source) {\r\n\t\t\tthis.actions.useMove(\"Fishing Tokens\", source);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Iron Fistening\",\r\n\t\tshortDesc: \"On switchin, this Pokemon's side gains a Fishing Token.\",\r\n\t},\r\n\tmagicmissile: {\r\n\t\tname: \"Magic Missile\",\r\n\t\tshortDesc: \"Magician + when damaged, fling item for 25% max HP.\",\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tif (target !== source && move.category !== 'Status') {\r\n\t\t\t\tif (source.item || source.volatiles['gem'] || move.id === 'fling') return;\r\n\t\t\t\tconst yourItem = target.takeItem(source);\r\n\t\t\t\tif (!yourItem) return;\r\n\t\t\t\tif (!source.setItem(yourItem)) {\r\n\t\t\t\t\ttarget.item = yourItem.id; // bypass setItem so we don't break choicelock or anything\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Magic Missile', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (target.isSemiInvulnerable()) return;\r\n\t\t\tif (target.ignoringItem()) return false;\r\n\t\t\tconst item = target.getItem();\r\n\t\t\tif (!this.singleEvent('TakeItem', item, target.itemState, target, target, move, item)) return false;\r\n\t\t\tif (item.id && !item.megaStone) {\r\n\t\t\t\tthis.damage(source.baseMaxhp / 4, source, target);\r\n\t\t\t\ttarget.addVolatile('fling');\r\n\t\t\t\tif (item.isBerry\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (this.singleEvent('Eat', item, null, source, null, null)) {\r\n\t\t\t\t\t\tthis.runEvent('EatItem', source, null, null, item);\r\n\t\t\t\t\t\tif (item.id === 'leppaberry') source.staleness = 'external';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.onEat) source.ateBerry = true;\r\n\t\t\t\t} else if (item.id === 'mentalherb') {\r\n\t\t\t\t\tconst conditions = ['attract', 'taunt', 'encore', 'torment', 'disable', 'healblock'];\r\n\t\t\t\t\tfor (const firstCondition of conditions) {\r\n\t\t\t\t\t\tif (source.volatiles[firstCondition]) {\r\n\t\t\t\t\t\t\tfor (const secondCondition of conditions) {\r\n\t\t\t\t\t\t\t\tsource.removeVolatile(secondCondition);\r\n\t\t\t\t\t\t\t\tif (firstCondition === 'attract' && secondCondition === 'attract') {\r\n\t\t\t\t\t\t\t\t\tthis.add('-end', source, 'move: Attract', '[from] item: Mental Herb');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (item.id === 'whiteherb') {\r\n\t\t\t\t\tlet activate = false;\r\n\t\t\t\t\tconst boosts: SparseBoostsTable = {};\r\n\t\t\t\t\tlet boostName: BoostID;\r\n\t\t\t\t\tfor (boostName in source.boosts) {\r\n\t\t\t\t\t\tif (source.boosts[boostName] < 0) {\r\n\t\t\t\t\t\t\tactivate = true;\r\n\t\t\t\t\t\t\tboosts[boostName] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (activate) {\r\n\t\t\t\t\t\tsource.setBoost(boosts);\r\n\t\t\t\t\t\tthis.add('-clearnegativeboost', source, '[silent]');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (item.fling?.status) {\r\n\t\t\t\t\t\tsource.trySetStatus(item.fling.status, target);\r\n\t\t\t\t\t} else if (item.fling?.volatileStatus) {\r\n\t\t\t\t\t\tsource.addVolatile(item.fling.volatileStatus, target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tmedic: {\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.side.addSideCondition('medic');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\t// this is a side condition\r\n\t\t\tonSideStart(side) {\r\n\t\t\t\tthis.add('-sidestart', side, 'medic', '[silent]');\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\tthis.heal(pokemon.maxhp / 6);\r\n\t\t\t\tif (pokemon.status) pokemon.cureStatus();\r\n\t\t\t\tpokemon.side.removeSideCondition('medic');\r\n\t\t\t\tthis.add('-sideend', pokemon.side, 'move: Medic', '[silent]');\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Medic\",\r\n\t\tshortDesc: \"Upon switching out, the replacement heals 1/6 max HP and has its status cured.\",\r\n\t},\r\n\tmindbloom: {\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (move.category === 'Status' && move.target === 'normal') {\r\n\t\t\t\tmove.boosts = {\r\n\t\t\t\t\tspd: -1,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMove(pokemon, source, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tif (pokemon.adjacentFoes().length === 0) return;\r\n\t\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\t\tthis.boost({ spd: -1 }, target, pokemon, null, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Mind Bloom\",\r\n\t\tshortDesc: \"This Pokemon's status moves lower the opponent's Sp. Def by 1.\",\r\n\t},\r\n\tmomentum: {\r\n\t\tname: \"Momentum\",\r\n\t\tshortDesc: \"Damage of moves used on consecutive turns is increased. Max 2x after 5 turns.\",\r\n\t\tflags: {},\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('momentum');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.lastMove = '';\r\n\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t},\r\n\t\t\tonTryMovePriority: -2,\r\n\t\t\tonTryMove(pokemon, target, move) {\r\n\t\t\t\tif (!pokemon.hasItem('momentum')) {\r\n\t\t\t\t\tpokemon.removeVolatile('momentum');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.callsMove) return;\r\n\t\t\t\tif (this.effectState.lastMove === move.id && pokemon.moveLastTurnResult) {\r\n\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t} else if (pokemon.volatiles['twoturnmove']) {\r\n\t\t\t\t\tif (this.effectState.lastMove !== move.id) {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.lastMove = move.id;\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tconst dmgMod = [4096, 4915, 5734, 6553, 7372, 8192];\r\n\t\t\t\tconst numConsecutive = this.effectState.numConsecutive > 5 ? 5 : this.effectState.numConsecutive;\r\n\t\t\t\tthis.debug(`Current Metronome boost: ${dmgMod[numConsecutive]}/4096`);\r\n\t\t\t\treturn this.chainModify([dmgMod[numConsecutive], 4096]);\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tnightlight: {\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Dark' || move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Night Light weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Dark' || move.type === 'Ghost') {\r\n\t\t\t\tthis.debug('Night Light weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tname: \"Night Light\",\r\n\t\tshortDesc: \"This Pokemon takes halved damage from Dark and Ghost-type moves.\",\r\n\t},\r\n\tnightmarch: {\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tfor (const ally of pokemon.side.pokemon)\r\n\t\t\t\tif (ally !== pokemon && ally.set.moves.includes(move.name))\r\n\t\t\t\t\tbasePower += 20;\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tname: \"Night March\",\r\n\t\tshortDesc: \"This Pokemon's attacks gain +20 power for each ally that also has that move.\",\r\n\t},\r\n\tnocturnal: {\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Nocturnal');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tname: \"Nocturnal\",\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Dark moves; Dark immunity.\",\r\n\t},\r\n\toutclass: {\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (!move || !target) return;\r\n\t\t\tconst targetType = target.types[0];\r\n\t\t\tlet sourceSecondaryType = '???';\r\n\t\t\tif (source.types[1]) sourceSecondaryType = source.types[1];\r\n\t\t\tif (target !== source && move.category !== 'Status' &&\r\n\t\t\t\t!source.hasType(targetType) && targetType !== '???' &&\r\n\t\t\t\t!(source.volatiles['outclass'] && !source.side.removeSideCondition('fishingtokens'))) {\r\n\t\t\t\tsource.setType([source.types[0]]);\r\n\t\t\t\tif (source.addType(targetType)) {\r\n\t\t\t\t\ttarget.setType(target.getTypes(true).map(type => type === targetType ? \"???\" : type));\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', target.types.join('/'));\r\n\t\t\t\t\tthis.add('-start', source, 'typeadd', targetType, '[from] ability: Outclass');\r\n\t\t\t\t\tsource.addVolatile('outclass');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.debug('Failed to take target type.');\r\n\t\t\t\t\tif (sourceSecondaryType !== '???') source.setType([source.types[0], sourceSecondaryType]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {},\r\n\t\tflags: {},\r\n\t\tname: \"Outclass\",\r\n\t\tshortDesc: \"Fishing token or first hit: steals target primary type and replaces its own secondary type.\",\r\n\t},\r\n\tpeckingorder: {\r\n\t\tname: \"Pecking Order\",\r\n\t\tshortDesc: \"On switch-in, this Pokemon lowers the Defense of adjacent opponents by 1 stage.\",\r\n\t\tflags: {},\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Pecking Order', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({ def: -1 }, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tpolychrome: {\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (!pokemon.hasType(move.type)) return this.chainModify(1.25);\r\n\t\t},\r\n\t\tname: \"Polychrome\",\r\n\t\tshortDesc: \"This Pokemon's non-STAB moves have 1.25x power.\",\r\n\t},\r\n\tprecognition: {\r\n\t\tonBeforeTurn(pokemon) {\r\n\t\t\tif (pokemon.adjacentFoes().length === 0) return;\r\n\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\tconst targetAction = this.queue.willMove(target);\r\n\t\t\tif (!targetAction) return;\r\n\t\t\tconst pokemonAction = this.queue.willMove(pokemon);\r\n\t\t\tif (!pokemonAction) return;\r\n\t\t\tconst targetMove = this.dex.getActiveMove(targetAction.move.id);\r\n\t\t\tconst pokemonMove = this.dex.getActiveMove(pokemonAction.move.id);\r\n\t\t\tif (!pokemon.volatiles['substitute'] && targetMove.type === pokemonMove.type) {\r\n\t\t\t\tconst substitute = this.dex.getActiveMove('substitute');\r\n\t\t\t\tthis.actions.useMove(substitute, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Precognition\",\r\n\t\tshortDesc: \"If a foe selects the same type move as the user, the user uses Substitute at the beginning of the turn.\",\r\n\t},\r\n\tpreeminence: {\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(move.basePower, this.event.modifier);\r\n\t\t\tthis.debug(`Base Power: ${basePowerAfterMultiplier}`);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Preeminence boost');\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Preeminence\",\r\n\t\tshortDesc: \"This Pokemon's moves of 60 power or less have +1 priority, including Struggle.\",\r\n\t},\r\n\tpreparation: {\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.category === 'Status' && move.name !== 'Substitute' && !move.stallingMove) {\r\n\t\t\t\tsource.addVolatile('preparation');\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 2,\r\n\t\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Preparation\",\r\n\t\tshortDesc: \"Deals 2x damage the turn after using a status move.\",\r\n\t},\r\n\tpuppetmaster: {\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.effectState.puppetmaster = pokemon;\r\n\t\t},\r\n\t\tonAnyPrepareHitPriority: -1,\r\n\t\tonAnyPrepareHit(source, target, move) {\r\n\t\t\tconst puppetmaster = this.effectState.puppetmaster;\r\n\t\t\tif (!move || move.name !== 'Substitute' || move.isZ || move.isMax || move.sourceEffect === 'puppetmaster') return;\r\n\t\t\tthis.actions.useMove(move.id, puppetmaster);\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.adjacentFoes().length === 0) return;\r\n\t\t\tconst target = this.sample(pokemon.adjacentFoes());\r\n\t\t\tif (target.volatiles['substitute']) this.damage(target.baseMaxhp / 8, target, pokemon);\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true) && this.randomChance(1, 1000)) {\r\n\t\t\t\tsource.formeChange('Cradily');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Puppet Master\",\r\n\t\tshortDesc: \"This Pokemon steals foes' Substitute. Foes under Substitute lose 1/5 max HP per turn.\",\r\n\t},\r\n\tquickthinking: {\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, pokemon) {\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.newlySwitched || this.queue.willMove(target)) {\r\n\t\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (this.queue.willMove(target)) {\r\n\t\t\t\tthis.debug('Slow and Steady neutralize');\r\n\t\t\t\treturn this.chainModify(0.7);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tname: \"Quick Thinking\",\r\n\t\tshortDesc: \"This Pokemon deals 1.3x damage when moving first and takes 0.7x damage when moving last.\",\r\n\t},\r\n\trefraction: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Refraction');\r\n\t\t\tpokemon.side.addSideCondition('waterpledge');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Refraction\",\r\n\t\tshortDesc: \"On switchin, this Pokemon sets Rainbow on its side.\",\r\n\t},\r\n\troyalguard: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.effectState.royalguard) return;\r\n\t\t\tthis.effectState.royalguard = true;\r\n\t\t\tthis.actions.useMove(\"substitute\", pokemon);\r\n\t\t},\r\n\t\tname: \"Royal Guard\",\r\n\t\tshortDesc: \"On switchin, this Pokemon uses Substitute. Once per battle.\",\r\n\t},\r\n\tsealedoff: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Sealed Off');\r\n\t\t\tthis.actions.useMove(\"imprison\", pokemon);\r\n\t\t},\r\n\t\tname: \"Sealed Off\",\r\n\t\tshortDesc: \"On switchin, this Pokemon uses Imprison.\",\r\n\t},\r\n\tsearingremark: {\r\n\t\tonSourceDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.flags['sound'] && this.randomChance(3, 10)) {\r\n\t\t\t\tif (!target.hasAbility('shielddust') && !target.hasItem('covertcloak')) target.trySetStatus('brn', source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Searing Remark\",\r\n\t\tshortDesc: \"This Pokemon's sound moves have a 30% of burning the target.\",\r\n\t},\r\n\tselfrepair: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 4);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Self-Repair\",\r\n\t\tshortDesc: \"This Pokemon heals 25% its max HP after using a Status move.\",\r\n\t},\r\n\tsnowhazard: {\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tthis.field.setWeather('snowscape');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Snowhazard\",\r\n\t\tshortDesc: \"When this Pokemon is hit by an attack, the effect of Snow begins.\",\r\n\t},\r\n\tspinthewheel: {\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst metronome = this.dex.getActiveMove('metronome');\r\n\t\t\tthis.actions.useMove(metronome, pokemon);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Spin the Wheel\",\r\n\t\tshortDesc: \"This Pokemon uses Metronome at the end of each turn.\",\r\n\t},\r\n\tstatleeching: {\r\n\t\tonFoeAfterBoost(boost, target, source, effect) {\r\n\t\t\tif (effect?.name === 'Opportunist' || effect?.name === 'Stat Leeching' || effect?.name === 'Mirror Herb') return;\r\n\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\tconst boosts: Partial<BoostsTable> = {};\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tboost[i]! *= -1;\r\n\t\t\t\tboosts[i] = boost[i];\r\n\t\t\t}\r\n\t\t\tif (Object.keys(boosts).length < 1) return;\r\n\t\t\tthis.boost(boosts, pokemon);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Stat Leeching\",\r\n\t\tshortDesc: \"This Pokemon gains the opposite stat change as opposing Pokemon.\",\r\n\t},\r\n\tstrongbreeze: {\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.effectState.strongbreeze) return;\r\n\t\t\tthis.effectState.strongbreeze = true;\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Strong Breeze');\r\n\t\t\tpokemon.side.addSideCondition('tailwind');\r\n\t\t},\r\n\t\tname: \"Strong Breeze\",\r\n\t\tshortDesc: \"On switchin, this Pokemon sets Tailwind. Once per battle.\",\r\n\t},\r\n\tsuperrod: {\r\n\t\tonAfterMove(target, source, move) {\r\n\t\t\tif (!source.side.sideConditions['fishingTokens']) return;\r\n\t\t\tif (move.type === 'Water') {\r\n\t\t\t\tthis.heal(source.baseMaxhp / 16 * source.side.sideConditions['fishingTokens'].layers);\r\n\t\t\t}\r\n\t\t},\r\n\t\tname: \"Super Rod\",\r\n\t\tshortDesc: \"This Pokemon's Water-type moves heal it for 1/16 max HP for each Fishing Token.\",\r\n\t},\r\n\ttreasurecraze: {\r\n\t\tonAfterUseItem(item, pokemon) {\r\n\t\t\tif (pokemon !== this.effectState.target) return;\r\n\t\t\tthis.boost({ atk: 2 }, pokemon, pokemon, null, false, true);\r\n\t\t},\r\n\t\tonTakeItem(item, pokemon) {\r\n\t\t\tthis.boost({ atk: 2 }, pokemon, pokemon, null, false, true);\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tname: \"Treasure Craze\",\r\n\t\tshortDesc: \"When this Pokemon loses its held item, its Attack is raised by 2.\",\r\n\t},\r\n\ttroubled: {\r\n\t\tonStart(source) {\r\n\t\t\tsource.addVolatile('troubled');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonDisableMove(pokemon) {\r\n\t\t\t\tif (pokemon.lastMove && pokemon.lastMove.id !== 'struggle') pokemon.disableMove(pokemon.lastMove.id);\r\n\t\t\t},\r\n\t\t},\r\n\t\tname: \"Troubled\",\r\n\t\tshortDesc: \"This Pokemon cannot use the same move twice in a row.\",\r\n\t},\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,YAAyE;AAAA,EACrF,UAAU;AAAA,IACT,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,OAAO,eAAe,IAAI,EAAE,UAAU;AACzC,aAAK,KAAK,OAAO,YAAY,IAAI;AAAA,IACnC;AAAA,IACA,WAAW,MAAM,SAAS;AACzB,UAAI,KAAK,IAAI,MAAM,OAAO,IAAI,GAAG;AAChC,aAAK,KAAK,QAAQ,YAAY,IAAI;AAAA,MACnC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,EACT;AAAA,EACA,YAAY;AAAA,IACX,gBAAgB,SAAS;AACxB,aAAO,UAAU;AAAA,IAClB;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACV,QAAQ,SAAS;AAChB,UAAI,YAAY;AAChB,iBAAW,UAAU,QAAQ,aAAa,GAAG;AAC5C,YAAI,CAAC,WAAW;AACf,eAAK,IAAI,YAAY,SAAS,WAAW;AACzC,sBAAY;AAAA,QACb;AACA,eAAO,YAAY,WAAW;AAC9B,cAAM,cAAc,CAAC,MAAc,MAAM,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;AACxE,cAAM,eAAe,YAAY,QAAQ,MAAM,MAAM;AACrD,cAAM,cAAc,YAAY,OAAO,MAAM,MAAM;AAEnD,cAAM,WAAW,KAAK,OAAO,YAAY;AACzC,qBAAa,OAAO,aAAa,QAAQ,QAAQ,GAAG,CAAC;AACrD,YAAI;AACJ,YAAI,aAAa,WAAW,EAAG,YAAW;AAAA,YACrC,YAAW,KAAK,OAAO,YAAY;AAExC,cAAM,WAAW,KAAK,OAAO,WAAW;AACxC,oBAAY,OAAO,YAAY,QAAQ,QAAQ,GAAG,CAAC;AACnD,YAAI;AACJ,YAAI,YAAY,WAAW,EAAG,YAAW;AAAA,YACpC,YAAW,KAAK,OAAO,WAAW;AAEvC,cAAM,eAAe,KAAK,IAAI,MAAM,IAAI,QAAQ,MAAM,QAAQ,CAAC;AAC/D,cAAM,mBAAmB;AAAA,UACxB,MAAM,aAAa;AAAA,UACnB,IAAI,aAAa;AAAA,UACjB,IAAI,aAAa,KAAK;AAAA,UACtB,OAAO,aAAa,KAAK;AAAA,UACzB,QAAQ,aAAa;AAAA,UACrB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AACA,cAAM,cAAc,KAAK,IAAI,MAAM,IAAI,OAAO,MAAM,QAAQ,CAAC;AAC7D,cAAM,kBAAkB;AAAA,UACvB,MAAM,YAAY;AAAA,UAClB,IAAI,YAAY;AAAA,UAChB,IAAI,YAAY,KAAK;AAAA,UACrB,OAAO,YAAY,KAAK;AAAA,UACxB,QAAQ,YAAY;AAAA,UACpB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAEA,gBAAQ,UAAU,QAAQ,IAAI;AAC9B,gBAAQ,cAAc,QAAQ,IAAI;AAClC,eAAO,UAAU,QAAQ,IAAI;AAC7B,eAAO,cAAc,QAAQ,IAAI;AAEjC,YAAI,aAAa,MAAM,aAAa,GAAI;AACxC,cAAM,eAAe,KAAK,IAAI,MAAM,IAAI,QAAQ,MAAM,QAAQ,CAAC;AAC/D,cAAM,mBAAmB;AAAA,UACxB,MAAM,aAAa;AAAA,UACnB,IAAI,aAAa;AAAA,UACjB,IAAI,aAAa,KAAK;AAAA,UACtB,OAAO,aAAa,KAAK;AAAA,UACzB,QAAQ,aAAa;AAAA,UACrB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AACA,cAAM,cAAc,KAAK,IAAI,MAAM,IAAI,OAAO,MAAM,QAAQ,CAAC;AAC7D,cAAM,kBAAkB;AAAA,UACvB,MAAM,YAAY;AAAA,UAClB,IAAI,YAAY;AAAA,UAChB,IAAI,YAAY,KAAK;AAAA,UACrB,OAAO,YAAY,KAAK;AAAA,UACxB,QAAQ,YAAY;AAAA,UACpB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAEA,gBAAQ,UAAU,QAAQ,IAAI;AAC9B,gBAAQ,cAAc,QAAQ,IAAI;AAClC,eAAO,UAAU,QAAQ,IAAI;AAC7B,eAAO,cAAc,QAAQ,IAAI;AAAA,MAClC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,sBAAsB;AAAA,MACtB,aAAa,SAAS,QAAQ,MAAM;AACnC,YAAI,QAAQ,UAAU,OAAO,OAAK,EAAE,OAAO,KAAK,EAAE,EAAE,WAAW,GAAG;AACjE,gBAAM,UAAU,KAAK,IAAI,MAAM,IAAI,IAAI;AACvC,eAAK,QAAQ,QAAQ,SAAS,OAAO;AACrC,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,WAAK,OAAO,OAAO,iBAAiB,SAAS,CAAC,GAAG,QAAQ,MAAM;AAAA,IAChE;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACV,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,WAAW,SAAS;AACnB,cAAQ,YAAY,WAAW;AAAA,IAChC;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ,QAAQ;AACf,aAAK,IAAI,UAAU,QAAQ,qBAAqB;AAChD,aAAK,YAAY,YAAY;AAAA,MAC9B;AAAA,MACA,YAAY;AACX,aAAK,YAAY;AAAA,MAClB;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,IAAI,OAAO,KAAK,YAAY,SAAS;AAAA,MAC9D;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,IAAI,OAAO,KAAK,YAAY,SAAS;AAAA,MAC9D;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,IAAI,OAAO,KAAK,YAAY,SAAS;AAAA,MAC9D;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,IAAI,OAAO,KAAK,YAAY,SAAS;AAAA,MAC9D;AAAA,MACA,qBAAqB;AAAA,MACrB,YAAY,KAAK,SAAS;AACzB,eAAO,KAAK,YAAY,IAAI,OAAO,KAAK,YAAY,SAAS;AAAA,MAC9D;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACd,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,KAAK,SAAS,SAAS;AAC1B,aAAK,IAAI,aAAa,QAAQ,yBAAyB;AACvD,eAAO,aAAa;AAAA,MACrB;AAAA,IACD;AAAA,IACA,oBAAoB;AAAA,IACpB,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,KAAK,SAAS,QAAS,QAAO,aAAa;AAAA,IAChD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,WAAW,SAAS;AACnB,UAAI,QAAQ,aAAa,EAAE,WAAW,EAAG;AACzC,YAAM,aAAa,KAAK,IAAI,cAAc,YAAY;AACtD,WAAK,QAAQ,QAAQ,YAAY,OAAO;AAAA,IACzC;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,QAAQ,SAAS;AAChB,UAAI,YAAY;AAChB,UAAI,CAAC,WAAW;AACf,oBAAY;AACZ,gBAAQ,YAAY,cAAc;AAClC,cAAM,YAAY,KAAK,IAAI,cAAc,WAAW;AACpD,aAAK,QAAQ,QAAQ,WAAW,OAAO;AAAA,MACxC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,gBAAgB;AAAA,IACf,MAAM;AAAA,IACN,WAAW;AAAA,IACX,qBAAqB,QAAQ,QAAQ,QAAQ,MAAM;AAClD,UAAI,CAAC,OAAO,aAAa;AACxB,aAAK,MAAM,yBAAyB;AACpC,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX,eAAe,QAAQ,QAAQ,QAAQ,MAAM;AAC5C,UAAI,KAAK,aAAa,WAAW;AAChC,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,aAAa,MAAM,SAAS;AAC3B,UAAI,KAAK,aAAa,WAAW;AAChC,aAAK,SAAS,CAAC,GAAG,CAAC;AAAA,MACpB;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,YAAY,WAAW,SAAS;AAC/B,UAAI,KAAK,aAAa,GAAG,EAAE,GAAG;AAC7B,aAAK,aAAa,4BAA4B;AAC9C,aAAK,IAAI,aAAa,SAAS,mBAAmB;AAClD,eAAO,KAAK,YAAY,CAAC;AAAA,MAC1B;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,QAAQ;AAAA,IACP,aAAa,SAAS;AACrB,iBAAW,QAAQ,KAAK,OAAO;AAC9B,YAAI,KAAK,QAAQ,OAAO,EAAG;AAC3B,aAAK,iBAAiB,UAAU,OAAO;AACvC,cAAM,OAAO,KAAK,qBAAqB,QAAQ;AAC/C,YAAI,CAAC,KAAK,SAAS;AAClB,eAAK,UAAU,CAAC;AAAA,QACjB;AACA,aAAK,QAAQ,KAAK,OAAO;AAAA,MAC1B;AAAA,IACD;AAAA,IACA,aAAa,QAAQ,QAAQ,MAAM;AAClC,UAAI,KAAK,mBAAmB,eAAe;AAC1C,eAAO,KAAK;AACZ,aAAK,WAAW;AAAA,MACjB;AAAA,IACD;AAAA,IACA,SAAS,QAAQ,QAAQ;AACxB,aAAO,KAAK,oBAAoB,QAAQ;AAAA,IACzC;AAAA,IACA,WAAW;AAAA,MACV,UAAU;AAAA,MACV,kBAAkB,SAAS;AAC1B,cAAM,OAAO,KAAK,MAAM,SAAS,QAAQ,KAAK,EAAE,CAAC,CAAC;AAClD,cAAM,WAAW,QAAQ,KAAK,SAAS,KAAK,IAAI,cAAc,KAAK,OAAO,SAAS,CAAC,IAAI;AACxF,YAAI,CAAC,YAAY,CAAC,SAAS,MAAM,QAAQ,EAAG;AAC5C,eAAO,SAAS;AAChB,aAAK,MAAM,cAAc;AACzB,YAAI,eAAe;AACnB,gBAAQ,eAAe,aAAa;AACpC,mBAAW,UAAU,KAAK,YAAY,SAAS;AAC9C,cAAI,CAAC,OAAO,WAAW,OAAO,KAAK,CAAC,KAAK,MAAM,WAAW,MAAM,KAAK,CAAC,OAAO,GAAI;AACjF,cAAI,CAAC,cAAc;AAClB,iBAAK,IAAI,aAAa,QAAQ,KAAK,EAAE,CAAC,GAAG,iBAAiB;AAC1D,2BAAe;AAAA,UAChB;AACA,eAAK,QAAQ,QAAQ,UAAU,QAAQ,OAAO,SAAS,OAAO,CAAC;AAAA,QAChE;AAAA,MACD;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,WAAW,SAAS;AACnB,WAAK,IAAI,YAAY,SAAS,sBAAsB;AACpD,YAAM,QAAQ;AAAA,QAAC;AAAA,QAAO;AAAA,QAAQ;AAAA,QAAU;AAAA,QAAY;AAAA,QAAS;AAAA,QAC5D;AAAA,QAAQ;AAAA,QAAU;AAAA,QAAS;AAAA,QAAS;AAAA,QAAU;AAAA,QAC9C;AAAA,QAAU;AAAA,QAAU;AAAA,QAAW;AAAA,QAAQ;AAAA,QAAS;AAAA,MAAO;AACxD,YAAM,WAAW,OAAO,MAAM,QAAQ,QAAQ,MAAM,CAAC,CAAC,IAAI,KAAK,EAAE;AACjE,UAAI,WAAW,CAAC,QAAQ;AACxB,UAAI,QAAQ,MAAM,SAAS,GAAG;AAC7B,cAAM,WAAW,OAAO,MAAM,QAAQ,QAAQ,MAAM,CAAC,CAAC,IAAI,KAAK,EAAE;AACjE,mBAAW,CAAC,UAAU,QAAQ;AAAA,MAC/B;AACA,UAAI,QAAQ,QAAQ,QAAQ,EAAG,MAAK,IAAI,UAAU,SAAS,cAAc,SAAS,KAAK,GAAG,CAAC;AAAA,IAC5F;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,qBAAqB;AAAA,IACrB,YAAY,WAAW,SAAS,QAAQ,MAAM;AAC7C,UAAI,QAAQ,qBAAqB,EAAG,QAAO,KAAK,YAAY,GAAG;AAAA,IAChE;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,oBAAoB;AAAA,IACpB,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,OAAO,UAAU,CAAC,OAAO,UAAU,KAAK,sBAAsB,MAAM,QAAQ,QAAQ,IAAI,GAAG;AAC9F,eAAO,UAAU,OAAO,MAAM;AAC9B,eAAO,WAAW;AAAA,MACnB;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,iBAAiB;AAAA;AAAA,IAEhB,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,IACR,QAAQ,SAAS;AAChB,YAAM,OAAO,QAAQ,KAAK;AAC1B,YAAM,cAAc,KAAK,eAAe,aAAa;AACrD,UAAI,CAAC,aAAa;AACjB,aAAK,IAAI,aAAa,SAAS,kBAAkB;AACjD,aAAK,iBAAiB,eAAe,OAAO;AAAA,MAC7C;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,IACR,qBAAqB;AAAA,IACrB,YAAY,WAAW,MAAM,QAAQ,MAAM;AAC1C,UAAI,QAAQ,CAAC,SAAS,SAAS,OAAO,EAAE,SAAS,KAAK,IAAI,GAAG;AAC5D,eAAO,KAAK,YAAY,CAAC,MAAM,IAAI,CAAC;AAAA,MACrC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,oBAAoB,QAAQ,QAAQ,QAAQ,MAAM;AACjD,UAAI,CAAC,KAAK,MAAM,QAAQ,EAAG;AAC3B,YAAM,QAAmB,CAAC;AAC1B,UAAI;AACJ,WAAK,QAAQ,OAAO,QAAQ;AAC3B,YAAI,OAAO,OAAO,IAAI,IAAI,GAAG;AAC5B,cAAI,SAAS,UAAW;AACxB,gBAAM,KAAK,IAAI;AAAA,QAChB;AAAA,MACD;AACA,UAAI,MAAM,QAAQ;AACjB,YAAI,aAAa,KAAK,OAAO,KAAK;AAClC,cAAM,QAA2B,CAAC;AAClC,cAAM,UAAU,IAAI;AACpB,qBAAa,KAAK,OAAO,KAAK;AAC9B,cAAM,UAAU,IAAI;AACpB,aAAK,MAAM,OAAO,QAAQ,MAAM;AAAA,MACjC,MAAO;AAAA,IACR;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,WAAW,SAAS;AACnB,WAAK,OAAO,QAAQ,YAAY,GAAG,SAAS,OAAO;AAAA,IACpD;AAAA,IACA,oBAAoB,QAAQ,QAAQ,QAAQ,MAAM;AAEjD,UAAI,OAAO,WAAW,YAAY,KAAK,OAAO,QAAQ,aAAa,EAAG;AAEtE,UAAI,KAAK,aAAa,GAAG,EAAE,GAAG;AAC7B,eAAO,aAAa,OAAO,MAAM;AAAA,MAClC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,WAAW;AAAA,IACX,mBAAmB,QAAQ,QAAQ,QAAQ,QAAQ;AAClD,UAAI,UAAU,OAAO,eAAe,QAAQ;AAC3C,mBAAW,YAAY,OAAO,WAAW;AACxC,cAAI,aAAa,KAAM;AACvB,cAAI,OAAO,UAAU,SAAS,IAAI;AACjC,iBAAK,aAAa,SAAS;AAC3B,gBAAI,OAAO,UAAU,SAAS,EAAG,QAAO;AACxC,mBAAO,UAAU,OAAO,UAAU,MAAM,IAAI;AAC5C,mBAAO,cAAc,OAAO,UAAU,SAAS,CAAC,IAAI;AAAA,UACrD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,MAAM;AAAA,EACP;AAAA,EACA,6BAA6B;AAAA,IAC5B,SAAS,SAAS;AACjB,UAAI,QAAQ,aAAa,EAAE,WAAW,EAAG;AACzC,YAAM,SAAS,KAAK,OAAO,QAAQ,aAAa,CAAC;AACjD,UAAI,CAAC,UAAU,OAAO,MAAM,CAAC,MAAM,WAAY;AAC/C,aAAO,YAAY,6BAA6B;AAAA,IACjD;AAAA,IACA,WAAW;AAAA,MACV,QAAQ,SAAS;AAChB,cAAM,QAAQ,QAAQ,MAAM,WAAW,IAAI,CAAC,YAAY,QAAQ,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU;AACvF,gBAAQ,QAAQ,KAAK;AACrB,aAAK,IAAI,UAAU,SAAS,cAAc,MAAM,KAAK,GAAG,CAAC;AAAA,MAC1D;AAAA,MACA,SAAS,SAAS;AACjB,YAAI,QAAQ,aAAa,EAAE,WAAW,EAAG,SAAQ,eAAe,6BAA6B;AAAA,aACxF;AACJ,gBAAM,SAAS,KAAK,OAAO,QAAQ,aAAa,CAAC;AACjD,cAAI,CAAC,OAAO,WAAW,6BAA6B,EAAG,SAAQ,eAAe,6BAA6B;AAAA,QAC5G;AAAA,MACD;AAAA,MACA,MAAM,SAAS;AACd,cAAM,QAAQ,QAAQ,YAAY;AAClC,gBAAQ,IAAI,KAAK;AACjB,gBAAQ,QAAQ,KAAK;AACrB,aAAK,IAAI,UAAU,SAAS,cAAc,MAAM,KAAK,GAAG,CAAC;AAAA,MAC1D;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,IACR,eAAe,SAAS;AACvB,UAAI,CAAC,QAAQ,aAAc;AAC3B,YAAM,WAAW,QAAQ;AACzB,YAAM,YAAY,QAAQ,MAAM,QAAQ,SAAS,EAAE;AACnD,UAAI,cAAc,GAAI;AACtB,cAAQ,IAAI,QAAQ,UAAU,SAAS,CAAC;AACxC,cAAQ,UAAU,SAAS,EAAE,MAAM;AAAA,IACpC;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,kBAAkB;AAAA,IACjB,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,KAAK,SAAS,UAAU;AAC3B,aAAK,KAAK,OAAO,YAAY,CAAC;AAAA,MAC/B;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,oBAAoB;AAAA,IACpB,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,YAAM,YAAY,KAAK,IAAI,cAAc,WAAW;AACpD,WAAK,QAAQ,QAAQ,WAAW,MAAM;AAAA,IACvC;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,8BAA8B;AAAA,IAC9B,qBAAqB,UAAU,SAAS,QAAQ,MAAM;AACrD,UAAI,KAAK,SAAS,UAAU,KAAK,SAAS,YAAY;AACrD,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,aAAa;AAAA,IACZ,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,WAAW,SAAS;AACnB,UAAI,QAAQ,WAAW,MAAO,MAAK,MAAM,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC;AAAA,IAC5D;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACd,QAAQ,QAAQ;AACf,WAAK,QAAQ,QAAQ,kBAAkB,MAAM;AAAA,IAC9C;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,MAAM;AAAA,IACN,WAAW;AAAA,IACX,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,CAAC,QAAQ,CAAC,OAAQ;AACtB,UAAI,WAAW,UAAU,KAAK,aAAa,UAAU;AACpD,YAAI,OAAO,QAAQ,OAAO,UAAU,KAAK,KAAK,KAAK,OAAO,QAAS;AACnE,cAAM,WAAW,OAAO,SAAS,MAAM;AACvC,YAAI,CAAC,SAAU;AACf,YAAI,CAAC,OAAO,QAAQ,QAAQ,GAAG;AAC9B,iBAAO,OAAO,SAAS;AACvB;AAAA,QACD;AACA,aAAK,IAAI,SAAS,QAAQ,UAAU,iCAAiC,MAAM;AAAA,MAC5E;AAAA,IACD;AAAA,IACA,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,OAAO,mBAAmB,EAAG;AACjC,UAAI,OAAO,aAAa,EAAG,QAAO;AAClC,YAAM,OAAO,OAAO,QAAQ;AAC5B,UAAI,CAAC,KAAK,YAAY,YAAY,MAAM,OAAO,WAAW,QAAQ,QAAQ,MAAM,IAAI,EAAG,QAAO;AAC9F,UAAI,KAAK,MAAM,CAAC,KAAK,WAAW;AAC/B,aAAK,OAAO,OAAO,YAAY,GAAG,QAAQ,MAAM;AAChD,eAAO,YAAY,OAAO;AAC1B,YAAI,KAAK,SACP;AACD,cAAI,KAAK,YAAY,OAAO,MAAM,MAAM,QAAQ,MAAM,IAAI,GAAG;AAC5D,iBAAK,SAAS,WAAW,QAAQ,MAAM,MAAM,IAAI;AACjD,gBAAI,KAAK,OAAO,aAAc,QAAO,YAAY;AAAA,UAClD;AACA,cAAI,KAAK,MAAO,QAAO,WAAW;AAAA,QACnC,WAAW,KAAK,OAAO,cAAc;AACpC,gBAAM,aAAa,CAAC,WAAW,SAAS,UAAU,WAAW,WAAW,WAAW;AACnF,qBAAW,kBAAkB,YAAY;AACxC,gBAAI,OAAO,UAAU,cAAc,GAAG;AACrC,yBAAW,mBAAmB,YAAY;AACzC,uBAAO,eAAe,eAAe;AACrC,oBAAI,mBAAmB,aAAa,oBAAoB,WAAW;AAClE,uBAAK,IAAI,QAAQ,QAAQ,iBAAiB,0BAA0B;AAAA,gBACrE;AAAA,cACD;AACA;AAAA,YACD;AAAA,UACD;AAAA,QACD,WAAW,KAAK,OAAO,aAAa;AACnC,cAAI,WAAW;AACf,gBAAM,SAA4B,CAAC;AACnC,cAAI;AACJ,eAAK,aAAa,OAAO,QAAQ;AAChC,gBAAI,OAAO,OAAO,SAAS,IAAI,GAAG;AACjC,yBAAW;AACX,qBAAO,SAAS,IAAI;AAAA,YACrB;AAAA,UACD;AACA,cAAI,UAAU;AACb,mBAAO,SAAS,MAAM;AACtB,iBAAK,IAAI,uBAAuB,QAAQ,UAAU;AAAA,UACnD;AAAA,QACD,OAAO;AACN,cAAI,KAAK,OAAO,QAAQ;AACvB,mBAAO,aAAa,KAAK,MAAM,QAAQ,MAAM;AAAA,UAC9C,WAAW,KAAK,OAAO,gBAAgB;AACtC,mBAAO,YAAY,KAAK,MAAM,gBAAgB,MAAM;AAAA,UACrD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAO;AAAA,IACN,YAAY,SAAS;AACpB,cAAQ,KAAK,iBAAiB,OAAO;AAAA,IACtC;AAAA,IACA,WAAW;AAAA;AAAA,MAEV,YAAY,MAAM;AACjB,aAAK,IAAI,cAAc,MAAM,SAAS,UAAU;AAAA,MACjD;AAAA,MACA,WAAW,SAAS;AACnB,aAAK,KAAK,QAAQ,QAAQ,CAAC;AAC3B,YAAI,QAAQ,OAAQ,SAAQ,WAAW;AACvC,gBAAQ,KAAK,oBAAoB,OAAO;AACxC,aAAK,IAAI,YAAY,QAAQ,MAAM,eAAe,UAAU;AAAA,MAC7D;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACV,aAAa,MAAM,SAAS;AAC3B,UAAI,KAAK,aAAa,YAAY,KAAK,WAAW,UAAU;AAC3D,aAAK,SAAS;AAAA,UACb,KAAK;AAAA,QACN;AAAA,MACD;AAAA,IACD;AAAA,IACA,YAAY,SAAS,QAAQ,MAAM;AAClC,UAAI,KAAK,aAAa,UAAU;AAC/B,YAAI,QAAQ,aAAa,EAAE,WAAW,EAAG;AACzC,cAAM,SAAS,KAAK,OAAO,QAAQ,aAAa,CAAC;AACjD,aAAK,MAAM,EAAE,KAAK,GAAG,GAAG,QAAQ,SAAS,MAAM,IAAI;AAAA,MACpD;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO,CAAC;AAAA,IACR,QAAQ,SAAS;AAChB,cAAQ,YAAY,UAAU;AAAA,IAC/B;AAAA,IACA,WAAW;AAAA,MACV,QAAQ,SAAS;AAChB,aAAK,YAAY,WAAW;AAC5B,aAAK,YAAY,iBAAiB;AAAA,MACnC;AAAA,MACA,mBAAmB;AAAA,MACnB,UAAU,SAAS,QAAQ,MAAM;AAChC,YAAI,CAAC,QAAQ,QAAQ,UAAU,GAAG;AACjC,kBAAQ,eAAe,UAAU;AACjC;AAAA,QACD;AACA,YAAI,KAAK,UAAW;AACpB,YAAI,KAAK,YAAY,aAAa,KAAK,MAAM,QAAQ,oBAAoB;AACxE,eAAK,YAAY;AAAA,QAClB,WAAW,QAAQ,UAAU,aAAa,GAAG;AAC5C,cAAI,KAAK,YAAY,aAAa,KAAK,IAAI;AAC1C,iBAAK,YAAY,iBAAiB;AAAA,UACnC,OAAO;AACN,iBAAK,YAAY;AAAA,UAClB;AAAA,QACD,OAAO;AACN,eAAK,YAAY,iBAAiB;AAAA,QACnC;AACA,aAAK,YAAY,WAAW,KAAK;AAAA,MAClC;AAAA,MACA,eAAe,QAAQ,QAAQ,QAAQ,MAAM;AAC5C,cAAM,SAAS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAClD,cAAM,iBAAiB,KAAK,YAAY,iBAAiB,IAAI,IAAI,KAAK,YAAY;AAClF,aAAK,MAAM,4BAA4B,OAAO,cAAc,CAAC,OAAO;AACpE,eAAO,KAAK,YAAY,CAAC,OAAO,cAAc,GAAG,IAAI,CAAC;AAAA,MACvD;AAAA,IACD;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX,2BAA2B;AAAA,IAC3B,kBAAkB,KAAK,UAAU,UAAU,MAAM;AAChD,UAAI,KAAK,SAAS,UAAU,KAAK,SAAS,SAAS;AAClD,aAAK,MAAM,oBAAoB;AAC/B,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,2BAA2B;AAAA,IAC3B,kBAAkB,KAAK,UAAU,UAAU,MAAM;AAChD,UAAI,KAAK,SAAS,UAAU,KAAK,SAAS,SAAS;AAClD,aAAK,MAAM,oBAAoB;AAC/B,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,OAAO,EAAE,WAAW,EAAE;AAAA,IACtB,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,YAAY,WAAW,SAAS,QAAQ,MAAM;AAC7C,iBAAW,QAAQ,QAAQ,KAAK;AAC/B,YAAI,SAAS,WAAW,KAAK,IAAI,MAAM,SAAS,KAAK,IAAI;AACxD,uBAAa;AACf;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACV,SAAS,QAAQ,QAAQ,MAAM;AAC9B,UAAI,WAAW,UAAU,KAAK,SAAS,QAAQ;AAC9C,YAAI,CAAC,KAAK,KAAK,OAAO,YAAY,CAAC,GAAG;AACrC,eAAK,IAAI,WAAW,QAAQ,2BAA2B;AAAA,QACxD;AACA,eAAO;AAAA,MACR;AAAA,IACD;AAAA,IACA,OAAO,EAAE,WAAW,EAAE;AAAA,IACtB,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,CAAC,QAAQ,CAAC,OAAQ;AACtB,YAAM,aAAa,OAAO,MAAM,CAAC;AACjC,UAAI,sBAAsB;AAC1B,UAAI,OAAO,MAAM,CAAC,EAAG,uBAAsB,OAAO,MAAM,CAAC;AACzD,UAAI,WAAW,UAAU,KAAK,aAAa,YAC1C,CAAC,OAAO,QAAQ,UAAU,KAAK,eAAe,SAC9C,EAAE,OAAO,UAAU,UAAU,KAAK,CAAC,OAAO,KAAK,oBAAoB,eAAe,IAAI;AACtF,eAAO,QAAQ,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC;AAChC,YAAI,OAAO,QAAQ,UAAU,GAAG;AAC/B,iBAAO,QAAQ,OAAO,SAAS,IAAI,EAAE,IAAI,UAAQ,SAAS,aAAa,QAAQ,IAAI,CAAC;AACpF,eAAK,IAAI,UAAU,QAAQ,cAAc,OAAO,MAAM,KAAK,GAAG,CAAC;AAC/D,eAAK,IAAI,UAAU,QAAQ,WAAW,YAAY,0BAA0B;AAC5E,iBAAO,YAAY,UAAU;AAAA,QAC9B,OAAO;AACN,eAAK,MAAM,6BAA6B;AACxC,cAAI,wBAAwB,MAAO,QAAO,QAAQ,CAAC,OAAO,MAAM,CAAC,GAAG,mBAAmB,CAAC;AAAA,QACzF;AAAA,MACD;AAAA,IACD;AAAA,IACA,WAAW,CAAC;AAAA,IACZ,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO,CAAC;AAAA,IACR,QAAQ,SAAS;AAChB,UAAI,YAAY;AAChB,iBAAW,UAAU,QAAQ,aAAa,GAAG;AAC5C,YAAI,CAAC,WAAW;AACf,eAAK,IAAI,YAAY,SAAS,iBAAiB,OAAO;AACtD,sBAAY;AAAA,QACb;AACA,YAAI,OAAO,UAAU,YAAY,GAAG;AACnC,eAAK,IAAI,WAAW,MAAM;AAAA,QAC3B,OAAO;AACN,eAAK,MAAM,EAAE,KAAK,GAAG,GAAG,QAAQ,SAAS,MAAM,IAAI;AAAA,QACpD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,YAAY;AAAA,IACX,YAAY,WAAW,SAAS,QAAQ,MAAM;AAC7C,UAAI,CAAC,QAAQ,QAAQ,KAAK,IAAI,EAAG,QAAO,KAAK,YAAY,IAAI;AAAA,IAC9D;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,aAAa,SAAS;AACrB,UAAI,QAAQ,aAAa,EAAE,WAAW,EAAG;AACzC,YAAM,SAAS,KAAK,OAAO,QAAQ,aAAa,CAAC;AACjD,YAAM,eAAe,KAAK,MAAM,SAAS,MAAM;AAC/C,UAAI,CAAC,aAAc;AACnB,YAAM,gBAAgB,KAAK,MAAM,SAAS,OAAO;AACjD,UAAI,CAAC,cAAe;AACpB,YAAM,aAAa,KAAK,IAAI,cAAc,aAAa,KAAK,EAAE;AAC9D,YAAM,cAAc,KAAK,IAAI,cAAc,cAAc,KAAK,EAAE;AAChE,UAAI,CAAC,QAAQ,UAAU,YAAY,KAAK,WAAW,SAAS,YAAY,MAAM;AAC7E,cAAM,aAAa,KAAK,IAAI,cAAc,YAAY;AACtD,aAAK,QAAQ,QAAQ,YAAY,OAAO;AAAA,MACzC;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,aAAa;AAAA,IACZ,iBAAiB,UAAU,SAAS,QAAQ,MAAM;AACjD,YAAM,2BAA2B,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,QAAQ;AAChF,WAAK,MAAM,eAAe,wBAAwB,EAAE;AACpD,UAAI,4BAA4B,IAAI;AACnC,aAAK,MAAM,mBAAmB;AAC9B,eAAO,WAAW;AAAA,MACnB;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,aAAa;AAAA,IACZ,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,KAAK,aAAa,YAAY,KAAK,SAAS,gBAAgB,CAAC,KAAK,cAAc;AACnF,eAAO,YAAY,aAAa;AAAA,MACjC;AAAA,IACD;AAAA,IACA,WAAW;AAAA,MACV,UAAU;AAAA,MACV,YAAY,WAAW,UAAU,UAAU,MAAM;AAChD,eAAO,KAAK,YAAY,CAAC;AAAA,MAC1B;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,WAAW,SAAS;AACnB,WAAK,YAAY,eAAe;AAAA,IACjC;AAAA,IACA,yBAAyB;AAAA,IACzB,gBAAgB,QAAQ,QAAQ,MAAM;AACrC,YAAM,eAAe,KAAK,YAAY;AACtC,UAAI,CAAC,QAAQ,KAAK,SAAS,gBAAgB,KAAK,OAAO,KAAK,SAAS,KAAK,iBAAiB,eAAgB;AAC3G,WAAK,QAAQ,QAAQ,KAAK,IAAI,YAAY;AAC1C,aAAO;AAAA,IACR;AAAA,IACA,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,WAAW,SAAS;AACnB,UAAI,QAAQ,aAAa,EAAE,WAAW,EAAG;AACzC,YAAM,SAAS,KAAK,OAAO,QAAQ,aAAa,CAAC;AACjD,UAAI,OAAO,UAAU,YAAY,EAAG,MAAK,OAAO,OAAO,YAAY,GAAG,QAAQ,OAAO;AAAA,IACtF;AAAA,IACA,oBAAoB;AAAA,IACpB,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,UAAI,KAAK,sBAAsB,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK,aAAa,GAAG,GAAI,GAAG;AACzF,eAAO,YAAY,SAAS;AAAA,MAC7B;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACd,qBAAqB;AAAA,IACrB,YAAY,WAAW,SAAS;AAC/B,iBAAW,UAAU,KAAK,aAAa,GAAG;AACzC,YAAI,WAAW,QAAS;AACxB,YAAI,OAAO,iBAAiB,KAAK,MAAM,SAAS,MAAM,GAAG;AACxD,iBAAO,KAAK,YAAY,GAAG;AAAA,QAC5B;AAAA,MACD;AAAA,IACD;AAAA,IACA,qBAAqB,QAAQ,QAAQ,QAAQ,MAAM;AAClD,UAAI,KAAK,MAAM,SAAS,MAAM,GAAG;AAChC,aAAK,MAAM,4BAA4B;AACvC,eAAO,KAAK,YAAY,GAAG;AAAA,MAC5B;AAAA,IACD;AAAA,IACA,OAAO,EAAE,WAAW,EAAE;AAAA,IACtB,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,QAAQ,SAAS;AAChB,WAAK,IAAI,aAAa,SAAS,qBAAqB;AACpD,cAAQ,KAAK,iBAAiB,aAAa;AAAA,IAC5C;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,QAAQ,SAAS;AAChB,UAAI,KAAK,YAAY,WAAY;AACjC,WAAK,YAAY,aAAa;AAC9B,WAAK,QAAQ,QAAQ,cAAc,OAAO;AAAA,IAC3C;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,WAAW;AAAA,IACV,QAAQ,SAAS;AAChB,WAAK,IAAI,aAAa,SAAS,qBAAqB;AACpD,WAAK,QAAQ,QAAQ,YAAY,OAAO;AAAA,IACzC;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACd,oBAAoB,QAAQ,QAAQ,QAAQ,MAAM;AACjD,UAAI,KAAK,MAAM,OAAO,KAAK,KAAK,aAAa,GAAG,EAAE,GAAG;AACpD,YAAI,CAAC,OAAO,WAAW,YAAY,KAAK,CAAC,OAAO,QAAQ,aAAa,EAAG,QAAO,aAAa,OAAO,MAAM;AAAA,MAC1G;AAAA,IACD;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,KAAK,aAAa,UAAU;AAC/B,aAAK,KAAK,OAAO,YAAY,CAAC;AAAA,MAC/B;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACX,cAAc,QAAQ,QAAQ,QAAQ,MAAM;AAC3C,WAAK,MAAM,WAAW,WAAW;AAAA,IAClC;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,WAAW,SAAS;AACnB,YAAM,YAAY,KAAK,IAAI,cAAc,WAAW;AACpD,WAAK,QAAQ,QAAQ,WAAW,OAAO;AAAA,IACxC;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,gBAAgB,OAAO,QAAQ,QAAQ,QAAQ;AAC9C,UAAI,QAAQ,SAAS,iBAAiB,QAAQ,SAAS,mBAAmB,QAAQ,SAAS,cAAe;AAC1G,YAAM,UAAU,KAAK,YAAY;AACjC,YAAM,SAA+B,CAAC;AACtC,UAAI;AACJ,WAAK,KAAK,OAAO;AAChB,cAAM,CAAC,KAAM;AACb,eAAO,CAAC,IAAI,MAAM,CAAC;AAAA,MACpB;AACA,UAAI,OAAO,KAAK,MAAM,EAAE,SAAS,EAAG;AACpC,WAAK,MAAM,QAAQ,OAAO;AAAA,IAC3B;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,cAAc;AAAA,IACb,QAAQ,SAAS;AAChB,UAAI,KAAK,YAAY,aAAc;AACnC,WAAK,YAAY,eAAe;AAChC,WAAK,IAAI,aAAa,SAAS,wBAAwB;AACvD,cAAQ,KAAK,iBAAiB,UAAU;AAAA,IACzC;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,YAAY,QAAQ,QAAQ,MAAM;AACjC,UAAI,CAAC,OAAO,KAAK,eAAe,eAAe,EAAG;AAClD,UAAI,KAAK,SAAS,SAAS;AAC1B,aAAK,KAAK,OAAO,YAAY,KAAK,OAAO,KAAK,eAAe,eAAe,EAAE,MAAM;AAAA,MACrF;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACd,eAAe,MAAM,SAAS;AAC7B,UAAI,YAAY,KAAK,YAAY,OAAQ;AACzC,WAAK,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,SAAS,MAAM,OAAO,IAAI;AAAA,IAC3D;AAAA,IACA,WAAW,MAAM,SAAS;AACzB,WAAK,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,SAAS,MAAM,OAAO,IAAI;AAAA,IAC3D;AAAA,IACA,OAAO,CAAC;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACT,QAAQ,QAAQ;AACf,aAAO,YAAY,UAAU;AAAA,IAC9B;AAAA,IACA,WAAW;AAAA,MACV,QAAQ;AAAA,MACR,cAAc,SAAS;AACtB,YAAI,QAAQ,YAAY,QAAQ,SAAS,OAAO,WAAY,SAAQ,YAAY,QAAQ,SAAS,EAAE;AAAA,MACpG;AAAA,IACD;AAAA,IACA,MAAM;AAAA,IACN,WAAW;AAAA,EACZ;AACD;",
  "names": []
}
