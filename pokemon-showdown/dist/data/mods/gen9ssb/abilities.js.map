{
  "version": 3,
  "sources": ["../../../../data/mods/gen9ssb/abilities.ts"],
  "sourcesContent": ["import { ssbSets } from \"./random-teams\";\r\nimport { changeSet, getName, PSEUDO_WEATHERS } from \"./scripts\";\r\n\r\nconst STRONG_WEATHERS = ['desolateland', 'primordialsea', 'deltastream', 'deserteddunes', 'millenniumcastle'];\r\n\r\nexport const Abilities: import('../../../sim/dex-abilities').ModdedAbilityDataTable = {\r\n\t/*\r\n\t// Example\r\n\tabilityid: {\r\n\t\tshortDesc: \"\", // short description, shows up in /dt\r\n\t\tdesc: \"\", // long description\r\n\t\tname: \"Ability Name\",\r\n\t\t// The bulk of an ability is not easily shown in an example since it varies\r\n\t\t// For more examples, see https://github.com/smogon/pokemon-showdown/blob/master/data/abilities.ts\r\n\t},\r\n\t*/\r\n\t// Please keep abilities organized alphabetically based on staff member name!\r\n\t// Aelita\r\n\tfortifiedmetal: {\r\n\t\tshortDesc: \"This Pokemon's weight is doubled and Attack is 1.5x when statused.\",\r\n\t\tname: \"Fortified Metal\",\r\n\t\tonModifyWeightPriority: 1,\r\n\t\tonModifyWeight(weighthg) {\r\n\t\t\treturn weighthg * 2;\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (pokemon.status) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Aethernum\r\n\ttheeminenceintheshadow: {\r\n\t\tshortDesc: \"Unaware + Supreme Overlord with half the boost.\",\r\n\t\tname: \"The Eminence in the Shadow\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.totalFainted) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: The Eminence in the Shadow');\r\n\t\t\t\tconst fallen = Math.min(pokemon.side.totalFainted, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\tconst powMod = [20, 21, 22, 23, 24, 25];\r\n\t\t\t\tthis.debug(`Supreme Overlord boost: ${powMod[this.effectState.fallen]}/25`);\r\n\t\t\t\treturn this.chainModify([powMod[this.effectState.fallen], 20]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Akir\r\n\ttakeitslow: {\r\n\t\tshortDesc: \"Regenerator + Psychic Surge.\",\r\n\t\tname: \"Take it Slow\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('psychicterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Alex\r\n\tpawprints: {\r\n\t\tshortDesc: \"Oblivious + status moves ignore abilities.\",\r\n\t\tname: \"Pawprints\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.volatiles['attract']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Paw Prints');\r\n\t\t\t\tpokemon.removeVolatile('attract');\r\n\t\t\t\tthis.add('-end', pokemon, 'move: Attract', '[from] ability: Paw Prints');\r\n\t\t\t}\r\n\t\t\tif (pokemon.volatiles['taunt']) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Paw Prints');\r\n\t\t\t\tpokemon.removeVolatile('taunt');\r\n\t\t\t\t// Taunt's volatile already sends the -end message when removed\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'attract') return false;\r\n\t\t},\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.id === 'attract' || move.id === 'captivate' || move.id === 'taunt') {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Paw Prints');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (effect.name === 'Intimidate' && boost.atk) {\r\n\t\t\t\tdelete boost.atk;\r\n\t\t\t\tthis.add('-fail', target, 'unboost', 'Attack', '[from] ability: Paw Prints', `[of] ${target}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Alexander489\r\n\tconfirmedtown: {\r\n\t\tshortDesc: \"Technician + Protean.\",\r\n\t\tname: \"Confirmed Town\",\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst basePowerAfterMultiplier = this.modify(basePower, this.event.modifier);\r\n\t\t\tthis.debug(`Base Power: ${basePowerAfterMultiplier}`);\r\n\t\t\tif (basePowerAfterMultiplier <= 60) {\r\n\t\t\t\tthis.debug('Confirmed Town boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.hasBounced || move.flags['futuremove'] || move.sourceEffect === 'snatch') return;\r\n\t\t\tconst type = move.type;\r\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\r\n\t\t\t\tif (!source.setType(type)) return;\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: Confirmed Town');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Apple\r\n\torchardsgift: {\r\n\t\tshortDesc: \"Summons Grassy Terrain. 1.5x Sp. Atk and Sp. Def during Grassy Terrain.\",\r\n\t\tname: \"Orchard's Gift\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.setTerrain('grassyterrain')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'Orchard\\'s Gift', '[source]');\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Orchard\\'s Gift');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.debug('Orchard\\'s Gift boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.debug('Orchard\\'s Gift boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Appletun a la Mode\r\n\tservedcold: {\r\n\t\tshortDesc: \"This Pokemon's Defense is raised 2 stages if hit by an Ice move; Ice immunity.\",\r\n\t\tname: \"Served Cold\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ice') {\r\n\t\t\t\tif (!this.boost({ def: 2 })) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Served Cold');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// April\r\n\ttwinfantasy: {\r\n\t\tshortDesc: \"Slicing moves hit 2 times at 65% power.\",\r\n\t\tname: \"Twin Fantasy\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (move.flags['slicing'] && !move.multihit) {\r\n\t\t\t\tmove.multihit = 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePower(relayVar, source, target, move) {\r\n\t\t\tif (move.flags['slicing'] && move.multihit === 2) {\r\n\t\t\t\treturn this.chainModify(0.65);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// aQrator\r\n\tneverendingfhunt: {\r\n\t\tdesc: \"This Pokemon's non-damaging moves have their priority increased by 1. Opposing Dark-type Pokemon are immune to these moves, and any move called by these moves, if the resulting user of the move has this Ability.\",\r\n\t\tshortDesc: \"This Pokemon's Status moves have priority raised by 1, but Dark types are immune.\",\r\n\t\tname: \"Neverending fHunt\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// A Quag To The Past\r\n\tquagofruin: {\r\n\t\tshortDesc: \"Active Pokemon without this Ability have 0.85x Defense. Ignores abilities.\",\r\n\t\tdesc: \"Active Pokemon without this Ability have their Defense multiplied by 0.85x. This Pokemon's moves and their effects ignore certain Abilities of other Pokemon.\",\r\n\t\tname: \"Quag of Ruin\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'Quag of Ruin');\r\n\t\t},\r\n\t\tonAnyModifyDef(def, target, source, move) {\r\n\t\t\tif (!move) return;\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (target.hasAbility('Quag of Ruin')) return;\r\n\t\t\tif (!move.ruinedDef?.hasAbility('Quag of Ruin')) move.ruinedDef = abilityHolder;\r\n\t\t\tif (move.ruinedDef !== abilityHolder) return;\r\n\t\t\tthis.debug('Quag of Ruin Def drop');\r\n\t\t\treturn this.chainModify(0.85);\r\n\t\t},\r\n\t\tonModifyMove(move) {\r\n\t\t\tmove.ignoreAbility = true;\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tgen: 9,\r\n\t},\r\n\tclodofruin: {\r\n\t\tshortDesc: \"Active Pokemon without this Ability have 0.85x Attack. Ignores stat changes.\",\r\n\t\tdesc: \"Active Pokemon without this Ability have their Attack multiplied by 0.85x. This Pokemon ignores other Pokemon's stat stages when taking or doing damage.\",\r\n\t\tname: \"Clod of Ruin\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Clod of Ruin');\r\n\t\t},\r\n\t\tonAnyModifyAtk(atk, target, source, move) {\r\n\t\t\tif (!move) return;\r\n\t\t\tconst abilityHolder = this.effectState.target;\r\n\t\t\tif (target.hasAbility('Clod of Ruin')) return;\r\n\t\t\tif (!move.ruinedAtk?.hasAbility('Clod of Ruin')) move.ruinedAtk = abilityHolder;\r\n\t\t\tif (move.ruinedAtk !== abilityHolder) return;\r\n\t\t\tthis.debug('Clod of Ruin Atk drop');\r\n\t\t\treturn this.chainModify(0.85);\r\n\t\t},\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Archas\r\n\tsaintlybullet: {\r\n\t\tshortDesc: \"Snipe Shot always has STAB and heals the user by 1/5 (or 1/4 on a crit) of its max HP.\",\r\n\t\tname: \"Saintly Bullet\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.id === 'snipeshot') {\r\n\t\t\t\tmove.forceSTAB = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\tif (move.id === 'snipeshot') {\r\n\t\t\t\tconst ratio = target.getMoveHitData(move).crit ? 4 : 5;\r\n\t\t\t\tthis.heal(source.maxhp / ratio, source, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Arcueid\r\n\tmarblephantasm: {\r\n\t\tshortDesc: \"Deoxys-Defense is immune to status moves/effects. Deoxys-Attack gains Fairy type.\",\r\n\t\tdesc: \"If this Pokemon is a Deoxys-Defense, it is immune to status moves and cannot be afflicted with any non-volatile status condition. If this Pokemon is a Deoxys-Attack, it gains an additional Fairy typing for as long as this Ability remains active.\",\r\n\t\tname: \"Marble Phantasm\",\r\n\t\tonStart(source) {\r\n\t\t\tif (source.species.name === \"Deoxys-Attack\" && source.setType(['Psychic', 'Fairy'])) {\r\n\t\t\t\tthis.add('-start', source, 'typechange', source.getTypes(true).join('/'), '[from] ability: Marble Phantasm');\r\n\t\t\t} else if (source.species.name === \"Deoxys-Defense\" && source.setType('Psychic')) {\r\n\t\t\t\tthis.add('-start', source, 'typechange', 'Psychic', '[from] ability: Marble Phantasm');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category === 'Status' && target !== source && target.species.name === \"Deoxys-Defense\") {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Marble Phantasm');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif (target.species.name === \"Deoxys-Defense\") {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Marble Phantasm');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Arsenal\r\n\tabsorbphys: {\r\n\t\tshortDesc: \"This Pokemon heals 1/4 of its max HP when hit by Normal moves; Normal immunity.\",\r\n\t\tname: \"Absorb Phys\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Normal') {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Absorb Phys');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Artemis\r\n\tsupervisedlearning: {\r\n\t\tshortDesc: \"Unaware + Clear Body.\",\r\n\t\tname: \"Supervised Learning\",\r\n\t\tonAnyModifyBoost(boosts, pokemon) {\r\n\t\t\tconst unawareUser = this.effectState.target;\r\n\t\t\tif (unawareUser === pokemon) return;\r\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spd'] = 0;\r\n\t\t\t\tboosts['evasion'] = 0;\r\n\t\t\t}\r\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\r\n\t\t\t\tboosts['atk'] = 0;\r\n\t\t\t\tboosts['def'] = 0;\r\n\t\t\t\tboosts['spa'] = 0;\r\n\t\t\t\tboosts['accuracy'] = 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryBoost(boost, target, source, effect) {\r\n\t\t\tif (source && target === source) return;\r\n\t\t\tlet showMsg = false;\r\n\t\t\tlet i: BoostID;\r\n\t\t\tfor (i in boost) {\r\n\t\t\t\tif (boost[i]! < 0) {\r\n\t\t\t\t\tdelete boost[i];\r\n\t\t\t\t\tshowMsg = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\r\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Supervised Learning\", `[of] ${target}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Audiino\r\n\tmitosis: {\r\n\t\tshortDesc: \"Regenerator + Multiscale.\",\r\n\t\tname: \"Mitosis\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.hp >= target.maxhp) {\r\n\t\t\t\tthis.debug('Multiscale weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// ausma\r\n\tcascade: {\r\n\t\tshortDesc: \"At 25% HP, transforms into a Mismagius. Sigil's Storm becomes Ghost type and doesn't charge.\",\r\n\t\tname: \"Cascade\",\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Hatterene' || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tif (pokemon.species.id === 'mismagius' || pokemon.hp > pokemon.maxhp / 4) return;\r\n\t\t\tthis.add(`c:|${getName('ausma')}|that's it, yall mfs are about to face the wrath of Big Stall\u2122`);\r\n\t\t\tthis.add(`c:|${getName('ausma')}|or i guess moreso Big Pult. pick your poison`);\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Cascade');\r\n\t\t\tchangeSet(this, pokemon, ssbSets['ausma-Mismagius'], true);\r\n\t\t\tpokemon.cureStatus();\r\n\t\t\tthis.heal(pokemon.maxhp / 3);\r\n\t\t\tif (this.field.pseudoWeather['trickroom']) {\r\n\t\t\t\tthis.field.removePseudoWeather('trickroom');\r\n\t\t\t\tthis.boost({ spe: 2 }, pokemon, pokemon, this.effect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Bert122\r\n\tpesteringassault: {\r\n\t\tshortDesc: \"Uses Knock Off, Taunt, Torment, Soak, and Confuse Ray with 33% accuracy at turn end.\",\r\n\t\tname: \"Pestering Assault\",\r\n\t\tonResidual(pokemon, s, effect) {\r\n\t\t\tconst moves = ['knockoff', 'taunt', 'torment', 'soak', 'confuseray'];\r\n\t\t\tfor (const moveid of moves) {\r\n\t\t\t\tconst move = this.dex.getActiveMove(moveid);\r\n\t\t\t\tmove.accuracy = 33;\r\n\t\t\t\tconst target = pokemon.foes()[0];\r\n\t\t\t\tif (target && !target.fainted) {\r\n\t\t\t\t\tthis.actions.useMove(move, pokemon, { target, sourceEffect: effect });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// blazeofvictory\r\n\tprismaticlens: {\r\n\t\tshortDesc: \"Gen 6 Pixilate + 10% buffed Tinted Lens.\",\r\n\t\tname: \"Prismatic Lens\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([5325, 4096]);\r\n\t\t},\r\n\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\r\n\t\t\t\tthis.debug('Tinted Lens boost');\r\n\t\t\t\treturn this.chainModify(2.2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Blitz\r\n\tblitzofruin: {\r\n\t\tshortDesc: \"Active Pokemon without this Ability have 0.75x Speed.\",\r\n\t\tdesc: \"Active Pokemon without this Ability have their Speed multiplied by 0.75x.\",\r\n\t\tname: \"Blitz of Ruin\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Blitz of Ruin');\r\n\t\t\tthis.add('-message', `${pokemon.name}'s Blitz of Ruin lowered the Speed of all surrounding Pok\u00E9mon!`);\r\n\t\t},\r\n\t\tonAnyModifySpe(spe, pokemon) {\r\n\t\t\tif (!pokemon.hasAbility('Blitz of Ruin')) {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Breadey\r\n\tpainfulexit: {\r\n\t\tshortDesc: \"When this Pokemon switches out, foes lose 25% HP.\",\r\n\t\tname: \"Painful Exit\",\r\n\t\tonBeforeSwitchOutPriority: -1,\r\n\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\tthis.add(`c:|${getName('Breadey')}|Just kidding!! Take this KNUCKLE SANDWICH`);\r\n\t\t\tfor (const foe of pokemon.foes()) {\r\n\t\t\t\tif (!foe || foe.fainted || !foe.hp) continue;\r\n\t\t\t\tthis.add(`-anim`, pokemon, \"Tackle\", foe);\r\n\t\t\t\tthis.damage(foe.hp / 4, foe, pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Chloe\r\n\tacetosa: {\r\n\t\tshortDesc: \"This Pokemon's moves are changed to be Grass type and have 1.2x power.\",\r\n\t\tname: \"Acetosa\",\r\n\t\tonModifyTypePriority: 1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'hiddenpower', 'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (!(move.isZ && move.category !== 'Status') && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Grass';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Chris\r\n\tastrothunder: {\r\n\t\tshortDesc: \"Drizzle + Static.\",\r\n\t\tname: \"Astrothunder\",\r\n\t\tonStart(source) {\r\n\t\t\tif (source.species.id === 'kyogre' && source.item === 'blueorb') return;\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.trySetStatus('par', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Clefable\r\n\tthatshacked: {\r\n\t\tshortDesc: \"Tries to inflict the foe with Torment at the end of each turn.\",\r\n\t\tname: \"That's Hacked\",\r\n\t\tonResidual(target, source, effect) {\r\n\t\t\tif (!target.foes()?.length) return;\r\n\t\t\tconst abilMessages = [\r\n\t\t\t\t\"All hacks and hacking methods are banned!\",\r\n\t\t\t\t\"Can't be having that.\",\r\n\t\t\t\t\"Naaah, miss me with that shit.\",\r\n\t\t\t\t\"Bit bullshit that, mate.\",\r\n\t\t\t\t\"Wait, thats illegal!\",\r\n\t\t\t\t\"Nope.\",\r\n\t\t\t\t\"I can't believe you've done this.\",\r\n\t\t\t\t\"No thank you.\",\r\n\t\t\t\t\"Seems a bit suss.\",\r\n\t\t\t\t\"Thats probably hacked, shouldnt use it here.\",\r\n\t\t\t\t\"Hacks will get you banned.\",\r\n\t\t\t\t\"You silly sausage\",\r\n\t\t\t\t\"Can you not?\",\r\n\t\t\t\t\"Yeah, thats a no from me.\",\r\n\t\t\t\t\"Lets not\",\r\n\t\t\t\t\"No fun allowed\",\r\n\t\t\t];\r\n\t\t\tthis.add(`c:|${getName((target.illusion || target).name)}|${this.sample(abilMessages)}`);\r\n\t\t\tfor (const foe of target.foes()) {\r\n\t\t\t\tif (foe && !foe.fainted && !foe.volatiles['torment']) {\r\n\t\t\t\t\tfoe.addVolatile('torment');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Clem\r\n\tmeltingpoint: {\r\n\t\tshortDesc: \"+2 Speed. Fire moves change user to Water type. Fire immunity.\",\r\n\t\tname: \"Melting Point\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Fire') {\r\n\t\t\t\tthis.boost({ spe: 2 }, target, source, this.dex.abilities.get('meltingpoint'));\r\n\t\t\t\tif (target.setType('Water')) {\r\n\t\t\t\t\tthis.add('-start', target, 'typechange', 'Water', '[from] ability: Melting Point');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Melting Point');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// clerica\r\n\tmasquerade: {\r\n\t\tshortDesc: \"(Mimikyu only) The first hit is blocked: instead, takes 1/8 damage and gets +1 Atk/Spe.\",\r\n\t\tdesc: \"If this Pokemon is a Mimikyu, the first hit it takes in battle deals 0 neutral damage. Its disguise is then broken, it changes to Busted Form, its Attack and Speed are boosted by 1 stage, and it loses 1/8 of its max HP. Confusion damage also breaks the disguise.\",\r\n\t\tname: \"Masquerade\",\r\n\t\tonDamagePriority: 1,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (\r\n\t\t\t\teffect && effect.effectType === 'Move' &&\r\n\t\t\t\t['mimikyu', 'mimikyutotem'].includes(target.species.id) && !target.transformed\r\n\t\t\t) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Masquerade');\r\n\t\t\t\tthis.effectState.busted = true;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonCriticalHit(target, source, move) {\r\n\t\t\tif (!target) return;\r\n\t\t\tif (!['mimikyu', 'mimikyutotem'].includes(target.species.id) || target.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move)) return;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tonEffectiveness(typeMod, target, type, move) {\r\n\t\t\tif (!target || move.category === 'Status') return;\r\n\t\t\tif (!['mimikyu', 'mimikyutotem'].includes(target.species.id) || target.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\r\n\t\t\tif (hitSub) return;\r\n\r\n\t\t\tif (!target.runImmunity(move)) return;\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (['mimikyu', 'mimikyutotem'].includes(pokemon.species.id) && this.effectState.busted) {\r\n\t\t\t\tconst speciesid = pokemon.species.id === 'mimikyutotem' ? 'Mimikyu-Busted-Totem' : 'Mimikyu-Busted';\r\n\t\t\t\tpokemon.formeChange(speciesid, this.effect, true);\r\n\t\t\t\tthis.damage(pokemon.baseMaxhp / 8, pokemon, pokemon, this.dex.species.get(speciesid));\r\n\t\t\t\tthis.boost({ atk: 1, spe: 1 });\r\n\t\t\t\tthis.add(`c:|${getName('clerica')}|oop`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1, failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1 },\r\n\t},\r\n\r\n\t// Clouds\r\n\tjetstream: {\r\n\t\tshortDesc: \"Delta Stream + Stealth Rock immunity.\",\r\n\t\tname: \"Jet Stream\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('deltastream');\r\n\t\t\tthis.add('message',\t`Strong air currents keep Flying-types ahead of the chase!`);\r\n\t\t},\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (this.field.isWeather('deltastream') && !STRONG_WEATHERS.includes(weather.id)) return false;\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility(['deltastream', 'jetstream'])) {\r\n\t\t\t\t\tthis.field.weatherState.source = target;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearWeather();\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.name === 'Stealth Rock') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Coolcodename\r\n\tfirewall: {\r\n\t\tshortDesc: \"Burns foes that attempt to use status moves on this Pokemon; Status move immunity.\",\r\n\t\tname: \"Firewall\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.category === 'Status' && target !== source) {\r\n\t\t\t\tif (!source.trySetStatus('brn', target)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Firewall');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Corthius\r\n\tgrassyemperor: {\r\n\t\tshortDesc: \"On switch-in, summons Grassy Terrain. During Grassy Terrain, Attack is 1.33x.\",\r\n\t\tname: \"Grassy Emperor\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.setTerrain('grassyterrain')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'Grassy Emperor', '[source]');\r\n\t\t\t} else if (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Grassy Emperor');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\tif (this.field.isTerrain('grassyterrain')) {\r\n\t\t\t\tthis.debug('Grassy Emperor boost');\r\n\t\t\t\treturn this.chainModify([5461, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Dawn of Artemis\r\n\tformchange: {\r\n\t\tshortDesc: \">50% HP Necrozma, else Necrozma-Ultra. SpA boosts become Atk boosts and vice versa.\",\r\n\t\tdesc: \"If this Pokemon is a Necrozma, it changes to Necrozma-Ultra and switches its Attack and Special Attack stat stage changes if it has 1/2 or less of its maximum HP at the end of a turn. If Necrozma-Ultra's HP is above 1/2 of its maximum HP at the end of a turn, it changes back to Necrozma and switches its Attack and Special Attack stat stage changes.\",\r\n\t\tname: \"Form Change\",\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Necrozma' || pokemon.transformed || !pokemon.hp) return;\r\n\t\t\tlet newSet = 'Dawn of Artemis';\r\n\t\t\tif (pokemon.hp > pokemon.maxhp / 2) {\r\n\t\t\t\tif (pokemon.species.id === 'necrozma') return;\r\n\t\t\t\tthis.add(`c:|${getName('Dawn of Artemis')}|Good, I'm healthy again, time to swap back.`);\r\n\t\t\t} else {\r\n\t\t\t\tif (pokemon.species.id === 'necrozmaultra') return;\r\n\t\t\t\tthis.add(`c:|${getName('Dawn of Artemis')}|Time for me to transform and you to witness the power of Ares now!`);\r\n\t\t\t\tnewSet += '-Ultra';\r\n\t\t\t}\r\n\t\t\tthis.add('-activate', pokemon, 'ability: Form Change');\r\n\t\t\tchangeSet(this, pokemon, ssbSets[newSet]);\r\n\t\t\t[pokemon.boosts['atk'], pokemon.boosts['spa']] = [pokemon.boosts['spa'], pokemon.boosts['atk']];\r\n\t\t\tthis.add('-setboost', pokemon, 'spa', pokemon.boosts['spa'], '[silent]');\r\n\t\t\tthis.add('-setboost', pokemon, 'atk', pokemon.boosts['atk'], '[silent]');\r\n\t\t\tthis.add('-message', `${pokemon.name} swapped its Attack and Special Attack boosts!`);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// DaWoblefet\r\n\tshadowartifice: {\r\n\t\tshortDesc: \"Traps adjacent foes. If KOed with a move, that move's user loses an equal amount of HP.\",\r\n\t\tname: \"Shadow Artifice\",\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (!pokemon.hasAbility(['shadowtag', 'shadowartifice']) && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.hasAbility(['shadowtag', 'shadowartifice'])) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHitOrder: 1,\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (!target.hp) {\r\n\t\t\t\tthis.damage(target.getUndynamaxedHP(damage), source, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// dhelmise\r\n\tvirus: {\r\n\t\tshortDesc: \"Causes hacked enemies to catch a virus that deals 145 damage over 3 turns.\",\r\n\t\tname: \"Virus\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.id === 'emp') target?.addVolatile('virus');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 4,\r\n\t\t\tonStart(target, source, sourceEffect) {\r\n\t\t\t\tthis.add('-start', target, 'virus');\r\n\t\t\t},\r\n\t\t\tonEnd(target) {\r\n\t\t\t\tthis.add('-end', target, 'virus');\r\n\t\t\t},\r\n\t\t\tonResidual(target, source, effect) {\r\n\t\t\t\tlet damage: number;\r\n\t\t\t\tif (this.effectState.duration === 1) {\r\n\t\t\t\t\tdamage = 70;\r\n\t\t\t\t} else if (this.effectState.duration === 2) {\r\n\t\t\t\t\tdamage = 34;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdamage = 35;\r\n\t\t\t\t}\r\n\t\t\t\tthis.damage(damage, target);\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Elly\r\n\tstormsurge: {\r\n\t\tshortDesc: \"On switch-in, summons rain that causes wind moves to have perfect accuracy and 1.1x Base Power.\",\r\n\t\tdesc: \"Summons the Storm Surge weather on switch-in. While Storm Surge is active, wind moves used by any Pokemon are perfectly accurate and become 10% stronger. Water moves are 30% stronger, Fire moves are 30% weaker.\",\r\n\t\tname: \"Storm Surge\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('stormsurge');\r\n\t\t},\r\n\t},\r\n\r\n\t// Emboar02\r\n\thogwash: {\r\n\t\tshortDesc: \"Reckless; on STAB moves, also add Rock Head. On non-STAB moves, recoil is recovery.\",\r\n\t\tdesc: \"This Pokemon's attacks that would normally have recoil or crash damage have their power multiplied by 1.2. Does not affect Struggle. STAB recoil attacks used by this Pokemon do not deal recoil damage to the user. Non-STAB recoil attacks used by this Pokemon will heal the user instead of dealing recoil damage.\",\r\n\t\tname: \"Hogwash\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\t\tthis.debug('Hogwash boost');\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tlet trueSource = source;\r\n\t\t\t\t// For some reason, the source of the damage is the substitute user when\r\n\t\t\t\t// hitting a sub.\r\n\t\t\t\tif (source !== target) trueSource = target;\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') {\r\n\t\t\t\t\tif (!trueSource.hasType(this.activeMove.type)) this.heal(damage);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Frostyicelad\r\n\talmostfrosty: {\r\n\t\tshortDesc: \"This Pokemon's damaging moves hit twice. The second hit has its damage halved.\",\r\n\t\tname: \"Almost Frosty\",\r\n\t\tonPrepareHit(source, target, move) {\r\n\t\t\tif (move.category === 'Status' || move.multihit || move.flags['noparentalbond'] || move.flags['charge'] ||\r\n\t\t\t\tmove.flags['futuremove'] || move.spreadHit || move.isZ || move.isMax) return;\r\n\t\t\tmove.multihit = 2;\r\n\t\t\tmove.multihitType = 'parentalbond';\r\n\t\t},\r\n\t\t// Damage modifier implemented in BattleActions#modifyDamage()\r\n\t\tonSourceModifySecondaries(secondaries, target, source, move) {\r\n\t\t\tif (move.multihitType === 'parentalbond' && move.id === 'secretpower' && move.hit < 2) {\r\n\t\t\t\t// hack to prevent accidentally suppressing King's Rock/Razor Fang\r\n\t\t\t\treturn secondaries.filter(effect => effect.volatileStatus === 'flinch');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Frozoid\r\n\tsnowballer: {\r\n\t\tshortDesc: \"This Pokemon's Attack is raised 2 stages if hit by an Ice move; Ice immunity.\",\r\n\t\tname: \"Snowballer\",\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Ice') {\r\n\t\t\t\tif (!this.boost({ atk: 2 })) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Snowballer');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Fame\r\n\tsocialjumpluffwarrior: {\r\n\t\tshortDesc: \"Serene Grace + Mycelium Might.\",\r\n\t\tname: \"Social Jumpluff Warrior\",\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\treturn -0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category === 'Status') {\r\n\t\t\t\tmove.ignoreAbility = true;\r\n\t\t\t}\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Ganjafin\r\n\tgamblingaddiction: {\r\n\t\tshortDesc: \"When under 1/4 max HP: +1 Spe, heal to full HP, and all moves become Final Gambit.\",\r\n\t\tname: \"Gambling Addiction\",\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!this.effectState.gamblingAddiction && pokemon.hp && pokemon.hp < pokemon.maxhp / 4) {\r\n\t\t\t\tthis.boost({ spe: 1 });\r\n\t\t\t\tthis.heal(pokemon.maxhp);\r\n\t\t\t\tconst move = this.dex.moves.get('finalgambit');\r\n\t\t\t\tconst finalGambit = {\r\n\t\t\t\t\tmove: move.name,\r\n\t\t\t\t\tid: move.id,\r\n\t\t\t\t\tpp: move.noPPBoosts ? move.pp : move.pp * 8 / 5,\r\n\t\t\t\t\tmaxpp: move.noPPBoosts ? move.pp : move.pp * 8 / 5,\r\n\t\t\t\t\ttarget: move.target,\r\n\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\tused: false,\r\n\t\t\t\t};\r\n\t\t\t\tpokemon.moveSlots.fill(finalGambit);\r\n\t\t\t\tpokemon.baseMoveSlots.fill(finalGambit);\r\n\t\t\t\tthis.effectState.gamblingAddiction = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// havi\r\n\tmensiscage: {\r\n\t\tshortDesc: \"Immune to status and is considered to be asleep. 30% chance to Disable when hit.\",\r\n\t\tname: \"Mensis Cage\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.volatiles['disable']) return;\r\n\t\t\tif (!move.isMax && !move.flags['futuremove'] && move.id !== 'struggle') {\r\n\t\t\t\tif (this.randomChance(3, 10)) {\r\n\t\t\t\t\tsource.addVolatile('disable', this.effectState.target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Mensis Cage');\r\n\t\t},\r\n\t\tonSetStatus(status, target, source, effect) {\r\n\t\t\tif ((effect as Move)?.status) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Mensis Cage');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t// Permanent sleep \"status\" implemented in the relevant sleep-checking effects\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Hecate\r\n\thacking: {\r\n\t\tname: \"Hacking\",\r\n\t\tshortDesc: \"Hacks into PS and finds out if the enemy has any super effective moves.\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst name = (pokemon.illusion || pokemon).name;\r\n\t\t\tthis.add(`c:|${getName(name)}|One moment, please. One does not simply go into battle blind.`);\r\n\t\t\tconst side = pokemon.side.id === 'p1' ? 'p2' : 'p1';\r\n\t\t\tthis.add(\r\n\t\t\t\t`message`,\r\n\t\t\t\t(\r\n\t\t\t\t\t`ssh sim@pokemonshowdown.com && nc -U logs/repl/sim <<< ` +\r\n\t\t\t\t\t`\"Users.get('${this.toID(name)}').popup(battle.sides.get('${side}').pokemon.map(m => Teams.exportSet(m)))\"`\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tlet warnMoves: (Move | Pokemon)[][] = [];\r\n\t\t\tlet warnBp = 1;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tfor (const moveSlot of target.moveSlots) {\r\n\t\t\t\t\tconst move = this.dex.moves.get(moveSlot.move);\r\n\t\t\t\t\tlet bp = move.basePower;\r\n\t\t\t\t\tif (move.ohko) bp = 150;\r\n\t\t\t\t\tif (move.id === 'counter' || move.id === 'metalburst' || move.id === 'mirrorcoat') bp = 120;\r\n\t\t\t\t\tif (bp === 1) bp = 80;\r\n\t\t\t\t\tif (!bp && move.category !== 'Status') bp = 80;\r\n\t\t\t\t\tif (bp > warnBp) {\r\n\t\t\t\t\t\twarnMoves = [[move, target]];\r\n\t\t\t\t\t\twarnBp = bp;\r\n\t\t\t\t\t} else if (bp === warnBp) {\r\n\t\t\t\t\t\twarnMoves.push([move, target]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!warnMoves.length) {\r\n\t\t\t\tthis.add(`c:|${getName(name)}|Fascinating. None of your sets have any moves of interest.`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst [warnMoveName, warnTarget] = this.sample(warnMoves);\r\n\t\t\tthis.add(\r\n\t\t\t\t'message',\r\n\t\t\t\t`${name} hacked into PS and looked at ${name === 'Hecate' ? 'her' : 'their'} opponent's sets. ` +\r\n\t\t\t\t`${warnTarget.name}'s move ${warnMoveName} drew ${name === 'Hecate' ? 'her' : 'their'} eye.`\r\n\t\t\t);\r\n\t\t\tthis.add(`c:|${getName(name)}|Interesting. With that in mind, bring it!`);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// HoeenHero\r\n\tmisspelled: {\r\n\t\tshortDesc: \"Swift Swim + Special Attack 1.5x, Accuracy 0.8x. Never misses, only misspells.\",\r\n\t\tname: \"Misspelled\",\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa) {\r\n\t\t\treturn this.modify(spa, 1.5);\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: -1,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move.category === 'Special' && typeof accuracy === 'number') {\r\n\t\t\t\treturn this.chainModify([3277, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Misspelling implemented in scripts.ts#hitStepAccuracy\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Hydrostatics\r\n\thydrostaticpositivity: {\r\n\t\tshortDesc: \"Sturdy + Storm Drain + Motor Drive + 1.3x accuracy of Water & Electric moves\",\r\n\t\tname: \"Hydrostatic Positivity\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\t// Storm Drain\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tif (!this.boost({ spa: 1 })) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Hydrostatic Positivity');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Motor Drive\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tif (!this.boost({ spe: 1 })) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Hydrostatic Positivity');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Sturdy\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Hydrostatic Positivity');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyRedirectTarget(target, source, source2, move) {\r\n\t\t\t// Storm Drain\r\n\t\t\tif (move.type !== 'Water' || ['firepledge', 'grasspledge', 'waterpledge'].includes(move.id)) return;\r\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\r\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\r\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\r\n\t\t\t\tif (this.effectState.target !== target) {\r\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Hydrostatic Positivity');\r\n\t\t\t\t}\r\n\t\t\t\treturn this.effectState.target;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -30,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\t// Sturdy\r\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.add('-ability', target, 'Hydrostatic Positivity');\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: -1,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tif (['Electric', 'Water'].includes(move.type)) {\r\n\t\t\t\tthis.debug('Hydrostatic Positivity - enhancing accuracy');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// in the hills\r\n\tilliterit: {\r\n\t\tshortDesc: \"Immune to moves with 12 or more alphanumeric characters.\",\r\n\t\tname: \"Illiterit\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.id.length >= 12) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Illiterit');\r\n\t\t\t\tthis.add(`c:|${getName('in the hills')}|Gee ${source.name}, maybe I should get a dictionary so I can understand what move you just used.`);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Irpachuza\r\n\tmimeknowsbest: {\r\n\t\tshortDesc: \"When this Pokemon switches in, it uses a random screen or protect move.\",\r\n\t\tdesc: \"When this Pokemon switches in, it will randomly use one of Light Screen, Reflect, Protect, Detect, Barrier, Spiky Shield, Baneful Bunker, Safeguard, Mist, King's Shield, Magic Coat, or Aurora Veil.\",\r\n\t\tname: \"Mime knows best\",\r\n\t\tonStart(target) {\r\n\t\t\tconst randomMove = [\r\n\t\t\t\t\"Light Screen\", \"Reflect\", \"Protect\", \"Detect\", \"Barrier\", \"Spiky Shield\", \"Baneful Bunker\",\r\n\t\t\t\t\"Safeguard\", \"Mist\", \"King's Shield\", \"Magic Coat\", \"Aurora Veil\",\r\n\t\t\t];\r\n\t\t\tconst move = this.dex.getActiveMove(this.sample(randomMove));\r\n\t\t\t// allows use of Aurora Veil without hail\r\n\t\t\tif (move.name === \"Aurora Veil\") delete move.onTry;\r\n\t\t\tthis.actions.useMove(move, target);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// J0rdy004\r\n\tfortifyingfrost: {\r\n\t\tshortDesc: \"If Snow is active, this Pokemon's Sp. Atk and Sp. Def are 1.5x.\",\r\n\t\tname: \"Fortifying Frost\",\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(spa, pokemon) {\r\n\t\t\tif (['hail', 'snowscape'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (['hail', 'snowscape'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// kenn\r\n\tdeserteddunes: {\r\n\t\tshortDesc: \"Summons Deserted Dunes until switch-out; Sandstorm + Rock weaknesses removed.\",\r\n\t\tdesc: \"On switch-in, the weather becomes Deserted Dunes, which removes the weaknesses of the Rock type from Rock-type Pokemon. This weather remains in effect until this Ability is no longer active for any Pokemon, or the weather is changed by the Desolate Land, Primordial Sea or Delta Stream Abilities.\",\r\n\t\tname: \"Deserted Dunes\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('deserteddunes');\r\n\t\t},\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (this.field.getWeather().id === 'deserteddunes' && !STRONG_WEATHERS.includes(weather.id)) return false;\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target === pokemon) continue;\r\n\t\t\t\tif (target.hasAbility('deserteddunes')) {\r\n\t\t\t\t\tthis.field.weatherState.source = target;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearWeather();\r\n\t\t},\r\n\t\tflags: {},\r\n\t\tgen: 9,\r\n\t},\r\n\r\n\t// Kennedy\r\n\tanfield: {\r\n\t\tshortDesc: \"Clears terrain/hazards/pseudo weathers. Summons Anfield Atmosphere.\",\r\n\t\tname: \"Anfield\",\r\n\t\tonStart(target) {\r\n\t\t\tlet success = false;\r\n\t\t\tif (this.field.terrain) {\r\n\t\t\t\tsuccess = this.field.clearTerrain();\r\n\t\t\t}\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tconst remove = [\r\n\t\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const sideCondition of remove) {\r\n\t\t\t\t\tif (side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', side, this.dex.conditions.get(sideCondition).name, '[from] ability: Anfield', `[of] ${target}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pseudoWeather of PSEUDO_WEATHERS) {\r\n\t\t\t\tif (this.field.removePseudoWeather(pseudoWeather)) success = true;\r\n\t\t\t}\r\n\t\t\tif (success) {\r\n\t\t\t\tthis.add('-activate', target, 'ability: Anfield');\r\n\t\t\t}\r\n\t\t\tthis.field.addPseudoWeather('anfieldatmosphere', target, target.getAbility());\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\tyoullneverwalkalone: {\r\n\t\tshortDesc: \"Boosts Atk, Def, SpD, and Spe by 25% under Anfield Atmosphere.\",\r\n\t\tname: \"You'll Never Walk Alone\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.field.getPseudoWeather('anfieldatmosphere')) {\r\n\t\t\t\tthis.add('-ability', pokemon, 'You\\'ll Never Walk Alone');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, source, target, move) {\r\n\t\t\tif (this.field.getPseudoWeather('anfieldatmosphere')) {\r\n\t\t\t\tthis.debug('You\\'ll Never Walk Alone atk boost');\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def, target, source, move) {\r\n\t\t\tif (this.field.getPseudoWeather('anfieldatmosphere')) {\r\n\t\t\t\tthis.debug('You\\'ll Never Walk Alone def boost');\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpDPriority: 6,\r\n\t\tonModifySpD(spd, target, source, move) {\r\n\t\t\tif (this.field.getPseudoWeather('anfieldatmosphere')) {\r\n\t\t\t\tthis.debug('You\\'ll Never Walk Alone spd boost');\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.getPseudoWeather('anfieldatmosphere')) {\r\n\t\t\t\tthis.debug('You\\'ll Never Walk Alone spe boost');\r\n\t\t\t\treturn this.chainModify([5120, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, cantsuppress: 1 },\r\n\t},\r\n\r\n\t// kingbaruk\r\n\tpeerpressure: {\r\n\t\tshortDesc: \"All moves used while this Pokemon is on the field consume 4 PP. Sets Trump Card to 1 PP.\",\r\n\t\tname: \"Peer Pressure\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Peer Pressure');\r\n\t\t\tconst trumpCard = pokemon.moveSlots.find(moveSlot => moveSlot.id === 'trumpcard');\r\n\t\t\tif (trumpCard) {\r\n\t\t\t\ttrumpCard.pp = 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonAnyDeductPP(target, source) {\r\n\t\t\treturn 3;\r\n\t\t},\r\n\t\tonResidual(source, target, effect) {\r\n\t\t\tconst trumpCard = source.moveSlots.find(moveSlot => moveSlot.id === 'trumpcard');\r\n\t\t\tif (trumpCard) {\r\n\t\t\t\ttrumpCard.pp = 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Kiwi\r\n\tsurehitsorcery: {\r\n\t\tshortDesc: \"No Guard + Prankster + Grassy Surge.\",\r\n\t\tname: \"Sure Hit Sorcery\",\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Klmondo\r\n\tsuperskilled: {\r\n\t\tshortDesc: \"Skill Link + Multiscale.\",\r\n\t\tname: \"Super Skilled\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.multihit && Array.isArray(move.multihit) && move.multihit.length) {\r\n\t\t\t\tmove.multihit = move.multihit[1];\r\n\t\t\t}\r\n\t\t\tif (move.multiaccuracy) {\r\n\t\t\t\tdelete move.multiaccuracy;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.hp >= target.maxhp) {\r\n\t\t\t\tthis.debug('Multiscale weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Kry\r\n\tflashfreeze: {\r\n\t\tshortDesc: \"Heatproof + If attacker's used offensive stat has positive stat changes, take 0.75x damage.\",\r\n\t\tname: \"Flash Freeze\",\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof Atk weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Heatproof SpA weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.id === 'brn') {\r\n\t\t\t\treturn damage / 2;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (\r\n\t\t\t\t(move.category === 'Special' && source.boosts['spa'] > 0) ||\r\n\t\t\t\t(move.category === 'Physical' && source.boosts['atk'] > 0)\r\n\t\t\t) {\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Lasen\r\n\tidealizedworld: {\r\n\t\tshortDesc: \"Removes everything on switch-in.\",\r\n\t\tdesc: \"When this Pokemon switches in, all stat boosts, entry hazards, weathers, terrains, persistent weathers (such as Primordial Sea), and any other field effects (such as Aurora Veil) are removed from all sides of the field.\",\r\n\t\tname: \"Idealized World\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tconst target = pokemon.side.foe;\r\n\t\t\tthis.add('-ability', pokemon, 'Idealized World');\r\n\t\t\tconst displayText = ['spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge'];\r\n\t\t\tfor (const targetCondition of Object.keys(target.sideConditions)) {\r\n\t\t\t\tif (target.removeSideCondition(targetCondition) && displayText.includes(targetCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', target, this.dex.conditions.get(targetCondition).name, '[from] ability: Idealized World', `[of] ${pokemon}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const sideCondition of Object.keys(pokemon.side.sideConditions)) {\r\n\t\t\t\tif (pokemon.side.removeSideCondition(sideCondition) && displayText.includes(sideCondition)) {\r\n\t\t\t\t\tthis.add('-sideend', pokemon.side, this.dex.conditions.get(sideCondition).name, '[from] ability: Idealized World', `[of] ${pokemon}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\tthis.field.clearWeather();\r\n\t\t\tfor (const pseudoWeather of PSEUDO_WEATHERS) {\r\n\t\t\t\tthis.field.removePseudoWeather(pseudoWeather);\r\n\t\t\t}\r\n\t\t\tthis.add('-clearallboost');\r\n\t\t\tfor (const poke of this.getAllActive()) {\r\n\t\t\t\tpoke.clearBoosts();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Lumari\r\n\tpyrotechnic: {\r\n\t\tshortDesc: \"Critical hits are guaranteed when the foe is burned.\",\r\n\t\tname: \"Pyrotechnic\",\r\n\t\tonModifyCritRatio(critRatio, source, target) {\r\n\t\t\tif (target?.status === 'brn') return 5;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Lunell\r\n\tlowtidehightide: {\r\n\t\tshortDesc: \"Switch-in sets Gravity, immune to Water, traps Water-type foes.\",\r\n\t\tname: \"Low Tide, High Tide\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.addPseudoWeather('gravity', source);\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Water') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Low Tide, High Tide');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeTrapPokemon(pokemon) {\r\n\t\t\tif (pokemon.hasType('Water') && pokemon.isAdjacent(this.effectState.target)) {\r\n\t\t\t\tpokemon.tryTrap(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeMaybeTrapPokemon(pokemon, source) {\r\n\t\t\tif (!source) source = this.effectState.target;\r\n\t\t\tif (!source || !pokemon.isAdjacent(source)) return;\r\n\t\t\tif (!pokemon.knownType || pokemon.hasType('Water')) {\r\n\t\t\t\tpokemon.maybeTrapped = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Lyna\r\n\tmagicaura: {\r\n\t\tshortDesc: \"Magic Guard + Magic Bounce.\",\r\n\t\tname: \"Magic Aura\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHitPriority: 1,\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.actions.useMove(newMove, target, { target: source });\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tonAllyTryHitSide(target, source, move) {\r\n\t\t\tif (target.isAlly(source) || move.hasBounced || !move.flags['reflectable']) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\r\n\t\t\tnewMove.hasBounced = true;\r\n\t\t\tnewMove.pranksterBoosted = false;\r\n\t\t\tthis.actions.useMove(newMove, this.effectState.target, { target: source });\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Maia\r\n\tpowerabuse: {\r\n\t\tshortDesc: \"Drought + 60% damage reduction + 20% burn after physical move.\",\r\n\t\tname: \"Power Abuse\",\r\n\t\tonStart() {\r\n\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tonSourceModifyDamage() {\r\n\t\t\treturn this.chainModify(0.4);\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (move.category === \"Physical\" && this.randomChance(1, 5)) {\r\n\t\t\t\tsource.trySetStatus('brn', target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Mathy\r\n\tdynamictyping: {\r\n\t\tshortDesc: \"Moves used by all Pokemon are ??? type.\",\r\n\t\tname: \"Dynamic Typing\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, \"Dynamic Typing\");\r\n\t\t},\r\n\t\tonModifyTypePriority: 2,\r\n\t\tonAnyModifyType(move, pokemon, target) {\r\n\t\t\tmove.type = \"???\";\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Merritty\r\n\tendround: {\r\n\t\tshortDesc: \"Clears everything.\",\r\n\t\tdesc: \"When this Pokemon switches in, all weather, terrains, field conditions, entry hazards, stat stage changes, and volatile status conditions are removed from the field.\",\r\n\t\tname: \"End Round\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (this.suppressingAbility(pokemon)) return;\r\n\t\t\tthis.add('-ability', pokemon, 'End Round');\r\n\t\t\tthis.add('-message', 'A new round is starting! Resetting the field...');\r\n\t\t\tthis.field.clearWeather();\r\n\t\t\tthis.field.clearTerrain();\r\n\t\t\tfor (const pseudoWeather of PSEUDO_WEATHERS) {\r\n\t\t\t\tthis.field.removePseudoWeather(pseudoWeather);\r\n\t\t\t}\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tconst remove = [\r\n\t\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'spikes', 'toxicspikes', 'stealthrock', 'stickyweb', 'gmaxsteelsurge',\r\n\t\t\t\t\t'bioticorbfoe', 'bioticorbself', 'tailwind', 'luckychant', 'alting',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const sideCondition of remove) {\r\n\t\t\t\t\tif (side.removeSideCondition(sideCondition)) {\r\n\t\t\t\t\t\tthis.add('-sideend', side, this.dex.conditions.get(sideCondition).name, '[from] ability: End Round', `[of] ${pokemon}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const mon of this.getAllActive()) {\r\n\t\t\t\tconst volatilesToClear = [\r\n\t\t\t\t\t'substitute', 'aquaring', 'snack', 'attract', 'confusion', 'bide', 'partiallytrapped', 'perfectmimic',\r\n\t\t\t\t\t'mustrecharge', 'defensecurl', 'disable', 'focusenergy', 'dragoncheer', 'embargo', 'endure', 'gastroacid',\r\n\t\t\t\t\t'foresight', 'glaiverush', 'grudge', 'healblock', 'imprison', 'curse', 'leechseed', 'magnetrise', 'minimize',\r\n\t\t\t\t\t'miracleeye', 'nightmare', 'noretreat', 'octolock', 'lockedmove', 'powder', 'powershift', 'powertrick',\r\n\t\t\t\t\t'rage', 'ragepowder', 'roost', 'saltcure', 'smackdown', 'snatch', 'sparklingaria', 'spotlight', 'stockpile',\r\n\t\t\t\t\t'syrupbomb', 'tarshot', 'taunt', 'telekinesis', 'torment', 'uproar', 'yawn', 'flashfire', 'protosynthesis',\r\n\t\t\t\t\t'quarkdrive', 'slowstart', 'truant', 'unburden', 'metronome', 'beakblast', 'charge', 'echoedvoice', 'encore',\r\n\t\t\t\t\t'focuspunch', 'furycutter', 'gmaxcannonade', 'gmaxchistrike', 'gmaxvinelash', 'gmaxvolcalith', 'gmaxwildfire',\r\n\t\t\t\t\t'iceball', 'rollout', 'laserfocus', 'lockon', 'perishsong', 'shelltrap', 'throatchop', 'trapped', 'ultramystik',\r\n\t\t\t\t\t'choicelock', 'stall', 'catstampofapproval', 'beefed', 'boiled', 'flipped', 'therollingspheal', 'treasurebag',\r\n\t\t\t\t\t'torisstori', 'anyonecanbekilled', 'sigilsstorm', 'wonderwing', 'riseabove', 'superrollout', 'meatgrinder',\r\n\t\t\t\t\t'risingsword',\r\n\t\t\t\t];\r\n\t\t\t\tfor (const volatile of volatilesToClear) {\r\n\t\t\t\t\tif (mon.volatiles[volatile]) {\r\n\t\t\t\t\t\tif (volatile === 'perishsong') {\r\n\t\t\t\t\t\t\t// will implode the pokemon otherwise\r\n\t\t\t\t\t\t\tdelete mon.volatiles[volatile];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tmon.removeVolatile(volatile);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (volatile === 'flipped') {\r\n\t\t\t\t\t\t\tchangeSet(this, mon, ssbSets['Clem']);\r\n\t\t\t\t\t\t\tthis.add(`c:|${getName('Clem')}|\u252C\u2500\u2500\u252C\u25E1\uFF89(\u00B0 -\u00B0\uFF89)`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: End Round');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tmon.clearBoosts();\r\n\t\t\t\tthis.add('-clearboost', mon, '[from] ability: End Round', `[of] ${pokemon}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { cantsuppress: 1 },\r\n\t},\r\n\r\n\t// Meteordash\r\n\ttatsuglare: {\r\n\t\tshortDesc: \"Fur Coat + All of the user's moves use the Special Attack stat.\",\r\n\t\tname: \"TatsuGlare\",\r\n\t\tonModifyMove(move, pokemon, target) {\r\n\t\t\tif (move.category !== \"Status\") move.overrideOffensiveStat = 'spa';\r\n\t\t},\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def) {\r\n\t\t\treturn this.chainModify(2);\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Mex\r\n\ttimedilation: {\r\n\t\tshortDesc: \"+10% BP for every 10 turns passed in battle, max 200%.\",\r\n\t\tname: \"Time Dilation\",\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tconst turnMultiplier = Math.floor(this.turn / 10);\r\n\t\t\tlet bpMod = 1 + (0.1 * turnMultiplier);\r\n\t\t\tif (bpMod > 2) bpMod = 2;\r\n\t\t\treturn this.chainModify(bpMod);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Miojo\r\n\ttherollingspheal: {\r\n\t\tshortDesc: \"1.5x dmg boost for every repeated move use. Up to 5 uses. +1 Spe when use contact.\",\r\n\t\tname: \"The Rolling Spheal\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tpokemon.addVolatile('therollingspheal');\r\n\t\t},\r\n\t\tonSourceHit(target, source, move) {\r\n\t\t\tif (move.flags['contact'] && move.category === 'Physical') {\r\n\t\t\t\tthis.add('-activate', source, 'ability: The Rolling Spheal');\r\n\t\t\t\tthis.boost({ spe: 1 }, source, source, move);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon) {\r\n\t\t\t\tthis.effectState.lastMove = '';\r\n\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t},\r\n\t\t\tonTryMovePriority: -2,\r\n\t\t\tonTryMove(pokemon, target, move) {\r\n\t\t\t\tif (!pokemon.hasAbility('therollingspheal')) {\r\n\t\t\t\t\tpokemon.removeVolatile('therollingspheal');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.effectState.lastMove === move.id && pokemon.moveLastTurnResult) {\r\n\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t} else if (pokemon.volatiles['twoturnmove']) {\r\n\t\t\t\t\tif (this.effectState.lastMove !== move.id) {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.effectState.numConsecutive++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.effectState.lastMove = move.id;\r\n\t\t\t},\r\n\t\t\tonModifyDamage(damage, source, target, move) {\r\n\t\t\t\tif (this.effectState.numConsecutive > 0) {\r\n\t\t\t\t\tthis.debug(`Current Metronome boost: 6144/4096`);\r\n\t\t\t\t\treturn this.chainModify([6144, 4096]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonAfterMove(source, target, move) {\r\n\t\t\t\tif (this.effectState.numConsecutive > 5) {\r\n\t\t\t\t\tthis.effectState.numConsecutive = 0;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Monkey\r\n\tharambehit: {\r\n\t\tshortDesc: \"Unseen Fist + Punch moves have 1.6x power.\",\r\n\t\tname: \"Harambe Hit\",\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.flags['contact']) delete move.flags['protect'];\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['punch']) {\r\n\t\t\t\tthis.debug('Harambe Hit boost');\r\n\t\t\t\treturn this.chainModify([6554, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// MyPearl\r\n\teoncall: {\r\n\t\tshortDesc: \"Changes into Latios after status move, Latias after special move.\",\r\n\t\tdesc: \"If this Pokemon is a Latios, it changes into Latias after using a status move. If this Pokemon is a Latias, it changes into Latios after using a special attack.\",\r\n\t\tname: \"Eon Call\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (move.category === 'Status' && source.species.baseSpecies === 'Latias') {\r\n\t\t\t\tchangeSet(this, source, ssbSets['MyPearl'], true);\r\n\t\t\t} else if (move.category === 'Special' && source.species.baseSpecies === 'Latios') {\r\n\t\t\t\tchangeSet(this, source, ssbSets['MyPearl-Latias'], true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Neko\r\n\tweatherproof: {\r\n\t\tshortDesc: \"Water-/Fire-type moves against this Pokemon deal damage with a halved offensive stat.\",\r\n\t\tname: \"Weatherproof\",\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Weatherproof weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Water' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Weatherproof weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Ney\r\n\tpranksterplus: {\r\n\t\tshortDesc: \"This Pokemon's Status moves have priority raised by 1. Dark types are not immune.\",\r\n\t\tname: \"Prankster Plus\",\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Notater517\r\n\tventcrosser: {\r\n\t\tshortDesc: \"Uses Baton Pass after every move.\",\r\n\t\tname: \"Vent Crosser\",\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tthis.actions.useMove('Baton Pass', source);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// nya\r\n\tadorablegrace: {\r\n\t\tshortDesc: \"This Pokemon's secondary effects and certain items have their activation chance doubled.\",\r\n\t\tdesc: \"This Pokemon's secondary effects of attacks, as well as the effects of chance based items like Focus Band and King's Rock, have their activation chance doubled.\",\r\n\t\tname: \"Adorable Grace\",\r\n\t\tonModifyMovePriority: -2,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.secondaries) {\r\n\t\t\t\tthis.debug('doubling secondary chance');\r\n\t\t\t\tfor (const secondary of move.secondaries) {\r\n\t\t\t\t\tif (secondary.chance) secondary.chance *= 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (move.self?.chance) move.self.chance *= 2;\r\n\t\t},\r\n\t\t// Item chances modified in items.js\r\n\t},\r\n\r\n\t// pants\r\n\tdrifting: {\r\n\t\tshortDesc: \"Wandering Spirit + Stakeout.\",\r\n\t\tname: \"Drifting\",\r\n\t\tonDamagingHit(damage, target, source, move) {\r\n\t\t\tif (source.getAbility().flags['failskillswap'] || target.volatiles['dynamax']) return;\r\n\r\n\t\t\tif (this.checkMoveMakesContact(move, source, target)) {\r\n\t\t\t\tconst targetCanBeSet = this.runEvent('SetAbility', target, source, this.effect, source.ability);\r\n\t\t\t\tif (!targetCanBeSet) return targetCanBeSet;\r\n\t\t\t\tconst sourceAbility = source.setAbility('drifting', target);\r\n\t\t\t\tif (!sourceAbility) return;\r\n\t\t\t\tif (target.isAlly(source)) {\r\n\t\t\t\t\tthis.add('-activate', target, 'Skill Swap', '', '', `[of] ${source}`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Drifting', this.dex.abilities.get(sourceAbility).name, 'Drifting', `[of] ${source}`);\r\n\t\t\t\t}\r\n\t\t\t\ttarget.setAbility(sourceAbility);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyAtkPriority: 5,\r\n\t\tonModifyAtk(atk, attacker, defender) {\r\n\t\t\tif (defender && !defender.activeTurns) {\r\n\t\t\t\tthis.debug('Stakeout boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySpAPriority: 5,\r\n\t\tonModifySpA(atk, attacker, defender) {\r\n\t\t\tif (defender && !defender.activeTurns) {\r\n\t\t\t\tthis.debug('Stakeout boost');\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// PartMan\r\n\tctiershitposter: {\r\n\t\tshortDesc: \"-1 Atk/SpA, +1 Def/SpD. +1 Atk/SpA/Spe, -1 Def/SpD, Mold Breaker if 420+ dmg taken.\",\r\n\t\tdesc: \"When this Pokemon switches in, its Defense and Special Defense are boosted by 1 stage and its Attack and Special Attack are lowered by 1 stage. Once this Pokemon has taken total damage throughout the battle equal to or greater than 420 HP, it instead ignores the Abilities of opposing Pokemon when attacking and its existing stat stage changes are cleared. After this and whenever it gets sent out from this point onwards, this Pokemon boosts its Attack, Special Attack, and Speed by 1 stage, and lowers its Defense and Special Defense by 1 stage.\",\r\n\t\tname: \"C- Tier Shitposter\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\ttarget.m.damageTaken ??= 0;\r\n\t\t\ttarget.m.damageTaken += damage;\r\n\t\t\tif (target.set && !target.set.shiny) {\r\n\t\t\t\tif (target.m.damageTaken >= 420) {\r\n\t\t\t\t\ttarget.set.shiny = true;\r\n\t\t\t\t\tif (!target.hp) {\r\n\t\t\t\t\t\treturn this.add(`c:|${getName('PartMan')}|MWAHAHA NOW YOU - oh I'm dead`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add(`c:|${getName('PartMan')}|That's it. Get ready to be rapid-fire hugged.`);\r\n\t\t\t\t\ttarget.clearBoosts();\r\n\t\t\t\t\tthis.add('-clearboost', target);\r\n\t\t\t\t\tthis.boost({ atk: 1, def: -1, spa: 1, spd: -1, spe: 1 });\r\n\t\t\t\t\tconst details = target.getUpdatedDetails();\r\n\t\t\t\t\ttarget.details = details;\r\n\t\t\t\t\tthis.add('replace', target, details);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyMove(move, pokemon) {\r\n\t\t\tif (pokemon.set.shiny) move.ignoreAbility = true;\r\n\t\t},\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (!pokemon.set.shiny) {\r\n\t\t\t\tthis.boost({ atk: -1, def: 1, spa: -1, spd: 1 });\r\n\t\t\t} else {\r\n\t\t\t\tthis.boost({ atk: 1, def: -1, spa: 1, spd: -1, spe: 1 });\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Pastor Gigas\r\n\tgodsmercy: {\r\n\t\tshortDesc: \"Summons Grassy Terrain and cures the team's status conditions on switch-in.\",\r\n\t\tname: \"God's Mercy\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('grassyterrain');\r\n\t\t\tconst allies = [...source.side.pokemon, ...source.side.allySide?.pokemon || []];\r\n\t\t\tfor (const ally of allies) {\r\n\t\t\t\tif (ally !== source && ally.hasAbility('sapsipper')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tally.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// phoopes\r\n\tididitagain: {\r\n\t\tshortDesc: \"Bypasses Sleep Clause Mod.\",\r\n\t\tname: \"I Did It Again\",\r\n\t\tflags: {},\r\n\t\t// implemented in rulesets.ts\r\n\t},\r\n\r\n\t// Princess Autumn\r\n\tlasthymn: {\r\n\t\tshortDesc: \"Weakens incoming attacks by 10% for each Pokemon fainted.\",\r\n\t\tname: \"Last Hymn\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.totalFainted) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Last Hymn');\r\n\t\t\t\tconst fallen = Math.min(pokemon.side.totalFainted, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonFoeBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\treturn this.chainModify([10, (10 + this.effectState.fallen)]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Pulse_kS\r\n\tpulseluck: {\r\n\t\tshortDesc: \"Mega Launcher + Super Luck.\",\r\n\t\tname: \"Pulse Luck\",\r\n\t\tonBasePowerPriority: 19,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['pulse']) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyCritRatio(critRatio) {\r\n\t\t\treturn critRatio + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// PYRO\r\n\thardcorehustle: {\r\n\t\tshortDesc: \"Moves have 15% more power and -5% Acc for each fainted ally, up to 5 allies.\",\r\n\t\tname: \"Hardcore Hustle\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tif (pokemon.side.totalFainted) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Hardcore Hustle');\r\n\t\t\t\tconst fallen = Math.min(pokemon.side.totalFainted, 5);\r\n\t\t\t\tthis.add('-start', pokemon, `fallen${fallen}`, '[silent]');\r\n\t\t\t\tthis.effectState.fallen = fallen;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tthis.add('-end', pokemon, `fallen${this.effectState.fallen}`, '[silent]');\r\n\t\t},\r\n\t\tonBasePowerPriority: 21,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\tconst powMod = [1, 1.15, 1.3, 1.45, 1.6, 1.75];\r\n\t\t\t\tthis.debug(`Hardcore Hustle boost: ${powMod[this.effectState.fallen]}`);\r\n\t\t\t\treturn this.chainModify(powMod[this.effectState.fallen]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyAccuracyPriority: -1,\r\n\t\tonSourceModifyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (this.effectState.fallen) {\r\n\t\t\t\tconst accMod = [1, 0.95, 0.90, 0.85, 0.80, 0.75];\r\n\t\t\t\tthis.debug(`Hardcore Hustle debuff: ${accMod[this.effectState.fallen]}`);\r\n\t\t\t\treturn this.chainModify(accMod[this.effectState.fallen]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Quite Quiet\r\n\tfancyscarf: {\r\n\t\tshortDesc: \"Shield Dust + Magic Guard\",\r\n\t\tname: \"Fancy Scarf\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifySecondaries(secondaries) {\r\n\t\t\tthis.debug('Fancy Scarf prevent secondary');\r\n\t\t\treturn secondaries.filter(effect => !!effect.self);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// quziel\r\n\thighperformancecomputing: {\r\n\t\tshortDesc: \"Becomes a random typing at the beginning of each turn.\",\r\n\t\tname: \"High Performance Computing\",\r\n\t\tflags: {},\r\n\t\tonResidual(source) {\r\n\t\t\tconst type = this.sample(this.dex.types.names().filter(i => i !== 'Stellar' && i !== source.getTypes()[0]));\r\n\t\t\tif (source.setType(type)) {\r\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: High Performance Computing');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// R8\r\n\tantipelau: {\r\n\t\tshortDesc: \"Boosts Sp. Atk by 2 and sets a 25% Wish upon switch-in.\",\r\n\t\tname: \"Anti-Pelau\",\r\n\t\tonStart(target) {\r\n\t\t\tthis.boost({ spa: 2 }, target);\r\n\t\t\tthis.actions.useMove(this.dex.getActiveMove('wish'), target,\r\n\t\t\t\t{ target, sourceEffect: this.dex.abilities.get('antipelau') });\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Rainshaft\r\n\trainysaura: {\r\n\t\tshortDesc: \"On switch-in, this Pokemon summons rain. Boosts all Psychic-type damage by 33%.\",\r\n\t\tname: \"Rainy's Aura\",\r\n\t\tonStart(source) {\r\n\t\t\tif (this.suppressingAbility(source)) return;\r\n\t\t\tif (source.species.id === 'kyogre' && source.item === 'blueorb') return;\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t},\r\n\t\tonAnyBasePowerPriority: 20,\r\n\t\tonAnyBasePower(basePower, source, target, move) {\r\n\t\t\tif (target === source || move.category === 'Status' || move.type !== 'Psychic') return;\r\n\t\t\tif (!move.auraBooster?.hasAbility('Rainy\\'s Aura')) move.auraBooster = this.effectState.target;\r\n\t\t\tif (move.auraBooster !== this.effectState.target) return;\r\n\t\t\treturn this.chainModify([move.hasAuraBreak ? 3072 : 5448, 4096]);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Ransei\r\n\tultramystik: {\r\n\t\tshortDesc: \"Stats 1.3x + Magic Guard + Leftovers until hit super effectively.\",\r\n\t\tdesc: \"This Pokemon can only be damaged by direct attacks. At the end of each turn, this Pokemon restores 1/16 of its maximum HP. This Pokemon's Attack, Defense, Special Attack, Special Defense, and Speed are boosted by 1.3x. This ability will be replaced with Healer if it is hit with a super effective attack.\",\r\n\t\tname: \"Ultra Mystik\",\r\n\t\tonStart(target) {\r\n\t\t\tif (!this.effectState.superHit) {\r\n\t\t\t\ttarget.addVolatile('ultramystik');\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd(pokemon) {\r\n\t\t\tdelete pokemon.volatiles['ultramystik'];\r\n\t\t\tthis.add('-end', pokemon, 'Ultra Mystik', '[silent]');\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.effectState.superHit = true;\r\n\t\t\t\ttarget.removeVolatile('ultramystik');\r\n\t\t\t\ttarget.setAbility('Healer', null, true);\r\n\t\t\t\ttarget.baseAbility = target.ability;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tnoCopy: true,\r\n\t\t\tonStart(pokemon, source, effect) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ultra Mystik');\r\n\t\t\t\tthis.add('-start', pokemon, 'ultramystik');\r\n\t\t\t},\r\n\t\t\tonModifyAtkPriority: 5,\r\n\t\t\tonModifyAtk(atk, pokemon) {\r\n\t\t\t\tif (pokemon.ignoringAbility()) return;\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonModifyDefPriority: 6,\r\n\t\t\tonModifyDef(def, pokemon) {\r\n\t\t\t\tif (pokemon.ignoringAbility()) return;\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonModifySpAPriority: 5,\r\n\t\t\tonModifySpA(spa, pokemon) {\r\n\t\t\t\tif (pokemon.ignoringAbility()) return;\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonModifySpDPriority: 6,\r\n\t\t\tonModifySpD(spd, pokemon) {\r\n\t\t\t\tif (pokemon.ignoringAbility()) return;\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonModifySpe(spe, pokemon) {\r\n\t\t\t\tif (pokemon.ignoringAbility()) return;\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t},\r\n\t\t\tonEnd(pokemon) {\r\n\t\t\t\tthis.add('-end', pokemon, 'Ultra Mystik');\r\n\t\t\t},\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 16, pokemon, pokemon, pokemon.getAbility());\r\n\t\t},\r\n\t},\r\n\r\n\t// ReturnToMonkey\r\n\tmonkeseemonkedo: {\r\n\t\tshortDesc: \"Boosts Atk or SpA by 1 based on foe's defenses, then copies foe's Ability.\",\r\n\t\tname: \"Monke See Monke Do\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet totaldef = 0;\r\n\t\t\tlet totalspd = 0;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\ttotaldef += target.getStat('def', false, true);\r\n\t\t\t\ttotalspd += target.getStat('spd', false, true);\r\n\t\t\t}\r\n\t\t\tif (totaldef && totaldef >= totalspd) {\r\n\t\t\t\tthis.boost({ spa: 1 });\r\n\t\t\t} else if (totalspd) {\r\n\t\t\t\tthis.boost({ atk: 1 });\r\n\t\t\t}\r\n\r\n\t\t\t// n.b. only affects Hackmons\r\n\t\t\t// interaction with No Ability is complicated: https://www.smogon.com/forums/threads/pokemon-sun-moon-battle-mechanics-research.3586701/page-76#post-7790209\r\n\t\t\tif (pokemon.adjacentFoes().some(foeActive => foeActive.ability === 'noability')) {\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t\t// interaction with Ability Shield is similar to No Ability\r\n\t\t\tif (pokemon.hasItem('Ability Shield')) {\r\n\t\t\t\tthis.add('-block', pokemon, 'item: Ability Shield');\r\n\t\t\t\tthis.effectState.gaveUp = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonUpdate(pokemon) {\r\n\t\t\tif (!pokemon.isStarted || this.effectState.gaveUp) return;\r\n\r\n\t\t\tconst possibleTargets = pokemon.adjacentFoes().filter(\r\n\t\t\t\ttarget => !target.getAbility().flags['notrace'] && target.ability !== 'noability'\r\n\t\t\t);\r\n\t\t\tif (!possibleTargets.length) return;\r\n\r\n\t\t\tconst target = this.sample(possibleTargets);\r\n\t\t\tconst ability = target.getAbility();\r\n\t\t\tif (pokemon.setAbility(ability)) {\r\n\t\t\t\tthis.add('-ability', pokemon, ability, '[from] ability: Monke See Monke Do', `[of] ${target}`);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1 },\r\n\t},\r\n\r\n\t// Rio Vidal\r\n\tbuiltdifferent: {\r\n\t\tshortDesc: \"Stamina + Normal-type moves get +1 priority.\",\r\n\t\tname: \"Built Different\",\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.boost({ def: 1 });\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.type === 'Normal') return priority + 1;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Rissoux\r\n\thardheaded: {\r\n\t\tshortDesc: \"Reckless + Rock Head.\",\r\n\t\tname: \"Hard Headed\",\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.recoil || move.hasCrashDamage) {\r\n\t\t\t\tthis.debug('Reckless boost');\r\n\t\t\t\treturn this.chainModify([4915, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// RSB\r\n\thotpursuit: {\r\n\t\tshortDesc: \"This Pokemon's damaging moves have the Pursuit effect.\",\r\n\t\tname: \"Hot Pursuit\",\r\n\t\tonBeforeTurn(pokemon) {\r\n\t\t\tfor (const side of this.sides) {\r\n\t\t\t\tif (side.hasAlly(pokemon)) continue;\r\n\t\t\t\tside.addSideCondition('hotpursuit', pokemon);\r\n\t\t\t\tconst data = side.getSideConditionData('hotpursuit');\r\n\t\t\t\tif (!data.sources) {\r\n\t\t\t\t\tdata.sources = [];\r\n\t\t\t\t}\r\n\t\t\t\tdata.sources.push(pokemon);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePower(relayVar, source, target, move) {\r\n\t\t\t// You can't get here unless the pursuit succeeds\r\n\t\t\tif (target.beingCalledBack || target.switchFlag) {\r\n\t\t\t\tthis.debug('Pursuit damage boost');\r\n\t\t\t\treturn move.basePower * 2;\r\n\t\t\t}\r\n\t\t\treturn move.basePower;\r\n\t\t},\r\n\t\tonModifyMove(move, source, target) {\r\n\t\t\tif (target?.beingCalledBack || target?.switchFlag) move.accuracy = true;\r\n\t\t},\r\n\t\tonTryHit(source, target) {\r\n\t\t\ttarget.side.removeSideCondition('hotpursuit');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tduration: 1,\r\n\t\t\tonBeforeSwitchOut(pokemon) {\r\n\t\t\t\tconst move = this.queue.willMove(pokemon.foes()[0]);\r\n\t\t\t\tconst moveName = move && move.moveid ? move.moveid.toString() : \"\";\r\n\t\t\t\tthis.debug('Pursuit start');\r\n\t\t\t\tlet alreadyAdded = false;\r\n\t\t\t\tpokemon.removeVolatile('destinybond');\r\n\t\t\t\tfor (const source of this.effectState.sources) {\r\n\t\t\t\t\tif (!source.isAdjacent(pokemon) || !this.queue.cancelMove(source) || !source.hp) continue;\r\n\t\t\t\t\tif (!alreadyAdded) {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon.foes()[0], 'ability: Hot Pursuit');\r\n\t\t\t\t\t\talreadyAdded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Run through each action in queue to check if the Pursuit user is supposed to Mega Evolve this turn.\r\n\t\t\t\t\t// If it is, then Mega Evolve before moving.\r\n\t\t\t\t\tif (source.canMegaEvo || source.canUltraBurst) {\r\n\t\t\t\t\t\tfor (const [actionIndex, action] of this.queue.entries()) {\r\n\t\t\t\t\t\t\tif (action.pokemon === source && action.choice === 'megaEvo') {\r\n\t\t\t\t\t\t\t\tthis.actions.runMegaEvo(source);\r\n\t\t\t\t\t\t\t\tthis.queue.list.splice(actionIndex, 1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.actions.runMove(moveName, source, source.getLocOf(pokemon));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Rumia\r\n\tyoukaiofthedusk: {\r\n\t\tshortDesc: \"This Pokemon's Defense is doubled and its status moves gain +1 priority.\",\r\n\t\tname: \"Youkai of the Dusk\",\r\n\t\tonModifyDefPriority: 6,\r\n\t\tonModifyDef(def) {\r\n\t\t\treturn this.chainModify(2);\r\n\t\t},\r\n\t\tonModifyPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.category === 'Status') {\r\n\t\t\t\tmove.pranksterBoosted = true;\r\n\t\t\t\treturn priority + 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// SexyMalasada\r\n\tancestryritual: {\r\n\t\tshortDesc: \"Recoil heals. While below 50% HP, changes to Typhlosion-Hisui.\",\r\n\t\tdesc: \"Moves that would deal recoil or crash damage, aside from Struggle, heal this Pokemon for the corresponding amount instead. If this Pokemon is a Typhlosion, it changes to Typhlosion-Hisui if it has 1/2 or less of its maximum HP at the end of a turn. If Typhlosion-Hisui's HP is above 1/2 of its maximum HP at the end of a turn, it changes back to Typhlosion.\",\r\n\t\tname: \"Ancestry Ritual\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') {\r\n\t\t\t\t\tthis.heal(damage);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidualOrder: 20,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Typhlosion' || pokemon.transformed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pokemon.hp <= pokemon.maxhp / 2 && pokemon.species.id !== 'typhlosionhisui') {\r\n\t\t\t\tpokemon.formeChange('Typhlosion-Hisui');\r\n\t\t\t} else if (pokemon.hp > pokemon.maxhp / 2 && pokemon.species.id === 'typhlosionhisui') {\r\n\t\t\t\tpokemon.formeChange('Typhlosion');\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Siegfried\r\n\tmagicalmysterycharge: {\r\n\t\tshortDesc: \"Summons Electric Terrain upon switch-in, +1 boost to Sp. Def during Electric Terrain.\",\r\n\t\tname: \"Magical Mystery Charge\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setTerrain('electricterrain');\r\n\t\t},\r\n\t\tonModifySpDPriority: 5,\r\n\t\tonModifySpD(spd, pokemon) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Sificon\r\n\tperfectlyimperfect: {\r\n\t\tdesc: \"If a Pokemon uses a Fire- or Ice-type attack against this Pokemon, that Pokemon's offensive stat is halved when calculating the damage to this Pokemon.\",\r\n\t\tshortDesc: \"Fire-/Ice-type moves against this Pokemon deal damage with a halved offensive stat.\",\r\n\t\tname: \"Perfectly Imperfect\",\r\n\t\tonSourceModifyAtkPriority: 6,\r\n\t\tonSourceModifyAtk(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Perfectly Imperfect weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifySpAPriority: 5,\r\n\t\tonSourceModifySpA(atk, attacker, defender, move) {\r\n\t\t\tif (move.type === 'Ice' || move.type === 'Fire') {\r\n\t\t\t\tthis.debug('Perfectly Imperfect weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// skies\r\n\tspikesofwrath: {\r\n\t\tshortDesc: \"Cheek Pouch + sets Spikes and Toxic Spikes upon getting KOed.\",\r\n\t\tname: \"Spikes of Wrath\",\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tif (!target.hp) {\r\n\t\t\t\tconst side = source.isAlly(target) ? source.side.foe : source.side;\r\n\t\t\t\tconst spikes = side.sideConditions['spikes'];\r\n\t\t\t\tconst toxicSpikes = side.sideConditions['toxicspikes'];\r\n\t\t\t\tif (!spikes || spikes.layers < 3) {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Spikes of Wrath');\r\n\t\t\t\t\tside.addSideCondition('spikes', target);\r\n\t\t\t\t}\r\n\t\t\t\tif (!toxicSpikes || toxicSpikes.layers < 2) {\r\n\t\t\t\t\tthis.add('-activate', target, 'ability: Spikes of Wrath');\r\n\t\t\t\t\tside.addSideCondition('toxicspikes', target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEatItem(item, pokemon) {\r\n\t\t\tthis.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Soft Flex\r\n\tadaptiveengineering: {\r\n\t\tshortDesc: \"Every turn, raises a random stat by 1 stage if the foe has more raised stats.\",\r\n\t\tname: \"Adaptive Engineering\",\r\n\t\tonResidual(source) {\r\n\t\t\tif (source?.foes()?.[0] === undefined) return;\r\n\t\t\tif (source.positiveBoosts() < source.foes()[0].positiveBoosts()) {\r\n\t\t\t\tconst stats: BoostID[] = [];\r\n\t\t\t\tlet stat: BoostID;\r\n\t\t\t\tfor (stat in source.boosts) {\r\n\t\t\t\t\tif (stat === 'accuracy' || stat === 'evasion') continue;\r\n\t\t\t\t\tif (source.boosts[stat] < 6) {\r\n\t\t\t\t\t\tstats.push(stat);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (stats.length) {\r\n\t\t\t\t\tconst randomStat = this.sample(stats);\r\n\t\t\t\t\tthis.boost({ [randomStat]: 1 }, source, source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Solaros & Lunaris\r\n\tridethesun: {\r\n\t\tshortDesc: \"Drought + 2x Spe in sun.\",\r\n\t\tdesc: \"On switch-in, this Pokemon summons Sunny Day. If Sunny Day is active, this Pokemon's Speed is 2x.\",\r\n\t\tname: \"Ride the Sun!\",\r\n\t\tonStart(source) {\r\n\t\t\tif (source.species.id === 'groudon' && source.item === 'redorb') return;\r\n\t\t\tthis.field.setWeather('sunnyday');\r\n\t\t},\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// spoo\r\n\ticanheartheheartbeatingasone: {\r\n\t\tshortDesc: \"Pixilate + Sharpness. -1 Atk upon KOing an opposing Pokemon.\",\r\n\t\tname: \"I Can Hear The Heart Beating As One\",\r\n\t\tonModifyTypePriority: -1,\r\n\t\tonModifyType(move, pokemon) {\r\n\t\t\tconst noModifyType = [\r\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\r\n\t\t\t];\r\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) &&\r\n\t\t\t\t!(move.isZ && move.category !== 'Status') && !(move.name === 'Tera Blast' && pokemon.terastallized)) {\r\n\t\t\t\tmove.type = 'Fairy';\r\n\t\t\t\tmove.typeChangerBoosted = this.effect;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 23,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\r\n\t\t\tif (move.flags['slicing']) {\r\n\t\t\t\tthis.debug('Sharpness boost');\r\n\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAfterFaint(length, target, source, effect) {\r\n\t\t\tif (effect && effect.effectType === 'Move') {\r\n\t\t\t\tthis.boost({ atk: -length }, source);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Steorra\r\n\tghostlyhallow: {\r\n\t\tshortDesc: \"This Pok\u00E9mon can hit Normal types with Ghost-type moves.\",\r\n\t\tname: \"Ghostly Hallow\",\r\n\t\tonModifyMovePriority: -5,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (!move.ignoreImmunity) move.ignoreImmunity = {};\r\n\t\t\tif (move.ignoreImmunity !== true) {\r\n\t\t\t\tmove.ignoreImmunity['Ghost'] = true;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Struchni\r\n\toveraskedclause: {\r\n\t\tshortDesc: \"Moves used by opposing Pokemon on the previous turn will always fail.\",\r\n\t\tname: \"Overasked Clause\",\r\n\t\tonFoeBeforeMove(target, source, move) {\r\n\t\t\tif (target.lastMove && target.lastMove.id !== 'struggle') {\r\n\t\t\t\tif (move.id === target.lastMove.id) {\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\tthis.add('cant', target, 'ability: Overasked Clause', move, `[of] ${source}`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Sulo\r\n\tprotectionofthegelatin: {\r\n\t\tshortDesc: \"Magic Guard + Stamina\",\r\n\t\tname: \"Protection of the Gelatin\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagingHit(damage, target, source, effect) {\r\n\t\t\tthis.boost({ def: 1 });\r\n\t\t},\r\n\t},\r\n\r\n\t// Swiffix\r\n\tstinky: {\r\n\t\tdesc: \"10% chance to either poison or paralyze the target on hit.\",\r\n\t\tname: \"Stinky\",\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonModifyMove(move) {\r\n\t\t\tif (move.category !== \"Status\") {\r\n\t\t\t\tthis.debug('Adding Stinky psn/par');\r\n\t\t\t\tif (!move.secondaries) move.secondaries = [];\r\n\t\t\t\tmove.secondaries.push({\r\n\t\t\t\t\tchance: 10,\r\n\t\t\t\t\tonHit(target, source) {\r\n\t\t\t\t\t\tconst result = this.random(2);\r\n\t\t\t\t\t\tif (result === 0) {\r\n\t\t\t\t\t\t\ttarget.trySetStatus('par', source);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.trySetStatus('psn', source);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Tenshi\r\n\tsandsleuth: {\r\n\t\tdesc: \"Sets Gravity and identifies foes on switch-in. Priority immune from identified foes.\",\r\n\t\tname: \"Sand Sleuth\",\r\n\t\tonStart(target) {\r\n\t\t\tthis.field.addPseudoWeather('gravity', target);\r\n\t\t\tfor (const opponent of target.adjacentFoes()) {\r\n\t\t\t\tif (!opponent.volatiles['foresight']) {\r\n\t\t\t\t\topponent.addVolatile('foresight');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonFoeTryMove(target, source, move) {\r\n\t\t\tif (target.volatiles['foresight']) {\r\n\t\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\r\n\t\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst dazzlingHolder = this.effectState.target;\r\n\t\t\t\tif ((source.isAlly(dazzlingHolder) || move.target === 'all') && move.priority > 0.1) {\r\n\t\t\t\t\tthis.attrLastMove('[still]');\r\n\t\t\t\t\tthis.add('cant', target, 'ability: Sand Sleuth', move, `[of] ${source}`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Tico\r\n\teternalgenerator: {\r\n\t\tshortDesc: \"Regenerator + Magic Guard + immune to Sticky Web.\",\r\n\t\tname: \"Eternal Generator\",\r\n\t\tonSwitchOut(pokemon) {\r\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// TheJesucristoOsAma\r\n\tthegraceofjesuschrist: {\r\n\t\tshortDesc: \"Changes plates at the end of every turn.\",\r\n\t\tname: \"The Grace Of Jesus Christ\",\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst plates = this.dex.items.all().filter(item => item.onPlate && !item.zMove);\r\n\t\t\tconst item = this.sample(plates.filter(plate => this.toID(plate) !== this.toID(pokemon.item)));\r\n\t\t\tpokemon.item = '';\r\n\t\t\tthis.add('-item', pokemon, item, '[from] ability: The Grace Of Jesus Christ');\r\n\t\t\tpokemon.setItem(item);\r\n\t\t\tpokemon.formeChange(\"Arceus-\" + item.onPlate!, this.dex.abilities.get('thegraceofjesuschrist'), true);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// trace\r\n\teyesofeternity: {\r\n\t\tshortDesc: \"Moves used by/against this Pokemon always hit; only damaged by attacks.\",\r\n\t\tname: \"Eyes of Eternity\",\r\n\t\tonAnyInvulnerabilityPriority: 1,\r\n\t\tonAnyInvulnerability(target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\r\n\t\t},\r\n\t\tonAnyAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn accuracy;\r\n\t\t},\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.effectType !== 'Move') {\r\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Two of Roses\r\n\taswesee: {\r\n\t\tshortDesc: \"1x per turn: Stat gets boosted -> 75% chance to copy, 40% to raise another.\",\r\n\t\tdesc: \"Once per turn, when any active Pokemon has a stat boosted, this Pokemon has a 50% chance of copying it and a 15% chance to raise another random stat.\",\r\n\t\tname: \"As We See\",\r\n\t\tonFoeAfterBoost(boost, target, source, effect) { // Opportunist\r\n\t\t\tif (this.randomChance(3, 4)) {\r\n\t\t\t\tif (effect && ['As We See', 'Mirror Herb', 'Opportunist'].includes(effect.name)) return;\r\n\t\t\t\tconst pokemon = this.effectState.target;\r\n\t\t\t\tconst positiveBoosts: Partial<BoostsTable> = {};\r\n\t\t\t\tlet i: BoostID;\r\n\t\t\t\tfor (i in boost) {\r\n\t\t\t\t\tif (boost[i]! > 0) {\r\n\t\t\t\t\t\tpositiveBoosts[i] = boost[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (Object.keys(positiveBoosts).length < 1) return;\r\n\t\t\t\tthis.boost(positiveBoosts, pokemon);\r\n\t\t\t\tthis.effectState.triggered = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonResidual(target, source, effect) {\r\n\t\t\tif (this.randomChance(4, 10) && this.effectState.triggered) {\r\n\t\t\t\tconst stats: BoostID[] = [];\r\n\t\t\t\tconst boost: SparseBoostsTable = {};\r\n\t\t\t\tlet statPlus: BoostID;\r\n\t\t\t\tfor (statPlus in target.boosts) {\r\n\t\t\t\t\tif (statPlus === 'accuracy' || statPlus === 'evasion') continue;\r\n\t\t\t\t\tif (target.boosts[statPlus] < 6) {\r\n\t\t\t\t\t\tstats.push(statPlus);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst randomStat: BoostID | undefined = stats.length ? this.sample(stats) : undefined;\r\n\t\t\t\tif (randomStat) boost[randomStat] = 1;\r\n\t\t\t\tthis.boost(boost, target, target);\r\n\t\t\t}\r\n\t\t\tthis.effectState.triggered = false;\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// UT\r\n\tgaleguard: {\r\n\t\tshortDesc: \"Mountaineer + Fur Coat.\",\r\n\t\tname: \"Gale Guard\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect && effect.name === 'Stealth Rock') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (move.type === 'Rock' && !target.activeTurns) {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: Mountaineer');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonModifyDef(def) {\r\n\t\t\treturn this.chainModify(2);\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// umuwo\r\n\tsoulsurfer: {\r\n\t\tname: \"Soul Surfer\",\r\n\t\tshortDesc: \"Drizzle + Surge Surfer.\",\r\n\t\tonStart(source) {\r\n\t\t\tthis.field.setWeather('raindance');\r\n\t\t},\r\n\t\tonModifySpe(spe) {\r\n\t\t\tif (this.field.isTerrain('electricterrain')) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Valerian\r\n\tfullbloom: {\r\n\t\tshortDesc: \"This Pok\u00E9mon's priority moves have double power.\",\r\n\t\tname: \"Full Bloom\",\r\n\t\tonBasePowerPriority: 30,\r\n\t\tonBasePower(basePower, pokemon, target, move) {\r\n\t\t\tif (move.priority > 0) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Venous\r\n\tconcreteoverwater: {\r\n\t\tshortDesc: \"Gains +1 Defense and Sp. Def before getting hit by a super effective move.\",\r\n\t\tname: \"Concrete Over Water\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target === source || move.category === 'Status') return;\r\n\t\t\tif (target.runEffectiveness(move) > 0) {\r\n\t\t\t\tthis.boost({ def: 1, spd: 1 }, target);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Violet\r\n\tseenoevilhearnoevilspeaknoevil: {\r\n\t\tshortDesc: \"Dark immune; Cornerstone: Sound immune. Wellspring: Moves never miss. Hearthflame: 1.3x BP vs male.\",\r\n\t\tdesc: \"This Pokemon is immune to Dark-type attacks. If this Pokemon is Ogerpon-Cornerstone, it is immune to sound moves. If this Pokemon is Ogerpon-Wellspring, its moves will never miss. If this Pokemon is Ogerpon-Hearthflame, its damage against male targets is multiplied by 1.3x.\",\r\n\t\tname: \"See No Evil, Hear No Evil, Speak No Evil\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.flags['sound'] && target.species.id.startsWith('ogerponcornerstone')) {\r\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: See No Evil, Hear No Evil, Speak No Evil');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== source && move.type === 'Dark') {\r\n\t\t\t\tthis.add('-immune', target, '[from] ability: See No Evil, Hear No Evil, Speak No Evil');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceAccuracy(accuracy, target, source, move) {\r\n\t\t\tif (!source.species.id.startsWith('ogerponwellspring')) return;\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (!source.species.id.startsWith('ogerponwellspring')) return;\r\n\t\t\tif (typeof move.accuracy === 'number' && move.accuracy < 100) {\r\n\t\t\t\tthis.debug('neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonBasePowerPriority: 24,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (!attacker.species.id.startsWith('ogerponhearthflame')) return;\r\n\t\t\tif (defender.gender === 'M') {\r\n\t\t\t\tthis.debug('attack boost');\r\n\t\t\t\treturn this.chainModify(1.3);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Vistar\r\n\tvirtualidol: {\r\n\t\tshortDesc: \"Dancer + Punk Rock.\",\r\n\t\tname: \"Virtual Idol\",\r\n\t\tonBasePowerPriority: 7,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.debug('Punk Rock boost');\r\n\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (move.flags['sound']) {\r\n\t\t\t\tthis.debug('Punk Rock weaken');\r\n\t\t\t\treturn this.chainModify(0.5);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// vmnunes\r\n\twildgrowth: {\r\n\t\tshortDesc: \"Attacking moves also inflict Leech Seed on the target.\",\r\n\t\tname: \"Wild Growth\",\r\n\t\tonModifyMovePriority: -1,\r\n\t\tonAfterMove(source, target, move) {\r\n\t\t\tif (target.hasType('Grass') || target.hasAbility('Sap Sipper') || !move.hit || target === source) return null;\r\n\t\t\ttarget.addVolatile('leechseed', source);\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// WarriorGallade\r\n\tprimevalharvest: {\r\n\t\tshortDesc: \"Sun: Heal 1/8 max HP, random berry if no item. Else 50% random berry if no item.\",\r\n\t\tdesc: \"In Sun, the user restores 1/8th of its maximum HP at the end of the turn and has a 100% chance to get a random berry if it has no item. Outside of sun, there is a 50% chance to get a random berry. Berry given will be one of: Cheri, Chesto, Pecha, Lum, Aguav, Liechi, Ganlon, Petaya, Apicot, Salac, Micle, Lansat, Enigma, Custap, Kee or Maranga.\",\r\n\t\tname: \"Primeval Harvest\",\r\n\t\tonResidualOrder: 28,\r\n\t\tonResidualSubOrder: 2,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tconst isSunny = this.field.isWeather(['sunnyday', 'desolateland']);\r\n\t\t\tif (isSunny) {\r\n\t\t\t\tthis.heal(pokemon.baseMaxhp / 8, pokemon, pokemon, pokemon.getAbility());\r\n\t\t\t}\r\n\t\t\tif (isSunny || this.randomChance(1, 2)) {\r\n\t\t\t\tif (pokemon.hp && !pokemon.item) {\r\n\t\t\t\t\tconst berry = this.sample([\r\n\t\t\t\t\t\t'cheri', 'chesto', 'pecha', 'lum', 'aguav', 'liechi', 'ganlon', 'petaya',\r\n\t\t\t\t\t\t'apicot', 'salac', 'micle', 'lansat', 'enigma', 'custap', 'kee', 'maranga',\r\n\t\t\t\t\t]) + 'berry';\r\n\t\t\t\t\tpokemon.setItem(berry);\r\n\t\t\t\t\tpokemon.lastItem = '';\r\n\t\t\t\t\tthis.add('-item', pokemon, pokemon.getItem(), '[from] ability: Primeval Harvest');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// WigglyTree\r\n\ttreestance: {\r\n\t\tshortDesc: \"Rock Head + Filter.\",\r\n\t\tname: \"Tree Stance\",\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (effect.id === 'recoil') {\r\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\r\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSourceModifyDamage(damage, source, target, move) {\r\n\t\t\tif (target.getMoveHitData(move).typeMod > 0) {\r\n\t\t\t\tthis.debug('Tree Stance neutralize');\r\n\t\t\t\treturn this.chainModify(0.75);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// xy01\r\n\tpanic: {\r\n\t\tshortDesc: \"Lowers the foe's Atk and Sp. Atk by 1 upon switch-in.\",\r\n\t\tname: \"Panic\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Panic', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.boost({ atk: -1, spa: -1 }, target, pokemon, null, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// Yellow Paint\r\n\tyellowmagic: {\r\n\t\tshortDesc: \"+25% HP, +1 SpA, +1 Spe, Charge, or paralyzes attacker when hit by an Electric move; Electric immunity.\",\r\n\t\tdesc: \"This Pokemon is immune to Electric type moves. When this Pokemon is hit by one, it either: restores 25% of its maximum HP, boosts its Special Attack by 1 stage, boosts its Speed by 1 stage, gains the Charge effect, or paralyzes the attacker.\",\r\n\t\tname: \"Yellow Magic\",\r\n\t\tonTryHit(target, source, move) {\r\n\t\t\tif (target !== source && move.type === 'Electric') {\r\n\t\t\t\tlet didSomething = false;\r\n\t\t\t\tswitch (this.random(5)) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tdidSomething = !!this.heal(target.baseMaxhp / 4);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tdidSomething = !!this.boost({ spa: 1 }, target, target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tdidSomething = !!this.boost({ spe: 1 }, target, target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tif (!target.volatiles['charge']) {\r\n\t\t\t\t\t\tthis.add('-ability', target, 'Yellow Magic');\r\n\t\t\t\t\t\ttarget.addVolatile('charge', target);\r\n\t\t\t\t\t\tdidSomething = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tdidSomething = source.trySetStatus('par', target);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (!didSomething) {\r\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Yellow Magic');\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// yeet dab xd\r\n\ttreasurebag: {\r\n\t\tshortDesc: \"At the end of the turn and when top kek is used, use one Treasure Bag item in the cycle.\",\r\n\t\tdesc: \"At the end of each turn and when top kek is used, one of the following effects will occur, starting at the top and moving to the next item for each use of Treasure Bag: Deal 50 HP of damage to the foe, heal the user for 100 HP, paralyze the foe, set Aurora Veil for 5 turns, or grant the user a permanent Reviver Seed condition that causes it to revive to 50% upon reaching 0 HP once. If the Reviver Seed effect is set, all future cycles will replace that effect with a no-effect Reviser Seed item. The state of the cycle persists if the Pokemon switches out and back in.\",\r\n\t\tname: \"Treasure Bag\",\r\n\t\tonStart(target) {\r\n\t\t\tthis.add('-ability', target, 'Treasure Bag');\r\n\t\t\ttarget.addVolatile('treasurebag');\r\n\t\t},\r\n\t\tonResidual(target, source, effect) {\r\n\t\t\tif (!target.volatiles['treasurebag']) target.addVolatile('treasurebag');\r\n\t\t},\r\n\t\tcondition: {\r\n\t\t\tonStart(pokemon, source, sourceEffect) {\r\n\t\t\t\tif (!pokemon.m.bag) {\r\n\t\t\t\t\tpokemon.m.bag = ['Blast Seed', 'Oran Berry', 'Petrify Orb', 'Luminous Orb', 'Reviver Seed'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon, source, effect) {\r\n\t\t\t\tif (!pokemon.m.bag) {\r\n\t\t\t\t\tpokemon.m.bag = ['Blast Seed', 'Oran Berry', 'Petrify Orb', 'Luminous Orb', 'Reviver Seed'];\r\n\t\t\t\t}\r\n\t\t\t\tconst currentItem = pokemon.m.bag.shift();\r\n\t\t\t\tconst foe = pokemon.foes()[0];\r\n\t\t\t\tswitch (currentItem) {\r\n\t\t\t\tcase 'Blast Seed':\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} dug through its Treasure Bag and found a ${currentItem}!`);\r\n\t\t\t\t\tif (foe) {\r\n\t\t\t\t\t\tthis.damage(50, foe, pokemon, this.effect);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-message', `But there was no target!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Oran Berry':\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} dug through its Treasure Bag and found an ${currentItem}!`);\r\n\t\t\t\t\tthis.heal(100, pokemon, pokemon, this.dex.items.get('Oran Berry'));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Petrify Orb':\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} dug through its Treasure Bag and found a ${currentItem}!`);\r\n\t\t\t\t\tif (foe?.trySetStatus('par', pokemon, this.effect)) {\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} petrified ${foe.name}`);\r\n\t\t\t\t\t} else if (!foe) {\r\n\t\t\t\t\t\tthis.add('-message', `But there was no target!`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-message', `But it failed!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Luminous Orb':\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} dug through its Treasure Bag and found a ${currentItem}!`);\r\n\t\t\t\t\tif (!pokemon.side.addSideCondition('auroraveil', pokemon, this.effect)) {\r\n\t\t\t\t\t\tthis.add('-message', `But it failed!`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// Handled separately\r\n\t\t\t\tcase 'Reviver Seed':\r\n\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\tthis.add('-message', `${pokemon.name} dug through its Treasure Bag and found a Reviver Seed!`);\r\n\t\t\t\t\tpokemon.m.seedActive = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tpokemon.m.bag = [...pokemon.m.bag, currentItem];\r\n\t\t\t},\r\n\t\t\tonAfterMoveSecondarySelf(source, target, move) {\r\n\t\t\t\tif (move.id !== 'topkek') return;\r\n\t\t\t\tif (!source.m.bag) {\r\n\t\t\t\t\tsource.m.bag = ['Blast Seed', 'Oran Berry', 'Petrify Orb', 'Luminous Orb', 'Reviver Seed'];\r\n\t\t\t\t}\r\n\t\t\t\tconst currentItem = source.m.bag.shift();\r\n\t\t\t\tthis.add('-message', `${source.name} cycled its treasure bag!`);\r\n\t\t\t\tsource.m.bag = [...source.m.bag, currentItem];\r\n\t\t\t},\r\n\t\t\tonDamage(damage, pokemon, source, effect) {\r\n\t\t\t\tif (damage >= pokemon.hp && pokemon.m.seedActive) {\r\n\t\t\t\t\tif (!pokemon.m.reviverSeedTriggered) {\r\n\t\t\t\t\t\t// Can't set hp to 0 because it causes visual bugs\r\n\t\t\t\t\t\tpokemon.hp = 1;\r\n\t\t\t\t\t\tthis.add('-damage', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} dug through its Treasure Bag and found a Reviver Seed!`);\r\n\t\t\t\t\t\tpokemon.m.reviverSeedTriggered = true;\r\n\t\t\t\t\t\tpokemon.hp = Math.floor(pokemon.maxhp / 2);\r\n\t\t\t\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} was revived!`);\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.add('-activate', pokemon, 'ability: Treasure Bag');\r\n\t\t\t\t\t\tthis.add('-message', `${pokemon.name} was revived!`);\r\n\t\t\t\t\t\tthis.add('-message', `...thought it was the right one...`);\r\n\t\t\t\t\t\tthis.add('-message', `...looking closer, this is...`);\r\n\t\t\t\t\t\tthis.add('-message', `Not a Reviver Seed, but a Reviser Seed!`);\r\n\t\t\t\t\t\tthis.add(`c:|${getName('yeet dab xd')}|An \"s\"?`);\r\n\t\t\t\t\t\tthis.add('-message', `that wasn't a \"v\", but an \"s\"!`);\r\n\t\t\t\t\t\tthis.add('-message', `yeet dab xd burst into spontaneous laughter and fainted!`);\r\n\t\t\t\t\t\treturn damage;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t// yuki\r\n\tpartyup: {\r\n\t\tshortDesc: \"On switch-in, this Pokemon's ability is replaced with a random teammate's ability.\",\r\n\t\tname: \"Party Up\",\r\n\t\tonStart(target) {\r\n\t\t\tconst abilities = target.side.pokemon.map(x => x.getAbility()).filter(x => !x.flags['notrace']);\r\n\t\t\tif (!abilities.length) return;\r\n\t\t\tthis.add('-ability', target, 'Party Up');\r\n\t\t\ttarget.setAbility(this.sample(abilities), target);\r\n\t\t\tthis.add('-ability', target, target.getAbility().name);\r\n\t\t},\r\n\t\tflags: { notrace: 1 },\r\n\t},\r\n\r\n\t// YveltalNL\r\n\theightadvantage: {\r\n\t\tshortDesc: \"If this Pokemon's height is more than that of the foe, -1 to foe's Attack/Sp. Atk.\",\r\n\t\tname: \"Height Advantage\",\r\n\t\tonStart(pokemon) {\r\n\t\t\tlet activated = false;\r\n\t\t\tfor (const target of pokemon.adjacentFoes()) {\r\n\t\t\t\tif (!activated) {\r\n\t\t\t\t\tthis.add('-ability', pokemon, 'Height Advantage', 'boost');\r\n\t\t\t\t\tactivated = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['substitute']) {\r\n\t\t\t\t\tthis.add('-immune', target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.dex.species.get(pokemon.species).heightm > this.dex.species.get(target.species).heightm) {\r\n\t\t\t\t\t\tthis.boost({ atk: -1, spa: -1 }, target, pokemon, null, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: {},\r\n\t},\r\n\r\n\t// za\r\n\ttroll: {\r\n\t\tshortDesc: \"Using moves that can flinch makes user move first in their priority bracket.\",\r\n\t\tname: \"Troll\",\r\n\t\tonFractionalPriority(priority, pokemon, target, move) {\r\n\t\t\tif (move?.secondaries?.some(m => m.volatileStatus === 'flinch')) {\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Troll');\r\n\t\t\t\treturn 0.1;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t// Zarel\r\n\ttempochange: {\r\n\t\tshortDesc: \"Switches Meloetta's forme between Aria and Pirouette at the end of each turn.\",\r\n\t\tname: \"Tempo Change\",\r\n\t\tonResidualOrder: 29,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.species.baseSpecies !== 'Meloetta') return;\r\n\t\t\tif (pokemon.species.name === 'Meloetta') {\r\n\t\t\t\tchangeSet(this, pokemon, ssbSets['Zarel-Pirouette'], true);\r\n\t\t\t} else {\r\n\t\t\t\tchangeSet(this, pokemon, ssbSets['Zarel'], true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tflags: { failroleplay: 1, noreceiver: 1, noentrain: 1, notrace: 1, failskillswap: 1, notransform: 1 },\r\n\t},\r\n\r\n\t// zoro\r\n\tninelives: {\r\n\t\tshortDesc: \"Twice per battle, this Pokemon will survive a lethal hit with 1 HP remaining, regardless of HP.\",\r\n\t\tname: \"Nine Lives\",\r\n\t\tonTryHit(pokemon, target, move) {\r\n\t\t\tif (move.ohko) {\r\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Nine Lives');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonDamagePriority: -30,\r\n\t\tonDamage(damage, target, source, effect) {\r\n\t\t\tif (damage >= target.hp && effect?.effectType === 'Move' && !this.effectState.busted) {\r\n\t\t\t\tthis.add('-ability', target, 'Nine Lives');\r\n\t\t\t\tif (this.effectState.busted === 0) {\r\n\t\t\t\t\tthis.effectState.busted = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.effectState.busted = 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn target.hp - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Yes, this looks very patchwork-y. declaring new persistent global variables seems to be a no-go here\r\n\t\t// so i repurposed one which should likely not affect anything else - have tested with clerica/zoro on both sides\r\n\t\t// and their disguise/sturdy state is unaffected by modifying anything here. but let wg know if this breaks stuff.\r\n\t\tflags: { breakable: 1 },\r\n\t},\r\n\r\n\t// Modified abilities\r\n\tbaddreams: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (!pokemon.hp) return;\r\n\t\t\tfor (const target of pokemon.foes()) {\r\n\t\t\t\tif (target.status === 'slp' || target.hasAbility(['comatose', 'mensiscage'])) {\r\n\t\t\t\t\tthis.damage(target.baseMaxhp / 8, target, pokemon);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tdeltastream: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (this.field.getWeather().id === 'deltastream' && !STRONG_WEATHERS.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tdesolateland: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (this.field.getWeather().id === 'desolateland' && !STRONG_WEATHERS.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\tdryskin: {\r\n\t\tinherit: true,\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea' || effect.id === 'stormsurge') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\r\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\r\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tforecast: {\r\n\t\tinherit: true,\r\n\t\tonWeatherChange(pokemon) {\r\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Castform' || pokemon.transformed) return;\r\n\t\t\tlet forme = null;\r\n\t\t\tswitch (pokemon.effectiveWeather()) {\r\n\t\t\tcase 'sunnyday':\r\n\t\t\tcase 'desolateland':\r\n\t\t\t\tif (pokemon.species.id !== 'castformsunny') forme = 'Castform-Sunny';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raindance':\r\n\t\t\tcase 'primordialsea':\r\n\t\t\tcase 'stormsurge':\r\n\t\t\t\tif (pokemon.species.id !== 'castformrainy') forme = 'Castform-Rainy';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hail':\r\n\t\t\tcase 'snowscape':\r\n\t\t\t\tif (pokemon.species.id !== 'castformsnowy') forme = 'Castform-Snowy';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (pokemon.species.id !== 'castform') forme = 'Castform';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (pokemon.isActive && forme) {\r\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '0', '[msg]');\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\thydration: {\r\n\t\tinherit: true,\r\n\t\tonResidual(pokemon) {\r\n\t\t\tif (pokemon.status && ['raindance', 'primordialsea', 'stormsurge'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\tthis.debug('hydration');\r\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Hydration');\r\n\t\t\t\tpokemon.cureStatus();\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tneutralizinggas: {\r\n\t\tinherit: true,\r\n\t\tonSwitchIn(pokemon) {\r\n\t\t\tthis.add('-ability', pokemon, 'Neutralizing Gas');\r\n\t\t\tpokemon.abilityState.ending = false;\r\n\t\t\tfor (const target of this.getAllActive()) {\r\n\t\t\t\tif (target.hasItem('Ability Shield')) {\r\n\t\t\t\t\tthis.add('-block', target, 'item: Ability Shield');\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// Can't suppress a Tatsugiri inside of Dondozo already\r\n\t\t\t\tif (target.volatiles['commanding']) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (target.illusion) {\r\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get('Illusion'), target.abilityState, target, pokemon, 'neutralizinggas');\r\n\t\t\t\t}\r\n\t\t\t\tif (target.volatiles['slowstart']) {\r\n\t\t\t\t\tdelete target.volatiles['slowstart'];\r\n\t\t\t\t\tthis.add('-end', target, 'Slow Start', '[silent]');\r\n\t\t\t\t}\r\n\t\t\t\tif (STRONG_WEATHERS.includes(target.getAbility().id)) {\r\n\t\t\t\t\tthis.singleEvent('End', this.dex.abilities.get(target.getAbility().id), target.abilityState, target, pokemon, 'neutralizinggas');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tovercoat: {\r\n\t\tinherit: true,\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm' || type === 'deserteddunes' || type === 'hail' || type === 'powder') return false;\r\n\t\t},\r\n\t},\r\n\tprimordialsea: {\r\n\t\tinherit: true,\r\n\t\tonAnySetWeather(target, source, weather) {\r\n\t\t\tif (this.field.getWeather().id === 'primordialsea' && !STRONG_WEATHERS.includes(weather.id)) return false;\r\n\t\t},\r\n\t},\r\n\traindish: {\r\n\t\tinherit: true,\r\n\t\tonWeather(target, source, effect) {\r\n\t\t\tif (target.hasItem('utilityumbrella')) return;\r\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea' || effect.id === 'stormsurge') {\r\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tsandforce: {\r\n\t\tinherit: true,\r\n\t\tonBasePower(basePower, attacker, defender, move) {\r\n\t\t\tif (this.field.isWeather(['sandstorm', 'deserteddunes'])) {\r\n\t\t\t\tif (move.type === 'Rock' || move.type === 'Ground' || move.type === 'Steel') {\r\n\t\t\t\t\tthis.debug('Sand Force boost');\r\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm' || type === 'deserteddunes') return false;\r\n\t\t},\r\n\t},\r\n\tsandrush: {\r\n\t\tinherit: true,\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (this.field.isWeather(['sandstorm', 'deserteddunes'])) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm' || type === 'deserteddunes') return false;\r\n\t\t},\r\n\t},\r\n\tsandveil: {\r\n\t\tinherit: true,\r\n\t\tonImmunity(type, pokemon) {\r\n\t\t\tif (type === 'sandstorm' || type === 'deserteddunes') return false;\r\n\t\t},\r\n\t\tonModifyAccuracy(accuracy) {\r\n\t\t\tif (typeof accuracy !== 'number') return;\r\n\t\t\tif (this.field.isWeather(['sandstorm', 'deserteddunes'])) {\r\n\t\t\t\tthis.debug('Sand Veil - decreasing accuracy');\r\n\t\t\t\treturn this.chainModify([3277, 4096]);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\tswiftswim: {\r\n\t\tinherit: true,\r\n\t\tonModifySpe(spe, pokemon) {\r\n\t\t\tif (['raindance', 'primordialsea', 'stormsurge'].includes(pokemon.effectiveWeather())) {\r\n\t\t\t\treturn this.chainModify(2);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": ["target", "item"]
}
