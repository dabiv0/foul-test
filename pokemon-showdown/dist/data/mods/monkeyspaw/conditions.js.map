{
  "version": 3,
  "sources": ["../../../../data/mods/monkeyspaw/conditions.ts"],
  "sourcesContent": ["export const Conditions: import('../../../sim/dex-conditions').ModdedConditionDataTable = {\r\n\tmonkeyspaw: {\r\n\t\tname: \"Monkey's Paw\",\r\n\t},\r\n\tconfusion: {\r\n\t\tinherit: true,\r\n\t\tname: 'confusion',\r\n\t\t// this is a volatile status\r\n\t\tonStart(target, source, sourceEffect) {\r\n\t\t\tif (sourceEffect?.id === 'lockedmove') {\r\n\t\t\t\tthis.add('-start', target, 'confusion', '[fatigue]');\r\n\t\t\t} else if (sourceEffect?.effectType === 'Ability') {\r\n\t\t\t\tthis.add('-start', target, 'confusion', '[from] ability: ' + sourceEffect.name, `[of] ${source}`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.add('-start', target, 'confusion');\r\n\t\t\t}\r\n\t\t\tconst min = sourceEffect?.id === 'axekick' ? 3 : 2;\r\n\t\t\tif (!target.m.monkeyPawLuck) this.effectState.time = this.random(min, 6);\r\n\t\t},\r\n\t\tonEnd(target) {\r\n\t\t\tthis.add('-end', target, 'confusion');\r\n\t\t},\r\n\t\tonBeforeMovePriority: 3,\r\n\t\tonBeforeMove(pokemon) {\r\n\t\t\tif (pokemon.m.monkeyPawLuck) pokemon.volatiles['confusion'].time--;\r\n\t\t\tif (!pokemon.volatiles['confusion'].time && !pokemon.m.monkeyPawLuck) {\r\n\t\t\t\tpokemon.removeVolatile('confusion');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.add('-activate', pokemon, 'confusion');\r\n\t\t\tif (!this.randomChance(33, 100)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.activeTarget = pokemon;\r\n\t\t\tconst damage = this.actions.getConfusionDamage(pokemon, 40);\r\n\t\t\tif (typeof damage !== 'number') throw new Error(\"Confusion damage not dealt\");\r\n\t\t\tconst activeMove = { id: this.toID('confused'), effectType: 'Move', type: '???' };\r\n\t\t\tthis.damage(damage, pokemon, pokemon, activeMove as ActiveMove);\r\n\t\t\treturn false;\r\n\t\t},\r\n\t},\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,aAA6E;AAAA,EACzF,YAAY;AAAA,IACX,MAAM;AAAA,EACP;AAAA,EACA,WAAW;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA;AAAA,IAEN,QAAQ,QAAQ,QAAQ,cAAc;AACrC,UAAI,cAAc,OAAO,cAAc;AACtC,aAAK,IAAI,UAAU,QAAQ,aAAa,WAAW;AAAA,MACpD,WAAW,cAAc,eAAe,WAAW;AAClD,aAAK,IAAI,UAAU,QAAQ,aAAa,qBAAqB,aAAa,MAAM,QAAQ,MAAM,EAAE;AAAA,MACjG,OAAO;AACN,aAAK,IAAI,UAAU,QAAQ,WAAW;AAAA,MACvC;AACA,YAAM,MAAM,cAAc,OAAO,YAAY,IAAI;AACjD,UAAI,CAAC,OAAO,EAAE,cAAe,MAAK,YAAY,OAAO,KAAK,OAAO,KAAK,CAAC;AAAA,IACxE;AAAA,IACA,MAAM,QAAQ;AACb,WAAK,IAAI,QAAQ,QAAQ,WAAW;AAAA,IACrC;AAAA,IACA,sBAAsB;AAAA,IACtB,aAAa,SAAS;AACrB,UAAI,QAAQ,EAAE,cAAe,SAAQ,UAAU,WAAW,EAAE;AAC5D,UAAI,CAAC,QAAQ,UAAU,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,eAAe;AACrE,gBAAQ,eAAe,WAAW;AAClC;AAAA,MACD;AACA,WAAK,IAAI,aAAa,SAAS,WAAW;AAC1C,UAAI,CAAC,KAAK,aAAa,IAAI,GAAG,GAAG;AAChC;AAAA,MACD;AACA,WAAK,eAAe;AACpB,YAAM,SAAS,KAAK,QAAQ,mBAAmB,SAAS,EAAE;AAC1D,UAAI,OAAO,WAAW,SAAU,OAAM,IAAI,MAAM,4BAA4B;AAC5E,YAAM,aAAa,EAAE,IAAI,KAAK,KAAK,UAAU,GAAG,YAAY,QAAQ,MAAM,MAAM;AAChF,WAAK,OAAO,QAAQ,SAAS,SAAS,UAAwB;AAC9D,aAAO;AAAA,IACR;AAAA,EACD;AACD;",
  "names": []
}
