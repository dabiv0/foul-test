{
  "version": 3,
  "sources": ["../../../../data/mods/gen7letsgo/scripts.ts"],
  "sourcesContent": ["function checkMegaForme(species: Species, forme: string, battle: Battle) {\r\n\tconst baseSpecies = battle.dex.species.get(species.baseSpecies);\r\n\tconst altForme = battle.dex.species.get(`${baseSpecies.name}-${forme}`);\r\n\tif (\r\n\t\taltForme.exists && !battle.ruleTable.isBannedSpecies(altForme) &&\r\n\t\t!battle.ruleTable.isBanned('pokemontag:mega')\r\n\t) {\r\n\t\treturn altForme.name;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nexport const Scripts: ModdedBattleScriptsData = {\r\n\tinherit: 'gen7',\r\n\tinit() {\r\n\t\tthis.modData('Abilities', 'noability').isNonstandard = null;\r\n\t\tfor (const i in this.data.Pokedex) {\r\n\t\t\tthis.modData('Pokedex', i).abilities = { 0: 'No Ability' };\r\n\t\t\tdelete this.modData('Pokedex', i).requiredItem;\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\tinherit: true,\r\n\t\tcanMegaEvo(pokemon) {\r\n\t\t\treturn checkMegaForme(pokemon.baseSpecies, 'Mega', this.battle);\r\n\t\t},\r\n\t\tcanMegaEvoX(pokemon) {\r\n\t\t\treturn checkMegaForme(pokemon.baseSpecies, 'Mega-X', this.battle);\r\n\t\t},\r\n\t\tcanMegaEvoY(pokemon) {\r\n\t\t\treturn checkMegaForme(pokemon.baseSpecies, 'Mega-Y', this.battle);\r\n\t\t},\r\n\t\trunMegaEvo(pokemon) {\r\n\t\t\tconst speciesid = pokemon.canMegaEvo || pokemon.canMegaEvoX || pokemon.canMegaEvoY;\r\n\t\t\tif (!speciesid) return false;\r\n\r\n\t\t\tpokemon.formeChange(speciesid, null, true);\r\n\t\t\tthis.battle.add('-mega', pokemon, this.dex.species.get(speciesid).baseSpecies);\r\n\t\t\tpokemon.formeRegression = true;\r\n\r\n\t\t\t// Limit one mega evolution\r\n\t\t\tfor (const ally of pokemon.side.pokemon) {\r\n\t\t\t\tally.canMegaEvo = null;\r\n\t\t\t\tally.canMegaEvoX = null;\r\n\t\t\t\tally.canMegaEvoY = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.battle.runEvent('AfterMega', pokemon);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\trunMegaEvoX(pokemon) {\r\n\t\t\tif (!pokemon.canMegaEvoX) return false;\r\n\t\t\tpokemon.canMegaEvoY = null;\r\n\t\t\treturn this.runMegaEvo(pokemon);\r\n\t\t},\r\n\t\trunMegaEvoY(pokemon) {\r\n\t\t\tif (!pokemon.canMegaEvoY) return false;\r\n\t\t\tpokemon.canMegaEvoX = null;\r\n\t\t\treturn this.runMegaEvo(pokemon);\r\n\t\t},\r\n\t},\r\n\t/**\r\n\t * Given a table of base stats and a pokemon set, return the actual stats.\r\n\t */\r\n\tspreadModify(baseStats, set) {\r\n\t\tconst modStats: StatsTable = { hp: 10, atk: 10, def: 10, spa: 10, spd: 10, spe: 10 };\r\n\t\tlet statName: StatID;\r\n\t\tfor (statName in modStats) {\r\n\t\t\tconst stat = baseStats[statName];\r\n\t\t\tmodStats[statName] = Math.floor((Math.floor(2 * stat + set.ivs[statName]) * set.level / 100 + 5));\r\n\t\t}\r\n\t\tif ('hp' in baseStats) {\r\n\t\t\tconst stat = baseStats['hp'];\r\n\t\t\tmodStats['hp'] = Math.floor(Math.floor(2 * stat + set.ivs['hp'] + 100) * set.level / 100 + 10);\r\n\t\t}\r\n\t\treturn this.natureModify(modStats, set);\r\n\t},\r\n\r\n\t/**\r\n\t * @param {StatsTable} stats\r\n\t * @param {PokemonSet} set\r\n\t * @return {StatsTable}\r\n\t */\r\n\tnatureModify(stats, set) {\r\n\t\tconst nature = this.dex.natures.get(set.nature);\r\n\t\tif (nature.plus) stats[nature.plus] = Math.floor(stats[nature.plus] * 1.1);\r\n\t\tif (nature.minus) stats[nature.minus] = Math.floor(stats[nature.minus] * 0.9);\r\n\t\tset.happiness = 70;\r\n\t\tconst friendshipValue = Math.floor((set.happiness / 255 / 10 + 1) * 100);\r\n\t\tlet stat: StatID;\r\n\t\tfor (stat in stats) {\r\n\t\t\tif (stat !== 'hp') {\r\n\t\t\t\tstats[stat] = Math.floor(stats[stat] * friendshipValue / 100);\r\n\t\t\t}\r\n\t\t\tstats[stat] += set.evs[stat];\r\n\t\t}\r\n\t\treturn stats;\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
