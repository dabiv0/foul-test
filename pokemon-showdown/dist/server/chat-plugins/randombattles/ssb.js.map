{
  "version": 3,
  "sources": ["../../../../server/chat-plugins/randombattles/ssb.tsx"],
  "sourcesContent": ["import { type SSBSet, ssbSets } from \"../../../data/mods/gen9ssb/random-teams\";\r\nimport { formatNature, STAT_NAMES } from \".\";\r\n\r\nclass SSBSetHTML extends Chat.JSX.Component<{ set: SSBSet, dex: ModdedDex, baseDex: ModdedDex }> {\r\n\trender() {\r\n\t\tconst { set, dex, baseDex } = this.props;\r\n\t\tif (set.skip) {\r\n\t\t\tconst baseSet = toID(Object.values(ssbSets[set.skip]).join());\r\n\t\t\tconst skipSet = toID(Object.values(set).join()).slice(0, -toID(set.skip).length);\r\n\t\t\tif (baseSet === skipSet) return null;\r\n\t\t}\r\n\t\tconst sigMove = baseDex.moves.get(set.signatureMove);\r\n\t\treturn <details><summary>Set</summary>\r\n\t\t\t<ul style={{ listStyleType: 'none' }}>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t{set.species}{set.gender && <> ({set.gender})</>}\r\n\t\t\t\t\t{set.item && ' @ '}\r\n\t\t\t\t\t{Array.isArray(set.item) ? set.item.map(x => dex.items.get(x).name).join(' / ') :\r\n\t\t\t\t\tset.item && dex.items.get(set.item).name}\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>Ability: {Array.isArray(set.ability) ?\r\n\t\t\t\t\tset.ability.map(x => dex.abilities.get(x).name).join(' / ') : dex.abilities.get(set.ability).name}</li>\r\n\t\t\t\t{set.teraType &&\r\n\t\t\t\t\t<li>Tera Type: {Array.isArray(set.teraType) ?\r\n\t\t\t\t\t\tset.teraType.map(x => dex.types.get(x).name).join(' / ') :\r\n\t\t\t\t\t\tset.teraType === 'Any' ? 'Any' : dex.types.get(set.teraType).name}</li>}\r\n\t\t\t\t{set.shiny &&\r\n\t\t\t\t\t<li>Shiny: {typeof set.shiny === 'number' ? `1 in ${set.shiny} chance` : `Yes`}</li>}\r\n\t\t\t\t{set.evs && <li>EVs: {Object.entries(set.evs).filter(v => !!v[1]).map(([statid, ev], idx, arr) => (\r\n\t\t\t\t\t<>{ev} {STAT_NAMES[statid]}{idx !== arr.length - 1 && ' / '}</>\r\n\t\t\t\t))}</li>}\r\n\t\t\t\t{set.nature && <li>{Array.isArray(set.nature) ?\r\n\t\t\t\t\tset.nature.map(formatNature).join(\" / \") : formatNature(set.nature)} Nature</li>}\r\n\t\t\t\t{set.ivs && <li>IVs: {Object.entries(set.ivs).filter(v => v[1] !== 31).map(([statid, iv], idx, arr) => (\r\n\t\t\t\t\t<>{iv} {STAT_NAMES[statid]}{idx !== arr.length - 1 && ' / '}</>\r\n\t\t\t\t))}</li>}\r\n\t\t\t\t{set.moves.map(moveid => (\r\n\t\t\t\t\t<li>- {Array.isArray(moveid) ? moveid.map(x => dex.moves.get(x).name).join(\" / \") : dex.moves.get(moveid).name}</li>)\r\n\t\t\t\t)}\r\n\t\t\t\t<li>- {!sigMove.exists ? <i>{sigMove.name}</i> : sigMove.name}</li>\r\n\t\t\t</ul>\r\n\t\t</details>;\r\n\t}\r\n}\r\n\r\nclass SSBMoveHTML extends Chat.JSX.Component<{ sigMove: Move, dex: ModdedDex }> {\r\n\trender() {\r\n\t\tconst { sigMove, dex } = this.props;\r\n\t\tconst details: { [k: string]: string } = {\r\n\t\t\tPriority: String(sigMove.priority),\r\n\t\t\tGen: String(sigMove.gen || 9),\r\n\t\t};\r\n\r\n\t\tif (sigMove.isNonstandard === \"Past\" && dex.gen >= 8) details[\"Past Gens Only\"] = \"x\";\r\n\t\tif (sigMove.secondary || sigMove.secondaries || sigMove.hasSheerForce) details[\"Boosted by Sheer Force\"] = \"\";\r\n\t\tif (sigMove.flags['contact'] && dex.gen >= 3) details[\"Contact\"] = \"\";\r\n\t\tif (sigMove.flags['sound'] && dex.gen >= 3) details[\"Sound\"] = \"\";\r\n\t\tif (sigMove.flags['bullet'] && dex.gen >= 6) details[\"Bullet\"] = \"\";\r\n\t\tif (sigMove.flags['pulse'] && dex.gen >= 6) details[\"Pulse\"] = \"\";\r\n\t\tif (!sigMove.flags['protect'] && sigMove.target !== 'self') details[\"Bypasses Protect\"] = \"\";\r\n\t\tif (sigMove.flags['bypasssub']) details[\"Bypasses Substitutes\"] = \"\";\r\n\t\tif (sigMove.flags['defrost']) details[\"Thaws user\"] = \"\";\r\n\t\tif (sigMove.flags['bite'] && dex.gen >= 6) details[\"Bite\"] = \"\";\r\n\t\tif (sigMove.flags['punch'] && dex.gen >= 4) details[\"Punch\"] = \"\";\r\n\t\tif (sigMove.flags['powder'] && dex.gen >= 6) details[\"Powder\"] = \"\";\r\n\t\tif (sigMove.flags['reflectable'] && dex.gen >= 3) details[\"Bounceable\"] = \"\";\r\n\t\tif (sigMove.flags['charge']) details[\"Two-turn move\"] = \"\";\r\n\t\tif (sigMove.flags['recharge']) details[\"Has recharge turn\"] = \"\";\r\n\t\tif (sigMove.flags['gravity'] && dex.gen >= 4) details[\"Suppressed by Gravity\"] = \"x\";\r\n\t\tif (sigMove.flags['dance'] && dex.gen >= 7) details[\"Dance move\"] = \"\";\r\n\t\tif (sigMove.flags['slicing'] && dex.gen >= 9) details[\"Slicing move\"] = \"\";\r\n\t\tif (sigMove.flags['wind'] && dex.gen >= 9) details[\"Wind move\"] = \"\";\r\n\r\n\t\tif (sigMove.zMove?.basePower) {\r\n\t\t\tdetails[\"Z-Power\"] = String(sigMove.zMove.basePower);\r\n\t\t} else if (sigMove.zMove?.effect) {\r\n\t\t\tconst zEffects: { [k: string]: string } = {\r\n\t\t\t\tclearnegativeboost: \"Restores negative stat stages to 0\",\r\n\t\t\t\tcrit2: \"Crit ratio +2\",\r\n\t\t\t\theal: \"Restores HP 100%\",\r\n\t\t\t\tcurse: \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\r\n\t\t\t\tredirect: \"Redirects opposing attacks to user\",\r\n\t\t\t\thealreplacement: \"Restores replacement's HP 100%\",\r\n\t\t\t};\r\n\t\t\tdetails[\"Z-Effect\"] = zEffects[sigMove.zMove.effect];\r\n\t\t} else if (sigMove.zMove?.boost) {\r\n\t\t\tdetails[\"Z-Effect\"] = \"\";\r\n\t\t\tconst boost = sigMove.zMove.boost;\r\n\t\t\tlet statid: BoostID;\r\n\t\t\tfor (statid in boost) {\r\n\t\t\t\tdetails[\"Z-Effect\"] += ` ${Dex.stats.mediumNames[statid as StatID]} +${boost[statid]}`;\r\n\t\t\t}\r\n\t\t} else if (sigMove.isZ && typeof sigMove.isZ === 'string') {\r\n\t\t\tdetails[\"Z-Move\"] = \"\";\r\n\t\t\tconst zCrystal = dex.items.get(sigMove.isZ);\r\n\t\t\tdetails[\"Z-Crystal\"] = zCrystal.name;\r\n\t\t\tif (zCrystal.itemUser) {\r\n\t\t\t\tdetails[\"User\"] = zCrystal.itemUser.join(\", \");\r\n\t\t\t\tdetails[\"Required Move\"] = dex.items.get(sigMove.isZ).zMoveFrom!;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdetails[\"Z-Effect\"] = \"None\";\r\n\t\t}\r\n\r\n\t\tconst targetTypes: { [k: string]: string } = {\r\n\t\t\tnormal: \"One Adjacent Pok\\u00e9mon\",\r\n\t\t\tself: \"User\",\r\n\t\t\tadjacentAlly: \"One Ally\",\r\n\t\t\tadjacentAllyOrSelf: \"User or Ally\",\r\n\t\t\tadjacentFoe: \"One Adjacent Opposing Pok\\u00e9mon\",\r\n\t\t\tallAdjacentFoes: \"All Adjacent Opponents\",\r\n\t\t\tfoeSide: \"Opposing Side\",\r\n\t\t\tallySide: \"User's Side\",\r\n\t\t\tallyTeam: \"User's Side\",\r\n\t\t\tallAdjacent: \"All Adjacent Pok\\u00e9mon\",\r\n\t\t\tany: \"Any Pok\\u00e9mon\",\r\n\t\t\tall: \"All Pok\\u00e9mon\",\r\n\t\t\tscripted: \"Chosen Automatically\",\r\n\t\t\trandomNormal: \"Random Adjacent Opposing Pok\\u00e9mon\",\r\n\t\t\tallies: \"User and Allies\",\r\n\t\t};\r\n\t\tdetails[\"Target\"] = targetTypes[sigMove.target] || \"Unknown\";\r\n\t\tif (sigMove.isNonstandard === 'Unobtainable') {\r\n\t\t\tdetails[`Unobtainable in Gen ${dex.gen}`] = \"\";\r\n\t\t}\r\n\t\tif (sigMove.shortDesc || sigMove.desc) {\r\n\t\t\treturn <><hr />\r\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: Chat.getDataMoveHTML(sigMove) }}></span>\r\n\t\t\t\t<font size=\"1\">{Object.entries(details).map(([detail, value], idx, arr) => {\r\n\t\t\t\t\tconst lastEntry = idx === arr.length - 1;\r\n\t\t\t\t\tif (!value) return <>&#10003; {detail}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t\tif (value === 'x') return <>&#10007; {detail}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t\treturn <><font color=\"#686868\">{detail}:</font> {value}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t})}</font>\r\n\t\t\t\t{(sigMove.desc && sigMove.desc !== sigMove.shortDesc) &&\r\n\t\t\t\t\t<details><summary><strong>In-Depth Description</strong></summary>{sigMove.desc}</details>}\r\n\t\t\t</>;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass SSBItemHTML extends Chat.JSX.Component<{ set: SSBSet, dex: ModdedDex, baseDex: ModdedDex }> {\r\n\trender() {\r\n\t\tconst { set, dex, baseDex } = this.props;\r\n\t\tif (!Array.isArray(set.item)) {\r\n\t\t\tconst baseItem = baseDex.items.get(set.item);\r\n\t\t\tconst sigItem = dex.items.get(set.item);\r\n\t\t\tconst details: { [k: string]: string } = {\r\n\t\t\t\tGen: String(sigItem.gen),\r\n\t\t\t};\r\n\r\n\t\t\tif (dex.gen >= 4) {\r\n\t\t\t\tif (sigItem.fling) {\r\n\t\t\t\t\tdetails[\"Fling Base Power\"] = String(sigItem.fling.basePower);\r\n\t\t\t\t\tif (sigItem.fling.status) details[\"Fling Effect\"] = sigItem.fling.status;\r\n\t\t\t\t\tif (sigItem.fling.volatileStatus) details[\"Fling Effect\"] = sigItem.fling.volatileStatus;\r\n\t\t\t\t\tif (sigItem.isBerry) details[\"Fling Effect\"] = \"Activates the Berry's effect on the target.\";\r\n\t\t\t\t\tif (sigItem.id === 'whiteherb') details[\"Fling Effect\"] = \"Restores the target's negative stat stages to 0.\";\r\n\t\t\t\t\tif (sigItem.id === 'mentalherb') {\r\n\t\t\t\t\t\tconst flingEffect = \"Removes the effects of Attract, Disable, Encore, Heal Block, Taunt, and Torment from the target.\";\r\n\t\t\t\t\t\tdetails[\"Fling Effect\"] = flingEffect;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdetails[\"Fling\"] = \"This item cannot be used with Fling.\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (sigItem.naturalGift && dex.gen >= 3) {\r\n\t\t\t\tdetails[\"Natural Gift Type\"] = sigItem.naturalGift.type;\r\n\t\t\t\tdetails[\"Natural Gift Base Power\"] = String(sigItem.naturalGift.basePower);\r\n\t\t\t}\r\n\t\t\tif (sigItem.isNonstandard && sigItem.isNonstandard !== \"Custom\") {\r\n\t\t\t\tdetails[`Unobtainable in Gen ${dex.gen}`] = \"\";\r\n\t\t\t}\r\n\t\t\tif (!baseItem.exists || (baseItem.desc || baseItem.shortDesc) !== (sigItem.desc || sigItem.shortDesc)) {\r\n\t\t\t\treturn <><hr />\r\n\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: Chat.getDataItemHTML(sigItem) }}></span>\r\n\t\t\t\t\t<font size=\"1\">{Object.entries(details).map(([detail, value], idx, arr) => {\r\n\t\t\t\t\t\tconst lastEntry = idx === arr.length - 1;\r\n\t\t\t\t\t\tif (value === '') return <>{detail}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t\t\treturn <><font color=\"#686868\">{detail}:</font> {value}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t\t})}</font>\r\n\t\t\t\t</>;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <></>;\r\n\t}\r\n}\r\n\r\nclass SSBAbilityHTML extends Chat.JSX.Component<{ set: SSBSet, dex: ModdedDex, baseDex: ModdedDex }> {\r\n\trender() {\r\n\t\tconst { set, dex, baseDex } = this.props;\r\n\t\tconst customMegaAbilities = ['Sableye', 'Ampharos'];\r\n\t\tif (!Array.isArray(set.ability) &&\r\n\t\t\t(customMegaAbilities.includes(set.species) || !baseDex.abilities.get(set.ability).exists)) {\r\n\t\t\tlet sigAbil = baseDex.deepClone(dex.abilities.get(set.ability));\r\n\t\t\tif (customMegaAbilities.includes(set.species)) {\r\n\t\t\t\tconst megaAbil = dex.species.get(`${set.species}-Mega`).abilities[0];\r\n\t\t\t\tsigAbil = baseDex.deepClone(dex.abilities.get(megaAbil));\r\n\t\t\t}\r\n\t\t\tif (!sigAbil.desc && !sigAbil.shortDesc) {\r\n\t\t\t\tsigAbil.desc = `This ability doesn't have a description. Try contacting the SSB dev team.`;\r\n\t\t\t}\r\n\t\t\tconst details: { [k: string]: string } = {\r\n\t\t\t\tGen: String(sigAbil.gen || 9) || 'CAP',\r\n\t\t\t};\r\n\t\t\tif (sigAbil.flags['cantsuppress']) details[\"Not affected by Gastro Acid\"] = \"\";\r\n\t\t\tif (sigAbil.flags['breakable']) details[\"Ignored by Mold Breaker\"] = \"\";\r\n\t\t\treturn <><hr />\r\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: Chat.getDataAbilityHTML(sigAbil) }}></span>\r\n\t\t\t\t<font size=\"1\">{Object.entries(details).map(([detail, value], idx, arr) => {\r\n\t\t\t\t\tconst lastEntry = idx === arr.length - 1;\r\n\t\t\t\t\tif (value === '') return <>{detail}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t\treturn <><font color=\"#686868\">${detail}:</font> {value}{!lastEntry && <>&nbsp;|&ThickSpace;</>}</>;\r\n\t\t\t\t})}</font>\r\n\t\t\t\t{(sigAbil.desc && sigAbil.shortDesc && sigAbil.desc !== sigAbil.shortDesc) &&\r\n\t\t\t\t\t<details><summary><strong>In-Depth Description</strong></summary>{sigAbil.desc}</details>}\r\n\t\t\t</>;\r\n\t\t}\r\n\t\treturn <></>;\r\n\t}\r\n}\r\n\r\nclass SSBPokemonHTML extends Chat.JSX.Component<{ species: string, dex: ModdedDex, baseDex: ModdedDex }> {\r\n\trender() {\r\n\t\tconst { species, dex, baseDex } = this.props;\r\n\t\tconst origSpecies = baseDex.species.get(species);\r\n\t\tconst newSpecies = dex.species.get(species);\r\n\t\tlet weighthit = 20;\r\n\t\tif (newSpecies.weighthg >= 2000) {\r\n\t\t\tweighthit = 120;\r\n\t\t} else if (newSpecies.weighthg >= 1000) {\r\n\t\t\tweighthit = 100;\r\n\t\t} else if (newSpecies.weighthg >= 500) {\r\n\t\t\tweighthit = 80;\r\n\t\t} else if (newSpecies.weighthg >= 250) {\r\n\t\t\tweighthit = 60;\r\n\t\t} else if (newSpecies.weighthg >= 100) {\r\n\t\t\tweighthit = 40;\r\n\t\t}\r\n\t\tconst details: { [k: string]: string } = {\r\n\t\t\t\"Dex#\": String(newSpecies.num),\r\n\t\t\tGen: String(newSpecies.gen) || 'CAP',\r\n\t\t\tHeight: `${newSpecies.heightm} m`,\r\n\t\t};\r\n\t\tdetails[\"Weight\"] = `{newSpecies.weighthg / 10} kg <em>(${weighthit} BP)</em>`;\r\n\t\tif (newSpecies.color && dex.gen >= 5) details[\"Dex Colour\"] = newSpecies.color;\r\n\t\tif (newSpecies.eggGroups && dex.gen >= 2) details[\"Egg Group(s)\"] = newSpecies.eggGroups.join(\", \");\r\n\t\tconst evos: string[] = [];\r\n\t\tfor (const evoName of newSpecies.evos) {\r\n\t\t\tconst evo = dex.species.get(evoName);\r\n\t\t\tif (evo.gen <= dex.gen) {\r\n\t\t\t\tconst condition = evo.evoCondition ? ` ${evo.evoCondition}` : ``;\r\n\t\t\t\tswitch (evo.evoType) {\r\n\t\t\t\tcase 'levelExtra':\r\n\t\t\t\t\tevos.push(`${evo.name} (level-up${condition})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'levelFriendship':\r\n\t\t\t\t\tevos.push(`${evo.name} (level-up with high Friendship${condition})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'levelHold':\r\n\t\t\t\t\tevos.push(`${evo.name} (level-up holding ${evo.evoItem}${condition})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'useItem':\r\n\t\t\t\t\tevos.push(`${evo.name} (${evo.evoItem})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'levelMove':\r\n\t\t\t\t\tevos.push(`${evo.name} (level-up with ${evo.evoMove}${condition})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'other':\r\n\t\t\t\t\tevos.push(`${evo.name} (${evo.evoCondition})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'trade':\r\n\t\t\t\t\tevos.push(`${evo.name} (trade${evo.evoItem ? ` holding ${evo.evoItem}` : condition})`);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tevos.push(`${evo.name} (${evo.evoLevel}${condition})`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!evos.length) {\r\n\t\t\tdetails[`<font color=\"#686868\">Does Not Evolve</font>`] = \"\";\r\n\t\t} else {\r\n\t\t\tdetails[\"Evolution\"] = evos.join(\", \");\r\n\t\t}\r\n\t\tif (\r\n\t\t\tnewSpecies.types.join('/') !== origSpecies.types.join('/') ||\r\n\t\t\tObject.values(newSpecies.abilities).join('/') !== Object.values(origSpecies.abilities).join('/') ||\r\n\t\t\tObject.values(newSpecies.baseStats).join('/') !== Object.values(origSpecies.baseStats).join('/')\r\n\t\t) {\r\n\t\t\treturn <><hr />\r\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: Chat.getDataPokemonHTML(newSpecies, dex.gen, 'SSB') }}></span>\r\n\t\t\t\t<font size=\"1\">{Object.entries(details).map(([detail, value], idx, arr) => {\r\n\t\t\t\t\tconst lastEntry = idx === arr.length - 1;\r\n\t\t\t\t\tif (detail.includes('<font')) {\r\n\t\t\t\t\t\treturn <>\r\n\t\t\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n\t\t\t\t\t\t\t{!lastEntry && <>&nbsp;|&ThickSpace;</>}\r\n\t\t\t\t\t\t</>;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn <>\r\n\t\t\t\t\t\t<font color=\"#686868\">{detail}:</font> {}\r\n\t\t\t\t\t\t{value.includes('<em>') ? <span dangerouslySetInnerHTML={{ __html: value }}></span> : value}\r\n\t\t\t\t\t\t{!lastEntry && <>&nbsp;|&ThickSpace;</>}\r\n\t\t\t\t\t</>;\r\n\t\t\t\t})}</font>\r\n\t\t\t</>;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass SSBInnateHTML extends Chat.JSX.Component<{ name: string, dex: ModdedDex, baseDex: ModdedDex }> {\r\n\trender() {\r\n\t\tconst { name, dex, baseDex } = this.props;\r\n\t\t// Special casing for users whose usernames are already existing conditions/etc, i.e. dhelmise\r\n\t\tlet effect = dex.conditions.get(name + 'user');\r\n\t\tif (!effect.exists) effect = dex.conditions.get(name);\r\n\t\tconst longDesc = ``;\r\n\t\tconst baseAbility = baseDex.deepClone(baseDex.abilities.get('noability'));\r\n\t\t// @ts-expect-error\r\n\t\tif (effect.innateName) {\r\n\t\t\t// @ts-expect-error\r\n\t\t\tbaseAbility.name = effect.innateName;\r\n\t\t\tif (!effect.desc && !effect.shortDesc) {\r\n\t\t\t\tbaseAbility.desc = baseAbility.shortDesc = \"This innate does not have a description.\";\r\n\t\t\t}\r\n\t\t\tif (effect.desc) baseAbility.desc = effect.desc;\r\n\t\t\tif (effect.shortDesc) baseAbility.shortDesc = effect.shortDesc;\r\n\t\t\treturn <><hr />\r\n\t\t\t\tInnate Ability:<br />\r\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: Chat.getDataAbilityHTML(baseAbility) }}></span>\r\n\t\t\t\t<font size=\"1\"><font color=\"#686868\">Gen:</font> 9</font>\r\n\t\t\t\t{longDesc && <details><summary><strong>In-Depth Description</strong></summary>{longDesc}</details>}\r\n\t\t\t</>;\r\n\t\t}\r\n\t\treturn <></>;\r\n\t}\r\n}\r\n\r\nclass SSBSetsHTML extends Chat.JSX.Component<{ target: string }> {\r\n\trender() {\r\n\t\tconst target = this.props.target;\r\n\t\tconst targetID = toID(target);\r\n\t\tconst baseDex = Dex;\r\n\t\tconst dex = Dex.forFormat('gen9superstaffbrosultimate');\r\n\t\tif (!Object.keys(ssbSets).map(toID).includes(targetID)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`Error: ${target.trim()} doesn't have a [Gen 9] Super Staff Bros Ultimate set.`);\r\n\t\t}\r\n\t\tlet name = '';\r\n\t\tfor (const member in ssbSets) {\r\n\t\t\tif (toID(member) === targetID) name = member;\r\n\t\t}\r\n\t\tconst sets: string[] = [];\r\n\t\tfor (const set in ssbSets) {\r\n\t\t\tif (!set.startsWith(name)) continue;\r\n\t\t\tif (!ssbSets[set].skip && set !== name) continue;\r\n\t\t\tsets.push(set);\r\n\t\t}\r\n\t\treturn sets.map(setName => {\r\n\t\t\tconst set = ssbSets[setName];\r\n\t\t\tconst mutatedSpecies = dex.species.get(set.species);\r\n\t\t\tconst item = dex.items.get(set.item as string);\r\n\t\t\tconst sigMove = baseDex.moves.get(set.signatureMove).exists && !Array.isArray(set.item) &&\r\n\t\t\t\ttypeof item.zMove === 'string' ?\r\n\t\t\t\tdex.moves.get(item.zMove) : dex.moves.get(set.signatureMove);\r\n\t\t\treturn <>{!set.skip ? <h1><psicon pokemon={mutatedSpecies.id} />{setName}</h1> :\r\n\t\t\t\t<span dangerouslySetInnerHTML={{ __html: `<details><summary><psicon pokemon=\"${set.species}\" /><strong>` +\r\n\t\t\t\t\t`${`${setName.split('-').slice(1).join('-')} forme`}</strong></summary>` }}\r\n\t\t\t\t></span>}\r\n\t\t\t<SSBSetHTML set={set} dex={dex} baseDex={baseDex} />\r\n\t\t\t{(!set.skip || set.signatureMove !== ssbSets[set.skip].signatureMove) && <SSBMoveHTML sigMove={sigMove} dex={dex} />}\r\n\t\t\t<SSBItemHTML set={set} dex={dex} baseDex={baseDex} />\r\n\t\t\t<SSBAbilityHTML set={set} dex={dex} baseDex={baseDex} />\r\n\t\t\t<SSBInnateHTML name={setName} dex={dex} baseDex={baseDex} />\r\n\t\t\t<SSBPokemonHTML species={set.species} dex={dex} baseDex={baseDex} />\r\n\t\t\t{(!Array.isArray(set.item) && item.megaStone) &&\r\n\t\t\t\t<SSBPokemonHTML species={item.megaStone} dex={dex} baseDex={baseDex} />}\r\n\t\t\t\t// keys and Kennedy have an itemless forme change\r\n\t\t\t{['Rayquaza'].includes(set.species) && <SSBPokemonHTML species={`${set.species}-Mega`} dex={dex} baseDex={baseDex} />}\r\n\t\t\t{['Cinderace'].includes(set.species) && <SSBPokemonHTML species={`${set.species}-Gmax`} dex={dex} baseDex={baseDex} />}\r\n\t\t\t{set.skip && <span dangerouslySetInnerHTML={{ __html: `</details>` }}></span>}</>;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const disabledSets = Chat.oldPlugins.ssb?.disabledSets || [];\r\n\r\nfunction enforceDisabledSets() {\r\n\tfor (const process of Rooms.PM.processes) {\r\n\t\tprocess.getProcess().send(`EVAL\\n\\nConfig.disabledssbsets = ${JSON.stringify(disabledSets)}`);\r\n\t}\r\n}\r\n\r\nenforceDisabledSets();\r\n\r\nexport const commands: Chat.ChatCommands = {\r\n\tssb(target, room, user) {\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tif (!target) return this.parse(`/help ssb`);\r\n\t\treturn this.sendReplyBox(<SSBSetsHTML target={target} />);\r\n\t},\r\n\tssbhelp: [\r\n\t\t`/ssb [staff member] - Displays a staff member's Super Staff Bros. set and custom features.`,\r\n\t],\r\n\tenablessbset: 'disablessbset',\r\n\tdisablessbset(target, room, user, connection, cmd) {\r\n\t\tthis.checkCan('rangeban');\r\n\t\ttarget = toID(target);\r\n\t\tif (!Object.keys(ssbSets).map(toID).includes(target as ID)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`${target} has no SSB set.`);\r\n\t\t}\r\n\t\tconst disableIdx = disabledSets.indexOf(target);\r\n\t\tif (cmd.startsWith('enable')) {\r\n\t\t\tif (disableIdx < 0) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`${target}'s set is not disabled.`);\r\n\t\t\t}\r\n\t\t\tdisabledSets.splice(disableIdx, 1);\r\n\t\t\tthis.privateGlobalModAction(`${user.name} enabled ${target}'s SSB set.`);\r\n\t\t} else {\r\n\t\t\tif (disableIdx > -1) {\r\n\t\t\t\tthrow new Chat.ErrorMessage(`That set is already disabled.`);\r\n\t\t\t}\r\n\t\t\tdisabledSets.push(target);\r\n\t\t\tthis.privateGlobalModAction(`${user.name} disabled the SSB set for ${target}`);\r\n\t\t}\r\n\t\tenforceDisabledSets();\r\n\t},\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
