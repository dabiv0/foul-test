{
  "version": 3,
  "sources": ["../../../server/chat-plugins/room-faqs.ts"],
  "sourcesContent": ["import { FS, Utils } from '../../lib';\r\n\r\nexport const ROOMFAQ_FILE = 'config/chat-plugins/faqs.json';\r\nconst MAX_ROOMFAQ_LENGTH = 8192;\r\nconst MAX_HTML_ROOMFAQ_LENGTH = 10000;\r\n\r\nexport const roomFaqs: { [k: string]: { [k: string]: RoomFAQ } } = (() => {\r\n\tconst data = JSON.parse(FS(ROOMFAQ_FILE).readIfExistsSync() || \"{}\");\r\n\tlet save = false;\r\n\tfor (const k in data) {\r\n\t\tfor (const name in data[k]) {\r\n\t\t\tif (typeof data[k][name] === 'string') {\r\n\t\t\t\tdata[k][name] = convertFaq(data[k][name]);\r\n\t\t\t\tsave = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (save) saveRoomFaqs(data);\r\n\treturn data;\r\n})();\r\n\r\ninterface RoomFAQ {\r\n\tsource: string;\r\n\talias?: boolean;\r\n\thtml?: boolean;\r\n}\r\n\r\nfunction saveRoomFaqs(table?: { [k: string]: { [k: string]: RoomFAQ } }) {\r\n\tFS(ROOMFAQ_FILE).writeUpdate(() => JSON.stringify(table || roomFaqs));\r\n}\r\n\r\nfunction convertFaq(faq: string): RoomFAQ {\r\n\tif (faq.startsWith('>')) {\r\n\t\treturn {\r\n\t\t\talias: true,\r\n\t\t\tsource: faq.slice(1),\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tsource: faq,\r\n\t};\r\n}\r\n\r\nexport function visualizeFaq(faq: RoomFAQ) {\r\n\tif (faq.html) {\r\n\t\treturn faq.source;\r\n\t}\r\n\treturn Chat.formatText(faq.source, true);\r\n}\r\n\r\nexport function getAlias(roomid: RoomID, key: string) {\r\n\tif (!roomFaqs[roomid]) return false;\r\n\tconst value = roomFaqs[roomid][key];\r\n\tif (value?.alias) return value.source;\r\n\treturn false;\r\n}\r\n\r\nexport const commands: Chat.ChatCommands = {\r\n\taddhtmlfaq: 'addfaq',\r\n\taddfaq(target, room, user, connection) {\r\n\t\troom = this.requireRoom();\r\n\t\tconst useHTML = this.cmd.includes('html');\r\n\t\tthis.checkCan('ban', null, room);\r\n\t\tif (useHTML && !user.can('addhtml', null, room, this.fullCmd)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`You are not allowed to use raw HTML in roomfaqs.`);\r\n\t\t}\r\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\r\n\t\tif (!target) return this.parse('/help roomfaq');\r\n\r\n\t\ttarget = target.trim();\r\n\t\tconst input = this.filter(target);\r\n\t\tif (target !== input) throw new Chat.ErrorMessage(\"You are not allowed to use fitered words in roomfaq entries.\");\r\n\t\tlet [topic, ...rest] = input.split(',');\r\n\r\n\t\ttopic = toID(topic);\r\n\t\tif (!(topic && rest.length)) return this.parse('/help roomfaq');\r\n\t\tlet text = rest.join(',').trim();\r\n\t\tif (topic.length > 25) throw new Chat.ErrorMessage(\"FAQ topics should not exceed 25 characters.\");\r\n\r\n\t\tconst lengthWithoutFormatting = Chat.stripFormatting(text).length;\r\n\t\tif (lengthWithoutFormatting > (useHTML ? MAX_HTML_ROOMFAQ_LENGTH : MAX_ROOMFAQ_LENGTH)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`FAQ entries must not exceed ${(useHTML ? MAX_HTML_ROOMFAQ_LENGTH : MAX_ROOMFAQ_LENGTH)} characters.`);\r\n\t\t} else if (lengthWithoutFormatting < 1) {\r\n\t\t\tthrow new Chat.ErrorMessage(`FAQ entries must include at least one character.`);\r\n\t\t}\r\n\r\n\t\tif (!useHTML) {\r\n\t\t\ttext = text.replace(/^>/, '&gt;');\r\n\t\t} else {\r\n\t\t\ttext = text.replace(/\\n/ig, '<br />');\r\n\t\t\ttext = this.checkHTML(text);\r\n\t\t}\r\n\r\n\t\tif (!roomFaqs[room.roomid]) roomFaqs[room.roomid] = {};\r\n\t\tconst exists = topic in roomFaqs[room.roomid];\r\n\t\troomFaqs[room.roomid][topic] = {\r\n\t\t\tsource: text,\r\n\t\t\thtml: useHTML,\r\n\t\t};\r\n\t\tsaveRoomFaqs();\r\n\t\tthis.sendReplyBox(visualizeFaq(roomFaqs[room.roomid][topic]));\r\n\t\tthis.privateModAction(`${user.name} ${exists ? 'edited' : 'added'} an FAQ for '${topic}'`);\r\n\t\tthis.modlog('RFAQ', null, `${exists ? 'edited' : 'added'} '${topic}'`);\r\n\t},\r\n\tremovefaq(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkChat();\r\n\t\tthis.checkCan('ban', null, room);\r\n\t\tconst topic = toID(target);\r\n\t\tif (!topic) return this.parse('/help roomfaq');\r\n\r\n\t\tif (!roomFaqs[room.roomid]?.[topic]) throw new Chat.ErrorMessage(\"Invalid topic.\");\r\n\t\tif (\r\n\t\t\troom.settings.repeats?.length &&\r\n\t\t\troom.settings.repeats.filter(x => x.faq && x.id === topic).length\r\n\t\t) {\r\n\t\t\tthis.parse(`/msgroom ${room.roomid},/removerepeat ${topic}`);\r\n\t\t}\r\n\t\tdelete roomFaqs[room.roomid][topic];\r\n\t\tObject.keys(roomFaqs[room.roomid]).filter(\r\n\t\t\tval => getAlias(room.roomid, val) === topic\r\n\t\t).map(\r\n\t\t\tval => delete roomFaqs[room.roomid][val]\r\n\t\t);\r\n\t\tif (!Object.keys(roomFaqs[room.roomid]).length) delete roomFaqs[room.roomid];\r\n\t\tsaveRoomFaqs();\r\n\t\tthis.privateModAction(`${user.name} removed the FAQ for '${topic}'`);\r\n\t\tthis.modlog('ROOMFAQ', null, `removed ${topic}`);\r\n\t\tthis.refreshPage(`roomfaqs-${room.roomid}`);\r\n\t},\r\n\taddalias(target, room, user) {\r\n\t\troom = this.requireRoom();\r\n\t\tthis.checkChat();\r\n\t\tthis.checkCan('ban', null, room);\r\n\t\tif (!room.persist) throw new Chat.ErrorMessage(\"This command is unavailable in temporary rooms.\");\r\n\t\tconst [alias, topic] = target.split(',').map(val => toID(val));\r\n\r\n\t\tif (!(alias && topic)) return this.parse('/help roomfaq');\r\n\t\tif (alias.length > 25) throw new Chat.ErrorMessage(\"FAQ topics should not exceed 25 characters.\");\r\n\t\tif (alias === topic) throw new Chat.ErrorMessage(\"You cannot make the alias have the same name as the topic.\");\r\n\t\tif (roomFaqs[room.roomid][alias] && !roomFaqs[room.roomid][alias].alias) {\r\n\t\t\tthrow new Chat.ErrorMessage(\"You cannot overwrite an existing topic with an alias; please delete the topic first.\");\r\n\t\t}\r\n\r\n\t\tif (!(roomFaqs[room.roomid] && topic in roomFaqs[room.roomid])) {\r\n\t\t\tthrow new Chat.ErrorMessage(`The topic ${topic} was not found in this room's faq list.`);\r\n\t\t}\r\n\t\tif (getAlias(room.roomid, topic)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`You cannot make an alias of an alias. Use /addalias ${alias}, ${getAlias(room.roomid, topic)} instead.`);\r\n\t\t}\r\n\t\troomFaqs[room.roomid][alias] = {\r\n\t\t\talias: true,\r\n\t\t\tsource: topic,\r\n\t\t};\r\n\t\tsaveRoomFaqs();\r\n\t\tthis.privateModAction(`${user.name} added an alias for '${topic}': ${alias}`);\r\n\t\tthis.modlog('ROOMFAQ', null, `alias for '${topic}' - ${alias}`);\r\n\t},\r\n\tviewfaq: 'roomfaq',\r\n\trfaq: 'roomfaq',\r\n\troomfaq(target, room, user, connection, cmd) {\r\n\t\troom = this.requireRoom();\r\n\t\tif (!roomFaqs[room.roomid]) throw new Chat.ErrorMessage(\"This room has no FAQ topics.\");\r\n\t\tlet topic: string = toID(target);\r\n\t\tif (topic === 'constructor') return false;\r\n\t\tif (!topic) {\r\n\t\t\treturn this.parse(`/join view-roomfaqs-${room.roomid}`);\r\n\t\t}\r\n\t\ttopic = getAlias(room.roomid, topic) || topic;\r\n\r\n\t\tif (!roomFaqs[room.roomid][topic]) {\r\n\t\t// tries to find a FAQ of same topic if RFAQ topic fails\r\n\t\t\tconst faqCommand = Chat.commands['faq'] as Chat.ChatHandler;\r\n\t\t\tif (typeof faqCommand === 'function') {\r\n\t\t\t\tconst normalized = toID(target);\r\n\t\t\t\tconst validTopics = [\r\n\t\t\t\t\t'staff', 'autoconfirmed', 'ac', 'ladder', 'ladderhelp', 'decay',\r\n\t\t\t\t\t'tiering', 'tiers', 'tier', 'badge', 'badges', 'badgeholders',\r\n\t\t\t\t\t'rng', 'tournaments', 'tournament', 'tours', 'tour', 'vpn',\r\n\t\t\t\t\t'proxy', 'ca', 'customavatar', 'customavatars', 'privacy',\r\n\t\t\t\t\t'lostpassword', 'password', 'lostpass',\r\n\t\t\t\t];\r\n\t\t\t\tif (!validTopics.includes(normalized)) {\r\n\t\t\t\t\treturn this.errorReply(`'${target}' is an invalid topic.`);\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.runBroadcast()) return;\r\n\t\t\t\treturn faqCommand.call(this, target, room, user, connection, 'faq', '!');\r\n\t\t\t}\r\n\t\t\treturn this.errorReply(\"Invalid topic.\");\r\n\t\t}\r\n\r\n\t\tif (!this.runBroadcast()) return;\r\n\t\tconst rfaq = roomFaqs[room.roomid][topic];\r\n\t\tthis.sendReplyBox(visualizeFaq(rfaq));\r\n\t\tif (!this.broadcasting && user.can('ban', null, room, 'addfaq')) {\r\n\t\t\tconst code = Utils.escapeHTML(rfaq.source).replace(/\\n/g, '<br />');\r\n\t\t\tconst command = rfaq.html ? 'addhtmlfaq' : 'addfaq';\r\n\t\t\tthis.sendReplyBox(`<details><summary>Source</summary><code style=\"white-space: pre-wrap; display: table; tab-size: 3\">/${command} ${topic}, ${code}</code></details>`);\r\n\t\t}\r\n\t},\r\n\troomfaqhelp: [\r\n\t\t`/roomfaq - Shows the list of all available FAQ topics`,\r\n\t\t`/roomfaq <topic> - Shows the FAQ for <topic>.`,\r\n\t\t`/addfaq <topic>, <text> - Adds an entry for <topic> in this room or updates it. Requires: @ # ~`,\r\n\t\t`/addhtmlfaq <topic>, <text> - Adds or updates an entry for <topic> with HTML support. Requires: # ~`,\r\n\t\t`/addalias <alias>, <topic> - Adds <alias> as an alias for <topic>, displaying it when users use /roomfaq <alias>. Requires: @ # ~`,\r\n\t\t`/removefaq <topic> - Removes the entry for <topic> in this room. If used on an alias, removes the alias. Requires: @ # ~`,\r\n\t],\r\n};\r\n\r\nexport const pages: Chat.PageTable = {\r\n\troomfaqs(args, user) {\r\n\t\tconst room = this.requireRoom();\r\n\t\tthis.title = `[Room FAQs]`;\r\n\t\t// allow it for users if they can access the room\r\n\t\tif (!room.checkModjoin(user)) {\r\n\t\t\tthrow new Chat.ErrorMessage(`<h2>Access denied.</h2>`);\r\n\t\t}\r\n\t\tlet buf = `<div class=\"pad\"><button style=\"float:right;\" class=\"button\" name=\"send\" value=\"/join view-roomfaqs-${room.roomid}\"><i class=\"fa fa-refresh\"></i> Refresh</button>`;\r\n\t\tif (!roomFaqs[room.roomid]) {\r\n\t\t\treturn `${buf}<h2>This room has no FAQs.</h2></div>`;\r\n\t\t}\r\n\r\n\t\tbuf += `<h2>FAQs for ${room.title}:</h2>`;\r\n\t\tconst keys = Object.keys(roomFaqs[room.roomid]);\r\n\t\tconst sortedKeys = Utils.sortBy(keys.filter(val => !getAlias(room.roomid, val)));\r\n\t\tfor (const key of sortedKeys) {\r\n\t\t\tconst topic = roomFaqs[room.roomid][key];\r\n\t\t\tbuf += `<div class=\"infobox\">`;\r\n\t\t\tbuf += `<h3>${key}</h3>`;\r\n\t\t\tbuf += `<hr />`;\r\n\t\t\tbuf += visualizeFaq(topic);\r\n\t\t\tconst aliases = keys.filter(val => getAlias(room.roomid, val) === key);\r\n\t\t\tif (aliases.length) {\r\n\t\t\t\tbuf += `<hr /><strong>Aliases:</strong> ${aliases.join(', ')}`;\r\n\t\t\t}\r\n\t\t\tif (user.can('ban', null, room, 'addfaq')) {\r\n\t\t\t\tconst src = Utils.escapeHTML(topic.source).replace(/\\n/g, `<br />`);\r\n\t\t\t\tconst command = topic.html ? 'addhtmlfaq' : 'addfaq';\r\n\t\t\t\tbuf += `<hr /><details><summary>Raw text</summary>`;\r\n\t\t\t\tbuf += `<code style=\"white-space: pre-wrap; display: table; tab-size: 3;\">/${command} ${key}, ${src}</code></details>`;\r\n\t\t\t\tbuf += `<hr /><button class=\"button\" name=\"send\" value=\"/msgroom ${room.roomid},/removefaq ${key}\">Delete FAQ</button>`;\r\n\t\t\t}\r\n\t\t\tbuf += `</div>`;\r\n\t\t}\r\n\t\tbuf += `</div>`;\r\n\t\treturn buf;\r\n\t},\r\n};\r\n\r\nexport const handlers: Chat.Handlers = {\r\n\tonRenameRoom(oldID, newID) {\r\n\t\tif (roomFaqs[oldID]) {\r\n\t\t\tif (!roomFaqs[newID]) roomFaqs[newID] = {};\r\n\t\t\tObject.assign(roomFaqs[newID], roomFaqs[oldID]);\r\n\t\t\tdelete roomFaqs[oldID];\r\n\t\t\tsaveRoomFaqs();\r\n\t\t}\r\n\t},\r\n};\r\n\r\nprocess.nextTick(() => {\r\n\tChat.multiLinePattern.register('/add(htmlfaq|faq) ');\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
